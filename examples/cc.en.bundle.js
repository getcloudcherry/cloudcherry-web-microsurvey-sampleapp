(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("cc", [], factory);
	else if(typeof exports === 'object')
		exports["cc"] = factory();
	else
		root["cc"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Templates_1 = __webpack_require__(2);
var DomUtilities = /** @class */ (function () {
    function DomUtilities() {
        // HTMLElement.prototype.matches = HTMLElement.prototype.matches ||
        // HTMLElement.prototype.matchesSelector ||
        // HTMLElement.prototype.webkitMatchesSelector ||
        // HTMLElement.prototype.mozMatchesSelector ||
        // HTMLElement.prototype.msMatchesSelector ||
        // HTMLElement.prototype.oMatchesSelector;
    }
    DomUtilities.prototype.get = function (selector) {
        return document.querySelectorAll(selector);
    };
    DomUtilities.prototype.appendStyle = function (css) {
        var head = document.head || document.getElementsByTagName('head')[0];
        var style = document.createElement('style');
        style.type = 'text/css';
        if (style.styleSheet) {
            style.styleSheet.cssText = css;
        }
        else {
            style.appendChild(document.createTextNode(css));
        }
        head.appendChild(style);
    };
    DomUtilities.prototype.remove = function (el) {
        el.parentNode.removeChild(el);
    };
    DomUtilities.prototype.removeAll = function (elements) {
        Array.prototype.forEach.call(elements, function (el, i) {
            el.parentNode.removeChild(el);
        });
    };
    DomUtilities.prototype.css = function (elements, property, value) {
        Array.prototype.forEach.call(elements, function (el, i) {
            el.style[property] = value;
        });
    };
    DomUtilities.prototype.removeClassAll = function (elements, className) {
        var _this = this;
        Array.prototype.forEach.call(elements, function (el, i) {
            _this.removeClass(el, className);
        });
    };
    DomUtilities.prototype.addClassAll = function (elements, className) {
        var _this = this;
        Array.prototype.forEach.call(elements, function (el, i) {
            _this.addClass(el, className);
        });
    };
    DomUtilities.prototype.removeClass = function (el, className) {
        // console.log(el);
        if (el.classList)
            el.classList.remove(className);
        else
            el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
    };
    DomUtilities.prototype.addClass = function (el, className) {
        if (el.classList)
            el.classList.add(className);
        else
            el.className += ' ' + className;
    };
    DomUtilities.prototype.toggleClass = function (el, className) {
        if (el.classList) {
            if (el.classList.contains(className))
                el.classList.remove(className);
            else
                el.classList.add(className);
        }
    };
    DomUtilities.prototype.ready = function (fn) {
        if (document.attachEvent ? document.readyState === "complete" : document.readyState !== "loading") {
            fn();
        }
        else {
            document.addEventListener('DOMContentLoaded', fn);
        }
    };
    DomUtilities.prototype.getParents = function (el, parentSelector) {
        // If no parentSelector defined will bubble up all the way to *document*
        if (parentSelector === undefined) {
            parentSelector = document;
        }
        var parents = [];
        var p = el.parentNode;
        while (p !== parentSelector) {
            var o = p;
            parents.push(o);
            p = o.parentNode;
        }
        parents.push(parentSelector); // Push that parentSelector you wanted to stop at
        return parents;
    };
    DomUtilities.prototype.listener = function (el, evt, sel, handler) {
        var internalHandler = function (event) {
            var t = event.target;
            while (t && t !== this) {
                if (t.matches(sel)) {
                    handler.call(t, event);
                }
                t = t.parentNode;
            }
        };
        el.addEventListener(evt, internalHandler);
        return internalHandler;
    };
    DomUtilities.prototype.initListener = function (type, id, cb) {
        var ref = {
            id: id,
            type: type,
            cb: cb,
            internalHandler: undefined,
        };
        return ref;
    };
    DomUtilities.prototype.checkIfListenerExists = function (id, ar) {
        for (var _i = 0, ar_1 = ar; _i < ar_1.length; _i++) {
            var listener = ar_1[_i];
            if (listener.id == id) {
                return true;
            }
        }
        return false;
    };
    DomUtilities.prototype.on = function (evt, el, handler) {
        el.addEventListener(evt, handler);
    };
    DomUtilities.prototype.off = function (evt, el, handler) {
        el.removeEventListener(evt, handler);
    };
    DomUtilities.prototype.removeListener = function (el, evt, handler) {
        el.removeEventListener(evt, handler);
    };
    DomUtilities.prototype.trigger = function (el, eventName, data) {
        if (typeof CustomEvent === 'function') {
            var event = new CustomEvent(eventName, { detail: data });
        }
        else {
            var event = document.createEvent('CustomEvent');
            event.initCustomEvent(eventName, true, true, data);
        }
        el.dispatchEvent(event);
    };
    DomUtilities.prototype.removeTrigger = function (el, eventName) {
        el.removeEventListener(eventName);
    };
    DomUtilities.prototype.shadeBlendConvert = function (p, from, to) {
        if (typeof (p) != "number" || p < -1 || p > 1 || typeof (from) != "string" || (from[0] != 'r' && from[0] != '#') || (typeof (to) != "string" && typeof (to) != "undefined"))
            return null; //ErrorCheck
        if (!this.sbcRip)
            this.sbcRip = function (d) {
                var l = d.length, RGB = new Object();
                if (l > 9) {
                    d = d.split(",");
                    if (d.length < 3 || d.length > 4)
                        return null; //ErrorCheck
                    RGB[0] = i(d[0].slice(4)), RGB[1] = i(d[1]), RGB[2] = i(d[2]), RGB[3] = d[3] ? parseFloat(d[3]) : -1;
                }
                else {
                    if (l == 8 || l == 6 || l < 4)
                        return null; //ErrorCheck
                    if (l < 6)
                        d = "#" + d[1] + d[1] + d[2] + d[2] + d[3] + d[3] + (l > 4 ? d[4] + "" + d[4] : ""); //3 digit
                    d = i(d.slice(1), 16), RGB[0] = d >> 16 & 255, RGB[1] = d >> 8 & 255, RGB[2] = d & 255, RGB[3] = l == 9 || l == 5 ? r(((d >> 24 & 255) / 255) * 10000) / 10000 : -1;
                }
                return RGB;
            };
        var i = parseInt, r = Math.round, h = from.length > 9, h = typeof (to) == "string" ? to.length > 9 ? true : to == "c" ? !h : false : h, b = p < 0, p = b ? p * -1 : p, to = to && to != "c" ? to : b ? "#000000" : "#FFFFFF", f = this.sbcRip(from), t = this.sbcRip(to);
        if (!f || !t)
            return null; //ErrorCheck
        if (h)
            return "rgb(" + r((t[0] - f[0]) * p + f[0]) + "," + r((t[1] - f[1]) * p + f[1]) + "," + r((t[2] - f[2]) * p + f[2]) + (f[3] < 0 && t[3] < 0 ? ")" : "," + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 10000) / 10000 : t[3] < 0 ? f[3] : t[3]) + ")");
        else
            return "#" + (0x100000000 + (f[3] > -1 && t[3] > -1 ? r(((t[3] - f[3]) * p + f[3]) * 255) : t[3] > -1 ? r(t[3] * 255) : f[3] > -1 ? r(f[3] * 255) : 255) * 0x1000000 + r((t[0] - f[0]) * p + f[0]) * 0x10000 + r((t[1] - f[1]) * p + f[1]) * 0x100 + r((t[2] - f[2]) * p + f[2])).toString(16).slice(f[3] > -1 || t[3] > -1 ? 1 : 3);
    };
    DomUtilities.prototype.hexToRGB = function (hex, alpha) {
        if (!hex || [4, 7].indexOf(hex.length) === -1) {
            return; // throw new Error('Bad Hex');
        }
        hex = hex.substr(1);
        // if shortcuts (#F00) -> set to normal (#FF0000)
        if (hex.length === 3) {
            hex = hex.split('').map(function (el) {
                return el + el + '';
            }).join('');
        }
        var r = parseInt(hex.slice(0, 2), 16), g = parseInt(hex.slice(2, 4), 16), b = parseInt(hex.slice(4, 6), 16);
        if (alpha) {
            return "rgba(" + r + ", " + g + ", " + b + ", " + alpha + ")";
        }
        else {
            return "rgb(" + r + ", " + g + ", " + b + ")";
        }
    };
    DomUtilities.prototype.arrayContains = function (needle) {
        // Per spec, the way to identify NaN is that it is not equal to itself
        var findNaN = needle !== needle;
        var indexOf;
        if (!findNaN && typeof Array.prototype.indexOf === 'function') {
            indexOf = Array.prototype.indexOf;
        }
        else {
            indexOf = function (needle) {
                var i = -1, index = -1;
                for (i = 0; i < this.length; i++) {
                    var item = this[i];
                    if ((findNaN && item !== item) || item === needle) {
                        index = i;
                        break;
                    }
                }
                return index;
            };
        }
        return indexOf.call(this, needle) > -1;
    };
    DomUtilities.prototype.generateSelectOptions = function (arr) {
        if (Array.isArray(arr)) {
            var i = 0;
            var res = '';
            for (i = 0; i < arr.length; i++) {
                res += '<option value="' + arr[i] + '">' + arr[i] + '</option>';
            }
            return res;
        }
    };
    DomUtilities.prototype.checkOptionContainsImage = function (arr) {
        if (Array.isArray(arr)) {
            var i = 0;
            var res = true;
            for (i = 0; i < arr.length; i++) {
                var opt = arr[i];
                res = res && opt.includes(';') && opt.includes('.');
            }
            return res;
        }
    };
    DomUtilities.prototype.generateRadioImageOptions = function (arr, id) {
        if (Array.isArray(arr)) {
            var i = 0;
            var res = '';
            for (i = 0; i < arr.length; i++) {
                var optHtml = Templates_1.templates.option_radio_image;
                var opt = arr[i].split(';');
                //  optHtml = optHtml.replace(/{{image}}/g, Config.CDN_URL+opt[1] );
                optHtml = optHtml.replace(/{{image}}/g, 'https://cx.getcloudcherry.com/microsurvey-assets/' + opt[0] + '_selected.svg');
                optHtml = optHtml.replace(/{{qId}}/g, "nm" + id);
                optHtml = optHtml.replace(/{{label}}/g, opt[0]);
                optHtml = optHtml.replace(/{{value}}/g, opt[0]);
                res += optHtml;
            }
            return res;
        }
    };
    DomUtilities.prototype.generateCheckboxOptions = function (arr, id) {
        if (Array.isArray(arr)) {
            var i = 0;
            var res = '';
            for (i = 0; i < arr.length; i++) {
                var optHtml = Templates_1.templates.option_checkbox;
                var opt = arr[i].split(';');
                optHtml = optHtml.replace(/{{label}}/g, arr[i]);
                res += optHtml;
            }
            return res;
        }
    };
    return DomUtilities;
}());
exports.DomUtilities = DomUtilities;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

//Survey Manager manages and queues survey.
Object.defineProperty(exports, "__esModule", { value: true });
var SurveyManager = /** @class */ (function () {
    function SurveyManager() {
    }
    SurveyManager.initializeSurvey = function (surveyId) {
        //check if survey ran?
        //do survey initialization.
        SurveyManager.surveyInstances[surveyId].setupSurvey();
    };
    SurveyManager.addSurvey = function (surveyId) {
        console.log("Adding survey ID : " + surveyId);
        SurveyManager.surveyQueue.push(surveyId);
        if (SurveyManager.processQueueInterval == null) {
            SurveyManager.processQueueInterval = setInterval(SurveyManager.processQueueIntervalCB, 100);
        }
    };
    SurveyManager.removeSurvey = function (surveyId) {
        if (SurveyManager.surveyQueue.length > 0) {
            for (var survey in SurveyManager.surveyQueue) {
                if (SurveyManager.surveyQueue[survey].surveyId == surveyId) {
                    SurveyManager.surveyQueue.splice(survey, 1);
                    break;
                }
            }
        }
        if (SurveyManager.surveyQueue.length == 0) {
            clearInterval(SurveyManager.processQueueInterval);
        }
    };
    SurveyManager.processQueueIntervalCB = function () {
        if (window.globalSurveyRunning == true) {
            return;
        }
        else {
            var surveyId = SurveyManager.surveyQueue.pop();
            console.log("Processing survey ID " + surveyId);
            if (surveyId == undefined) {
                clearInterval(SurveyManager.processQueueInterval);
                SurveyManager.processQueueInterval = null;
            }
            else {
                window.globalSurveyRunning = true;
                SurveyManager.initializeSurvey(surveyId);
            }
        }
    };
    SurveyManager.setSurveyRunning = function () {
    };
    SurveyManager.surveyQueue = [];
    SurveyManager.processQueueInterval = null;
    SurveyManager.surveyInstances = {};
    return SurveyManager;
}());
exports.SurveyManager = SurveyManager;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(10);
var QuestionSurvey = __webpack_require__(15);
var QuestionStart = __webpack_require__(16);
var QuestionSingleline = __webpack_require__(17);
var QuestionNumber = __webpack_require__(18);
var QuestionMultiline = __webpack_require__(19);
var QuestionCheckbox = __webpack_require__(20);
var QuestionRadio = __webpack_require__(21);
var QuestionRadioMore = __webpack_require__(22);
var QuestionRadioImage = __webpack_require__(23);
var QuestionScale = __webpack_require__(24);
var QuestionNPS = __webpack_require__(25);
var QuestionSelect = __webpack_require__(26);
var QuestionSmile = __webpack_require__(27);
var QuestionStar = __webpack_require__(28);
var QuestionSlider = __webpack_require__(29);
var OptionRadioImage = __webpack_require__(30);
var OptionCheckbox = __webpack_require__(31);
var ThankYou = __webpack_require__(32);
var templates = {
    question_survey: "",
    question_start: "",
    question_text: "",
    question_number: "",
    question_scale: "",
    question_nps: "",
    question_multi_line_text: "",
    question_multi_select: "",
    question_radio_more: "",
    question_radio: "",
    question_radio_image: "",
    question_checkbox: "",
    question_select: "",
    question_smile_5: "",
    question_star_5: "",
    question_slider: "",
    option_radio_image: "",
    option_checkbox: "",
    thankyou: "",
};
exports.templates = templates;
templates.question_survey = QuestionSurvey;
templates.question_start = QuestionStart;
templates.question_text = QuestionSingleline;
templates.question_number = QuestionNumber;
templates.question_scale = QuestionScale;
templates.question_nps = QuestionNPS;
templates.question_slider = QuestionSlider;
templates.question_multi_line_text = QuestionMultiline;
templates.question_multi_select = QuestionSelect;
templates.question_select = QuestionSelect;
templates.question_smile_5 = QuestionSmile;
templates.question_star_5 = QuestionStar;
templates.question_checkbox = QuestionCheckbox;
templates.question_radio = QuestionRadio;
templates.question_radio_more = QuestionRadioMore;
templates.question_radio_image = QuestionRadioImage;
templates.option_radio_image = OptionRadioImage;
templates.option_checkbox = OptionCheckbox;
templates.thankyou = ThankYou;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Cookie = /** @class */ (function () {
    function Cookie() {
    }
    /**
     * Set/Overwrite a cookie value
     *
     * @param name
     * @param value
     * @param days      OPTIONAL Days till this cookie will stay valid. Default is current session
     * @param path      OPTIONAL domain root will be used by default
     */
    Cookie.set = function (name, value, days, path) {
        if (days) {
            var date = new Date();
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            var expires = "; expires=" + date.toUTCString();
        }
        else
            var expires = "";
        var dir = path || '/';
        document.cookie = name + "=" + value + expires + "; path=" + dir;
    };
    /**
     * Retrieve a cookie value
     *
     * @param name
     * @return String|null
     */
    Cookie.get = function (name) {
        var nameEQ = name + "=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ')
                c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0)
                return c.substring(nameEQ.length, c.length);
        }
        return null;
    };
    /**
     * Remove a cookie
     *
     * @param name
     */
    Cookie.delete = function (name) {
        Cookie.set(name, "", -1, undefined);
    };
    Cookie.getParameterByName = function (name, url) {
        if (!url)
            url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"), results = regex.exec(url);
        if (!results)
            return null;
        if (!results[2])
            return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    };
    return Cookie;
}());
exports.Cookie = Cookie;


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Constants = /** @class */ (function () {
    function Constants() {
    }
    Constants.CCTriggerPageStartTime = "cc-trigger-page-start-time";
    Constants.CCTriggerPageElapsedTime = "cc-trigger-page-elapsed-time";
    Constants.CCTriggerSiteStartTime = "cc-trigger-site-start-time";
    Constants.CCTriggerSiteElapsedTime = "cc-trigger-site-elapsed-time";
    Constants.CCTriggerSitePageViewCount = "cc-trigger-site-page-count";
    Constants.CCTriggerIndividualPageViewCount = "cc-trigger-individual-page-count";
    return Constants;
}());
exports.Constants = Constants;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SurveyManager_1 = __webpack_require__(1);
var Survey_1 = __webpack_require__(6);
/**
 * functions that are exposed to SDK User are written here.
 * Entry point for CCSDK.
 */
var localCCSDK = {
    init: init,
    destroy: destroy,
    trigger: trigger,
    on: on
    // prefill : prefill,
};
// let instances : any = {};
window.globalSurveyRunning = false;
if (typeof window.CCSDK !== 'undefined') {
    var queue = window.CCSDK.q;
    window.CCSDK = function () {
        if (arguments && arguments.length == 0) {
            var time = new Date();
            // console.log(this.time);
        }
        else {
            console.log(arguments);
            var args = Array.from(arguments);
            // console.log(arguments);
            //Call this functions as ccsdk('functionName', ['argument1', 'argument2']);
            var functionName = args.splice(0, 1)[0];
            console.log(functionName);
            return localCCSDK[functionName].apply(this, args);
        }
    };
    if (queue) {
        for (var _i = 0, queue_1 = queue; _i < queue_1.length; _i++) {
            var q = queue_1[_i];
            var args = Array.from(q);
            var functionName = args.splice(0, 1)[0];
            localCCSDK[functionName].apply(this, args);
        }
    }
    var eventCCReady = document.createEvent('Event');
    eventCCReady.initEvent('ccready', true, true);
    document.dispatchEvent(eventCCReady);
}
function init(surveyToken) {
    //config options can be set in arguments[1]
    //available config options : themeColor
    // console.log(arguments[arguments.length - 1]);
    var config = (typeof arguments[1] === 'object') ? arguments[1] : {};
    //create survey instance
    SurveyManager_1.SurveyManager.surveyInstances[surveyToken] = (SurveyManager_1.SurveyManager.surveyInstances[surveyToken]) ? SurveyManager_1.SurveyManager.surveyInstances[surveyToken] : new Survey_1.Survey(surveyToken, config);
    return SurveyManager_1.SurveyManager.surveyInstances[surveyToken];
}
exports.init = init;
function destroy(surveyToken) {
    // this.survey.destroy();
    //remove from trigger manager, delete instance.
    delete SurveyManager_1.SurveyManager.surveyInstances[surveyToken];
}
exports.destroy = destroy;
//
function trigger(surveyToken, type, target) {
    console.log(SurveyManager_1.SurveyManager.surveyInstances);
    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].trigger(type, target);
    //tell trigger manager to register trigger.
}
exports.trigger = trigger;
function on(surveyToken, type, callback) {
    SurveyManager_1.SurveyManager.surveyInstances[surveyToken].on(type, callback);
}
exports.on = on;
//
// export function prefill(id : string, value : string, valueType : string) {
//   SurveyManager.surveyInstances[this.surveyToken].prefill(id, value, valueType);
// }
// setInterval(function() {
//   //collect data and add to cookies.
// }, 1000);


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var SurveyHandler_1 = __webpack_require__(7);
var DomSurvey_1 = __webpack_require__(34);
var DomUtilities_1 = __webpack_require__(0);
var SurveyManager_1 = __webpack_require__(1);
var TriggerManager_1 = __webpack_require__(39);
var Triggers_1 = __webpack_require__(40);
var Survey = /** @class */ (function () {
    function Survey(surveyToken, config) {
        this.surveyDone = false;
        this.surveyToken = surveyToken;
        this.config = config;
        this.surveyRunning = false;
        // this.setupSurvey();
        this.triggers = new Triggers_1.Triggers(this);
        TriggerManager_1.TriggerManager.addSurvey(this.surveyToken, this.triggers);
        this.survey = new SurveyHandler_1.SurveyHandler(this);
        this.util = new DomUtilities_1.DomUtilities;
        //set themeColor of survey
        this.config.themeColor = (this.config && this.config.themeColor) ?
            this.config.themeColor : "#db3c39";
        //use config variable textDirection and set dir
        this.setHtmlTextDirection();
        this.setDisplayOptions();
        this.util.trigger(document, this.surveyToken + '-ready', { 'survey': this });
    }
    Survey.prototype.setupSurvey = function () {
        this.getSurveyData();
    };
    Survey.prototype.setHtmlTextDirection = function () {
        var htmlDir = document.getElementsByTagName('html')[0].getAttribute('dir');
        var direction = (this.config && this.config.textDirection) ?
            this.config.textDirection : (htmlDir ? htmlDir : "ltr");
        document.getElementsByTagName('html')[0].setAttribute('dir', direction);
    };
    Survey.prototype.setDisplayOptions = function () {
        this.survey.surveyDisplay.position = this.config && this.config.display && this.config.display.position ?
            this.config.display.position : "bottom right";
        this.survey.surveyDisplay.welcomePopupAnimation = this.config && this.config.display && this.config.display.welcomePopupAnimation ?
            "hide-" + this.config.display.welcomePopupAnimation : "hide-right-left";
        this.survey.surveyDisplay.surveyPopupAnimation = this.config && this.config.display && this.config.display.surveyPopupAnimation ?
            "hide-" + this.config.display.surveyPopupAnimation : "hide-right-left";
        this.survey.surveyDisplay.surveyPosition = this.config && this.config.display && this.config.display.surveyPosition ?
            this.config.display.surveyPosition : (this.config.display.position.search(/bottom/gi) == -1 ? "top" : "bottom");
    };
    Survey.prototype.getSurveyData = function () {
        var data = this.survey.fetchQuestions();
        var self = this;
        data.then(function (surveyData) {
            console.log(surveyData);
            self.surveyData = surveyData;
            //copy data.
            var event = new CustomEvent("onSurveyDataFetch" + "-" + this.surveyToken, { detail: JSON.parse(JSON.stringify(surveyData)) });
            document.dispatchEvent(event);
            self.initSurvey();
        });
    };
    Survey.prototype.initSurvey = function () {
        //if survey already run don't run?
        //if default trigger initiated and survey already run then don't run.
        var self = this;
        // if(!self.surveyRunning) {
        //   self.surveyRunning = true;
        // }
        self.dom = new DomSurvey_1.DomSurvey(this);
        self.dom.setTheme(self.config.themeColor);
        self.survey.attachSurvey(this.surveyData);
        self.dom.setupListeners();
        self.survey.displayWelcomeQuestion();
        //survey start event.
        var onSurveyStartEvent = new CustomEvent("onSurveyStart" + "-" + this.surveyToken);
        document.dispatchEvent(event);
    };
    Survey.prototype.on = function (type, callback) {
        document.addEventListener(type + "-" + this.surveyToken, function (e) {
            callback(e.detail);
        });
    };
    Survey.prototype.trigger = function (type, target) {
        var self = this;
        switch (type) {
            case 'click':
                this.triggers.enableClickTrigger(target, function () {
                    // self.initSurvey();
                    // Scrollbar.initAll();
                    // self.slider = new Slider();
                    // self.setupSurvey();
                    SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);
                });
                break;
            case 'page-count':
                var count = parseInt(target);
                this.triggers.enablePageCountTrigger(count);
                break;
            case 'site-count':
                var count2 = parseInt(target);
                this.triggers.enableSiteCountTrigger(count2);
                break;
            case 'page-time':
                this.triggers.enablePageTimeTrigger(parseInt(target));
                break;
            case 'site-time':
                this.triggers.enableSiteTimeTrigger(parseInt(target));
                break;
            case 'url-match':
                this.triggers.enablePopUpByURLPatternTrigger(target);
                break;
            case 'utm-match':
                this.triggers.enablePopUpByUTMPatternTrigger(target);
                break;
            case 'scroll-pixels':
                this.triggers.enableScrollPixelsTrigger(parseInt(target));
                break;
            case 'launch':
                SurveyManager_1.SurveyManager.addSurvey(self.surveyToken);
                break;
            default:
                break;
        }
    };
    return Survey;
}());
exports.Survey = Survey;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
// import 'whatwg-fetch';
var Config_1 = __webpack_require__(8);
var Request_1 = __webpack_require__(9);
var Templates_1 = __webpack_require__(2);
var DomUtilities_1 = __webpack_require__(0);
var ConditionalTextFilter_1 = __webpack_require__(33);
var SurveyHandler = /** @class */ (function () {
    // isPartialAvailable : Boolean;
    function SurveyHandler(ccsdk) {
        var _this = this;
        this.answers = {};
        this.surveyAnswers = {};
        this.surveyToken = ccsdk.surveyToken;
        this.surveyData = {};
        this.surveyDisplay = {
            'position': '',
            'surveyPosition': '',
            'welcomePopupAnimation': '',
            'surveyPopupAnimation': '',
        };
        this.ccsdk = ccsdk;
        this.questions = [];
        this.questionsToDisplay = [];
        this.prefillQuestions = [];
        this.conditionalQuestions = [];
        this.answers = {};
        this.util = new DomUtilities_1.DomUtilities();
        this.dom = ccsdk.dom;
        this.displayThankYouCb = function (e) {
            var thankyouHtml = Templates_1.templates.thankyou;
            thankyouHtml = thankyouHtml.replace("{{question}}", _this.surveyData.thankyouText);
            thankyouHtml = thankyouHtml.replace("{{button}}", 'Start');
            _this.ccsdk.dom.replaceInQuestionsContainer(thankyouHtml);
            //TODO : Fix this Add class not working???
            var thankyouContainer = _this.util.get("#cc-thankyou-container");
            console.log(thankyouContainer);
            _this.util.addClass(thankyouContainer[0], 'show-thankyou-slide');
        };
        this.destroySurveyCb = function (e) {
            var self = _this;
            self.destroy();
        };
        this.acceptAnswersCb = function (e) {
            var self = _this;
            // console.log(self);
            // console.log('question answered',e)
            var data = e.detail;
            var response = {};
            response.questionId = data.questionId;
            switch (data.type) {
                case 'scale':
                    response.text = null;
                    response.number = Number(data.data.number);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'nps':
                    response.text = null;
                    response.number = Number(data.data.number);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'radio':
                    response.text = null;
                    response.number = Number(data.data.number);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'radioImage':
                    response.text = data.data.text;
                    response.number = null;
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'smile':
                    response.text = null;
                    response.number = Number(data.data.number);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'star':
                    response.text = null;
                    response.number = Number(data.data.number);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'multiline':
                    response.text = data.data.text;
                    response.number = null;
                    // console.log(data);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    self.ccsdk.dom.setQIndex(data.index);
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'singleline':
                    response.text = data.data.text;
                    response.number = null;
                    // console.log(data);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    self.ccsdk.dom.setQIndex(data.index);
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'number':
                    response.text = null;
                    response.number = Number(data.data.number);
                    // console.log(data);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    self.ccsdk.dom.setQIndex(data.index);
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'checkbox':
                    response.text = data.data.text;
                    response.number = null;
                    // console.log(data);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    self.ccsdk.dom.setQIndex(data.index);
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'select':
                    response.text = data.data.text;
                    response.number = null;
                    // console.log(data);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    self.ccsdk.dom.setQIndex(data.index);
                    // self.ccsdk.dom.nextQuestion();
                    break;
                case 'slider':
                    response.text = data.data.text;
                    response.number = Number(data.data.number);
                    // console.log(data);
                    self.postPartialAnswer(data.index, response);
                    self.ccsdk.dom.domSelectElements();
                    self.ccsdk.dom.setQIndex(data.index);
                    // self.ccsdk.dom.nextQuestion();
                    break;
                default:
                    break;
            }
        };
    }
    SurveyHandler.prototype.fetchQuestions = function () {
        this.randomNumber = parseInt((String)(Math.random() * 1000));
        var surveyUrl = Config_1.Config.SURVEY_BY_TOKEN.replace("{token}", "" + this.surveyToken);
        surveyUrl = surveyUrl.replace("{tabletId}", "" + this.randomNumber);
        surveyUrl = Config_1.Config.API_URL + surveyUrl;
        var data = Request_1.RequestHelper.get(surveyUrl);
        // console.log(data);
        return data;
        // this.surveyData = data.then(function();
        // console.log(this.surveyData);
    };
    SurveyHandler.prototype.removeAnswer = function (questionId) {
        delete this.answers[questionId];
        delete this.surveyAnswers[questionId];
    };
    SurveyHandler.prototype.attachSurvey = function (surveyData) {
        this.surveyData = surveyData;
        this.setupSurveyContainer();
        //clean survey
        this.cleanSurvey();
        this.displayQuestions();
        this.displayThankYou();
        this.destroySurvey();
    };
    SurveyHandler.prototype.cleanSurvey = function () {
        this.questionsToDisplay = [];
        this.answers = {};
        this.surveyAnswers = {};
        this.conditionalQuestions = [];
    };
    SurveyHandler.prototype.setupSurveyContainer = function () {
        var surveyHtml = Templates_1.templates.question_survey;
        surveyHtml = surveyHtml.replace("{{surveyToken}}", this.surveyToken);
        surveyHtml = surveyHtml.replace("{{animation}}", this.surveyDisplay.surveyPopupAnimation);
        surveyHtml = surveyHtml.replace(/{{location}}/g, this.surveyDisplay.surveyPosition);
        this.ccsdk.dom.appendInBody(surveyHtml);
    };
    SurveyHandler.prototype.displayWelcomeQuestion = function () {
        var welcomeHtml = Templates_1.templates.question_start;
        welcomeHtml = welcomeHtml.replace("{{surveyToken}}", this.surveyToken);
        welcomeHtml = welcomeHtml.replace("{{question}}", this.surveyData.welcomeText);
        welcomeHtml = welcomeHtml.replace("{{button}}", 'Start');
        welcomeHtml = welcomeHtml.replace("{{location}}", this.surveyDisplay.position);
        welcomeHtml = welcomeHtml.replace("{{animation}}", this.surveyDisplay.welcomePopupAnimation);
        // console.log("Appending in body");
        this.ccsdk.dom.appendInBody(welcomeHtml);
        this.ccsdk.dom.showWelcomeContainer();
        this.acceptAnswers();
    };
    SurveyHandler.prototype.displayThankYou = function () {
        var self = this;
        document.addEventListener('ccdone', this.displayThankYouCb);
    };
    SurveyHandler.prototype.displayQuestions = function () {
        //check question is supported, based on question types.
        //filter pre fill questions.
        this.questions = this.surveyData.questions;
        // this.questionsToDisplay = (this.surveyData.questions as any[]).filter(this.filterQuestions);
        this.filterQuestions();
        //sort questions and display them?
        this.questionsToDisplay = this.questionsToDisplay.sort(this.questionCompare);
        var ccSurvey;
        ccSurvey = document.getElementsByClassName("cc-questions-container");
        // ccSurvey = ccSurvey[0];
        var surveyObject = ccSurvey[0];
        // console.log(this.questionsToDisplay);
        //chec
        //for now just do 1st question.
        for (var _i = 0, _a = this.questionsToDisplay; _i < _a.length; _i++) {
            var question = _a[_i];
            if (this.checkConditionals(question)) {
                var compiledTemplate = this.compileTemplate(question);
                question.compiledTemplate = compiledTemplate;
                // surveyObject.innerHTML += compiledTemplate;
                //register handlers for onclick?
            }
            else {
                if (this.isPrefillQuestion(question)) {
                    this.prefillQuestions.push(question);
                }
            }
            //else don't display it.
        }
        // console.log(surveyObject.innerHTML);
        // this.postPartialAnswer(this.questionsToDisplay[0], "test");
    };
    SurveyHandler.prototype.getSurveyQuestions = function () {
        return this.questionsToDisplay;
    };
    SurveyHandler.prototype.getAnswerForQuestionId = function (questionId) {
        return this.surveyAnswers[questionId];
    };
    SurveyHandler.prototype.acceptAnswers = function () {
        var self = this;
        // console.log('add question answered listener')
        document.addEventListener('q-answered', this.acceptAnswersCb);
    };
    SurveyHandler.prototype.fillPrefillQuestion = function (id, value, valueType) {
        var question = this.getQuestionById(id);
        var response;
        var responseStored = this.getPrefillResponseById(id);
        if (responseStored != null) {
            response = responseStored;
        }
        else {
            response = {
                questionId: question.id,
                questionText: question.text,
                textInput: null,
                numberInput: null
            };
        }
        if (valueType.toLowerCase() == "number") {
            response.numberInput = value;
        }
        if (valueType.toLowerCase() == "text") {
            response.textInput = value;
        }
        if (responseStored != null) {
            this.updatePrefillResponseById(id, response);
        }
        else {
            this.prefillResponses.push(response);
        }
    };
    SurveyHandler.prototype.postPrefillPartialAnswer = function () {
        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace("{id}", this.surveyData.partialResponseId);
        surveyPartialUrl = surveyPartialUrl.replace("{complete}", "false");
        surveyPartialUrl = surveyPartialUrl.replace("{tabletId}", "" + this.randomNumber);
        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;
        return Request_1.RequestHelper.post(surveyPartialUrl, this.prefillResponses);
    };
    SurveyHandler.prototype.updatePrefillResponseById = function (id, resp) {
        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {
            var response = _a[_i];
            if (response.questionId == id) {
                response = resp;
            }
        }
    };
    SurveyHandler.prototype.getPrefillResponseById = function (id) {
        for (var _i = 0, _a = this.prefillResponses; _i < _a.length; _i++) {
            var response = _a[_i];
            if (response.questionId == id) {
                return response;
            }
        }
        return null;
    };
    SurveyHandler.prototype.getQuestionById = function (id) {
        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {
            var question = _a[_i];
            if (question.id == id) {
                return question;
            }
        }
    };
    SurveyHandler.prototype.postPartialAnswer = function (index, response) {
        // let data = new FormData();
        //in case of file.
        // let input = document.querySelector('input[type="file"]') ;
        // data.append('file', input.files[0]);
        var question = this.questionsToDisplay[index];
        if (typeof question === 'undefined') {
            //now?
            // return console.log("No Partial Remaining");
        }
        var data = {
            comparator: 0,
            questionId: question.id,
            questionText: question.text,
            textInput: response.text,
            numberInput: response.number
        };
        // if(this.isPartialAvailable == false) {
        //   this.answers.push(data);
        //   return;
        // }
        // console.log("Submitting for : " + index);
        var surveyPartialUrl = Config_1.Config.SURVEY_PARTIAL_RESPONSE.replace("{id}", this.surveyData.partialResponseId);
        //if this is the last of displayed question
        console.log("partial response", question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id);
        if (question.id == this.questionsToDisplay[this.questionsToDisplay.length - 1].id) {
            surveyPartialUrl = surveyPartialUrl.replace("{complete}", "true");
        }
        else {
            surveyPartialUrl = surveyPartialUrl.replace("{complete}", "false");
        }
        surveyPartialUrl = surveyPartialUrl.replace("{tabletId}", "" + this.randomNumber);
        surveyPartialUrl = Config_1.Config.API_URL + surveyPartialUrl;
        //add partial answer to main answer
        this.surveyAnswers[question.id] = data;
        data = [data];
        // let result = RequestHelper.post(surveyPartialUrl, "[" + JSON.stringify(data) + "]");
        return Request_1.RequestHelper.post(surveyPartialUrl, data);
    };
    /**
     *
     * check if conditions are satsified which are required to display question?
     *
     * @param {any} question
     * @memberof Survey
     */
    SurveyHandler.prototype.checkConditionals = function (question) {
        return true;
    };
    SurveyHandler.prototype.compileTemplate = function (question) {
        var self = this;
        //get question type
        var questionTemplate;
        // console.log(question);
        switch (question.displayType) {
            case "Slider":
                var opt = question.multiSelect[0].split("-");
                var optMin = opt[0].split(";");
                var optMax = opt[1].split(";");
                //get text question template and compile it.
                questionTemplate = Templates_1.templates.question_slider;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{min}}/g, optMin[0]);
                if (optMin[1]) {
                    questionTemplate = questionTemplate.replace(/{{minLabel}}/g, optMin[1] + "-");
                }
                else {
                    questionTemplate = questionTemplate.replace(/{{minLabel}}/g, "");
                }
                questionTemplate = questionTemplate.replace(/{{max}}/g, optMax[0]);
                if (optMax[1]) {
                    questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, optMax[1] + "-");
                }
                else {
                    questionTemplate = questionTemplate.replace(/{{maxLabel}}/g, "");
                }
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
            case "Scale":
                //get text question template and compile it.
                if (question.questionTags.includes("NPS")) {
                    questionTemplate = Templates_1.templates.question_nps;
                    questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                    questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                    questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                }
                else {
                    questionTemplate = Templates_1.templates.question_scale;
                    questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                    questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                    questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                    questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                    //construct NPS scale here....
                    var startRange = 0.0;
                    var endRange = 10.0;
                    var options = "";
                    if (question.multiSelect.length > 0) {
                        startRange = parseFloat(question.multiSelect[0].split("-")[0]);
                        endRange = parseFloat(question.multiSelect[0].split("-")[1]);
                    }
                    var divider = 1;
                    if (endRange < 11) {
                    }
                    else {
                        divider = (endRange - startRange) / 10.0;
                    }
                    var initial = 0.0;
                    for (var initial_1 = startRange; initial_1 <= endRange; initial_1 += divider) {
                        options += '<span data-rating="' + initial_1 + '" class="option-number-item option-scale">' + initial_1 + '</span>';
                    }
                    questionTemplate = questionTemplate.replace("{{optionsRange}}", options);
                }
                break;
            case "Text":
                //get text question template and compile it.
                questionTemplate = Templates_1.templates.question_text;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
            case "Number":
                //get text question template and compile it.
                questionTemplate = Templates_1.templates.question_number;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
            case "MultilineText":
                //get text question template and compile it.
                questionTemplate = Templates_1.templates.question_multi_line_text;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
            case "MultiSelect":
                var acTemplate = void 0;
                //get text question template and compile it.
                if (question.displayStyle == 'radiobutton/checkbox') {
                    // console.log(question.displayStyle);
                    var options3 = self.util.generateCheckboxOptions(question.multiSelect, question.id);
                    // console.log(options2);
                    acTemplate = Templates_1.templates.question_checkbox;
                    questionTemplate = acTemplate.replace(/{{options}}/g, options3);
                    acTemplate = questionTemplate;
                }
                else {
                    acTemplate = Templates_1.templates.question_multi_select;
                }
                questionTemplate = acTemplate;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
            case "Select":
                var acTemplate1 = void 0;
                var acTemplate2 = void 0;
                var options1 = void 0;
                var options2 = void 0;
                //get text question template and compile it.
                if (question.displayStyle == 'radiobutton/checkbox') {
                    // console.log('select type 1');
                    // console.log(question.displayStyle);
                    acTemplate1 = Templates_1.templates.question_radio;
                    questionTemplate = acTemplate1;
                }
                else {
                    var checkOptionContainsImage = self.util.checkOptionContainsImage(question.multiSelect);
                    // console.log('select radio image',checkOptionContainsImage);
                    if (checkOptionContainsImage) {
                        // console.log('select type 2');
                        acTemplate2 = Templates_1.templates.question_radio_image;
                        options2 = self.util.generateRadioImageOptions(question.multiSelect, question.id);
                        // console.log(options2);
                        questionTemplate = acTemplate2;
                        questionTemplate = questionTemplate.replace(/{{options}}/g, options2);
                    }
                    else {
                        // console.log('select type 3');
                        acTemplate1 = Templates_1.templates.question_select;
                        options1 = self.util.generateSelectOptions(question.multiSelect);
                        questionTemplate = acTemplate1;
                        questionTemplate = questionTemplate.replace("{{options}}", options1);
                    }
                }
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                // console.log(questionTemplate);
                break;
            case "Smile-5":
                //get text question template and compile it.
                questionTemplate = Templates_1.templates.question_smile_5;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
            case "Star-5":
                //get text question template and compile it.
                questionTemplate = Templates_1.templates.question_star_5;
                questionTemplate = questionTemplate.replace("{{question}}", ConditionalTextFilter_1.ConditionalTextFilter.filterText(this, question));
                questionTemplate = questionTemplate.replace(/{{questionId}}/g, "id" + question.id);
                questionTemplate = questionTemplate.replace("{{isRequired}}", question.isRequired ? "true" : "false");
                questionTemplate = questionTemplate.replace("{{requiredLabel}}", question.isRequired ? "*" : "");
                break;
        }
        return questionTemplate;
    };
    SurveyHandler.prototype.questionCompare = function (a, b) {
        return a.sequence - b.sequence;
    };
    /**
     *
     * filterQuestions - filters questions so that we don't display the one which satisifes any of the following condition
     *  isRetired = true
     *  statffFill = true
     *  apiFill = true
     *  preFill = true
     *
     * @param {any} question
     * @returns
     * @memberof Survey
     */
    SurveyHandler.prototype.filterQuestions = function () {
        for (var _i = 0, _a = this.questions; _i < _a.length; _i++) {
            var question = _a[_i];
            if (!question.isRetired) {
                if (!this.isPrefillQuestion(question)) {
                    if (question.conditionalFilter != null &&
                        (question.conditionalFilter.filterquestions == null
                            || question.conditionalFilter.filterquestions.length == 0)) {
                        this.questionsToDisplay.push(question);
                    }
                    else {
                        this.conditionalQuestions.push(question);
                    }
                }
            }
        }
    };
    SurveyHandler.prototype.getConditionalSurveyQuestions = function () {
        return this.conditionalQuestions;
    };
    SurveyHandler.prototype.isPrefillQuestion = function (question) {
        if (question.apiFill == true) {
            return true;
        }
        if (question.staffFill == true) {
            return true;
        }
        return false;
    };
    SurveyHandler.prototype.destroySurvey = function () {
        var self = this;
        document.addEventListener('ccclose', this.destroySurveyCb);
    };
    SurveyHandler.prototype.destroy = function () {
        var surveyContainer = this.ccsdk.dom.getSurveyContainer(this.surveyToken);
        var welcomeContainer = this.ccsdk.dom.getWelcomeContainer(this.surveyToken);
        this.util.remove(surveyContainer);
        this.util.remove(welcomeContainer);
        document.removeEventListener('ccclose', this.destroySurveyCb);
        document.removeEventListener('ccdone', this.displayThankYouCb);
        document.removeEventListener('q-answered', this.acceptAnswersCb);
        window.globalSurveyRunning = false;
    };
    return SurveyHandler;
}());
exports.SurveyHandler = SurveyHandler;


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Config = /** @class */ (function () {
    function Config() {
    }
    Config.API_URL = "https://api.getcloudcherry.com";
    Config.SURVEY_BY_TOKEN = "/api/SurveyByToken/{token}/{tabletId}";
    Config.SURVEY_PARTIAL_RESPONSE = "/api/PartialSurvey/{id}/{complete}";
    // static SURVEY_PARTIAL_RESPONSE : String =  "/api/PartialSurvey/{id}/{complete}/JS-Web/{tabletId}";
    Config.CDN_URL = "https://cx.getcloudcherry.com/";
    Config.CDN_ASSET_URL = "https://cx.getcloudcherry.com/microsurvey-assets/";
    return Config;
}());
exports.Config = Config;


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// import 'whatwg-fetch';
Object.defineProperty(exports, "__esModule", { value: true });
function makeRequest(method, url, postParams, headers) {
    return new Promise(function (resolve, reject) {
        var xhr = new XMLHttpRequest();
        xhr.open(method, url);
        xhr.onload = function () {
            if (this.status >= 200 && this.status < 300) {
                var res = xhr.response ? JSON.parse(xhr.response) : '';
                resolve(res);
            }
            else {
                reject({
                    status: this.status,
                    statusText: xhr.statusText
                });
            }
        };
        xhr.onerror = function () {
            reject({
                status: this.status,
                statusText: xhr.statusText
            });
        };
        if (headers) {
            Object.keys(headers).forEach(function (key) {
                xhr.setRequestHeader(key, headers[key]);
            });
        }
        // var params : any = postParams;
        // We'll need to stringify if we've been given an object
        // If we have a string, this is skipped.
        // if (params && typeof params === 'object') {
        //   params = Object.keys(params).map(function (key) {
        //     return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);
        //   }).join('&');
        // }
        xhr.send(postParams);
    });
}
var RequestHelper = /** @class */ (function () {
    function RequestHelper() {
    }
    RequestHelper.get = function (url) {
        return makeRequest("GET", url, null, null);
        // let request : Request = new Request( (url as any) , new Object());
        // return fetch(request).then( (response : Response) => {
        //   if (response.status >= 200 && response.status < 300) {
        //     return Promise.resolve(response);
        //   } else {
        //     var error = new Error(response.statusText);
        //     // error.response = response;
        //     throw error;
        //   }
        // }).then( (response : Response) => {
        //   return response.json();
        // }).catch( (error : Error) => {
        //   console.log('Request failed ', error);
        // });
    };
    /**
     *
     * var data = new FormData()
     *  data.append('file', input.files[0])
     *  data.append('user', 'hubot')
     *
     * @static
     * @param {any} url
     * @param {any} data
     * @memberof Request
     */
    RequestHelper.post = function (url, data) {
        //consider, file upload?
        // console.log("[" + JSON.stringify(data) + "]");
        console.log("Sending : " + data);
        return makeRequest("POST", url, JSON.stringify(data), { "Content-Type": "application/json; charset=utf-8" });
        // let request : Request = new Request( (url as any), {
        //   method : "POST",
        //   headers : {
        //     "Content-Type" : "application/json; charset=utf-8"
        //   },
        //   body : JSON.stringify(data)
        // });
        // return fetch(request).then( (response : Response) => {
        //   if (response.status >= 200 && response.status < 300) {
        //     return Promise.resolve(response);
        //   } else {
        //     let error : Error = new Error(response.statusText);
        //     // error.response = response;
        //     throw error;
        //   }
        // }).then( (response : Response) => {
        //   return response.json();
        // }).catch( (error : Error) => {
        //   console.log('Request failed ', error);
        // });
    };
    return RequestHelper;
}());
exports.RequestHelper = RequestHelper;


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

// style-loader: Adds some css to the DOM by adding a <style> tag

// load the styles
var content = __webpack_require__(11);
if(typeof content === 'string') content = [[module.i, content, '']];
// Prepare cssTransformation
var transform;

var options = {}
options.transform = transform
// add the styles to the DOM
var update = __webpack_require__(13)(content, options);
if(content.locals) module.exports = content.locals;
// Hot Module Replacement
if(false) {
	// When the styles change, update the <style> tags
	if(!content.locals) {
		module.hot.accept("!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss", function() {
			var newContent = require("!!../../node_modules/rtl-css-loader/index.js!../../node_modules/sass-loader/lib/loader.js!./main.scss");
			if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
			update(newContent);
		});
	}
	// When the module is disposed, remove the <style> tags
	module.hot.dispose(function() { update(); });
}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(12)();
// imports


// module
exports.push([module.i, typeof document !== 'undefined' && document.getElementsByTagName('html')[0].getAttribute('dir') === 'rtl' ? "body {\n  margin: 0;\n  padding: 0;\n  font-family: \"open sans\", sans-serif; }\n\nul {\n  padding-right: 0;\n  list-style-type: none;\n  margin: 0; }\n\na, a:hover, a:focus {\n  text-decoration: none;\n  color: inherit; }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\np {\n  color: inherit;\n  margin: 0; }\n\nmap area {\n  outline: 0;\n  cursor: pointer; }\n\nmap area:hover {\n  outline: 1; }\n\n.cc-popup-container {\n  background: #fff;\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\n  font-family: \"open sans\", sans-serif;\n  position: fixed;\n  text-align: center;\n  max-width: 500px;\n  max-height: 500px;\n  z-index: 1111;\n  padding: 10px; }\n\n#cc-thankyou-container .cc-question-container__text p,\n#cc-thankyou-container .cc-question-container__text {\n  width: 400px;\n  font-size: 20px;\n  max-width: initial; }\n\n.cc-message-box {\n  position: relative;\n  z-index: 11; }\n\n.cc-message-box__text {\n  color: #424242;\n  font-size: 14px;\n  font-weight: 600;\n  margin: 0;\n  padding: 29px 14px 20px 14px;\n  vertical-align: middle; }\n\n.cc-message-box__btn {\n  background: #fdaf19;\n  border-radius: 100px;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: 700;\n  height: 32px;\n  padding: 6px 0;\n  width: 124px; }\n\n.cc-popup-container .cc-popup-container__close {\n  cursor: pointer;\n  margin: 4px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 111; }\n\n.cc-popup-container-2 {\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\n  height: 144px;\n  position: fixed;\n  width: 100%;\n  z-index: 1111; }\n\n.cc-popup-container-2__icons, .cc-popup-container-2__icons {\n  cursor: pointer;\n  padding: 8px;\n  position: absolute;\n  top: 0;\n  z-index: 111; }\n\n.top.cc-popup-container-2 .cc-popup-container-2__icons {\n  padding-top: 15px; }\n\n.cc-popup-container-2__icons.cc-right-icon {\n  left: 0; }\n\n.cc-popup-container-2__icons.cc-left-icon {\n  right: 0; }\n\n.cc-popup-container__back {\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\n  display: inline-block;\n  width: 21px;\n  height: 21px; }\n\n.cc-question-container {\n  /* margin: auto; */\n  margin-left: 147px;\n  padding: 20px;\n  position: absolute;\n  text-align: center;\n  width: calc( 100% - 147px);\n  z-index: 11;\n  top: 0;\n  right: 0; }\n\n.cc-question-container__text {\n  /*height: 80px;*/\n  color: #424242;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: 600;\n  max-width: 230px;\n  padding: 8px 0;\n  text-align: center;\n  vertical-align: middle;\n  width: 20%;\n  position: relative; }\n\n.cc-question-container__required {\n  position: absolute;\n  top: -14px;\n  font-size: 11px;\n  right: 0;\n  font-weight: normal;\n  color: #C1272D;\n  display: none; }\n\n.cc-question-container__required-label {\n  display: inline-block;\n  position: relative;\n  top: -2px;\n  right: -2px; }\n\n.cc-question-container__content {\n  display: inline-block;\n  max-width: 78%;\n  vertical-align: middle;\n  width: auto; }\n\n.cc-question-container__list li {\n  display: inline-block;\n  padding-right: 29px;\n  vertical-align: middle; }\n\n.cc-question-container__list li span {\n  display: table-cell;\n  font-size: 15px;\n  padding-right: 15px;\n  text-align: right;\n  vertical-align: middle;\n  width: 125px; }\n\n.cc-question-container__list li input {\n  vertical-align: middle; }\n\n.cc-question-container:before {\n  content: '';\n  display: inline-block;\n  height: 100%;\n  margin-left: -4px;\n  vertical-align: middle; }\n\n.cc-question-container {\n  height: 100%;\n  vertical-align: middle; }\n\n.cc-questions-container {\n  height: 100%; }\n\n.multiline-box {\n  background: #fff;\n  border-radius: 2px;\n  border: 1px #6d6d6d solid;\n  font-family: 'Open Sans';\n  font-size: 15px;\n  height: 70px;\n  margin: 0 50px 0 0px;\n  min-width: 600px;\n  padding: 2px 5px;\n  resize: none; }\n\n.multiline-box:focus {\n  outline: 0; }\n\n.detail-box .cc-question-container__text p {\n  font-size: 13px;\n  font-weight: 700; }\n\n.detail-box .cc-question-container__text span {\n  display: inline-block;\n  font-size: 15px;\n  font-weight: normal; }\n\n.detail-box .cc-question-container__text {\n  height: 56px; }\n\n.detail-box[data-type=\"singleline\"] .cc-question-container__text {\n  margin-left: 20px; }\n\n.detail-box .cc-question-container__content .form-control,\n.single-line .cc-question-container__content .form-control {\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid #6d6d6d;\n  font-family: \"open sans\";\n  font-size: 15px;\n  line-height: 26px;\n  outline: 0;\n  width: 300px; }\n\n.d-star-box.detail-box .cc-question-container__text {\n  height: 92px; }\n\n.hl.dropdown {\n  background-image: url(\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\");\n  background-position: 3% center;\n  background-repeat: no-repeat;\n  border-bottom: 1px solid #6d6d6d;\n  display: inline-block;\n  padding: 5px;\n  position: relative;\n  text-align: right;\n  width: 300px; }\n\n.drop-cc-question-container .cc-question-container__text {\n  /*height: 60px;*/\n  margin-left: 20px; }\n\n.form-control:focus {\n  border-color: #fcaf18; }\n\n.detail-box .cc-question-container__content {\n  padding-right: 0; }\n\n.cc-big-list-container .cc-question-container__list {\n  display: table;\n  width: 100%; }\n\n.cc-big-list-container .cc-question-container__list li {\n  display: table-cell;\n  vertical-align: middle; }\n\n.cc-thankyou-container {\n  width: 100% !important; }\n\n.submit-icon {\n  direction: rtl;\n  position: absolute;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto 0;\n  z-index: 11;\n  margin-left: 75px;\n  font-size: 14px;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n  width: 47px;\n  height: 47px; }\n\n@media (min-width: 767px) and (max-width: 1024px) {\n  .cc-popup-container-2 {\n    height: 300px; }\n  .cc-big-list-container .cc-question-container__list, .cc-question-container__list {\n    text-align: right; }\n  .cc-big-list-container .cc-question-container__list li, .cc-question-container__list li {\n    display: inline-block;\n    margin-bottom: 15px;\n    vertical-align: middle;\n    width: 49%; }\n  .cc-question-container__content {\n    display: inline-block;\n    width: 45%; }\n  .multiline-box {\n    min-width: 100%;\n    margin: 0; }\n  .option-smile-box img, .option-star-box img {\n    margin-left: 11px !important; }\n  .cc-thankyou-container .cc-question-container__text p,\n  .cc-thankyou-container .cc-question-container__text {\n    width: 100% !important;\n    text-align: center;\n    margin: 0 !important;\n    padding: 0;\n    line-height: initial;\n    height: auto; }\n  .cc-thankyou-container .cc-question-container__text {\n    max-width: 98%; } }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  .cc-question-container {\n    width: 100%;\n    margin: auto; }\n  .cc-question-container__text {\n    width: 24%;\n    padding-left: 20px; }\n  .cc-question-container__content.rating-color {\n    margin-right: 0px; }\n  .submit-icon {\n    margin-left: 40px !important; }\n  .cc-question-container__content.rating-color {\n    margin-right: 0px !important; }\n  .cc-question-container__content {\n    width: 50% !important; } }\n\n@media (max-width: 767px) {\n  .cc-survey-container, .cc-survey-content {\n    height: 100%; }\n  .cc-popup-container-2 {\n    bottom: auto;\n    height: 100%;\n    top: 0; }\n  .cc-popup-container-2__icons.cc-right-icon {\n    right: initial;\n    left: 0;\n    padding: 0; }\n  .cc-popup-container-2__icons.cc-left-icon {\n    right: 0;\n    left: initial;\n    padding: 0; }\n  .cc-big-list-container .cc-question-container__list li {\n    display: block; }\n  .radio-toggle--more-option li span {\n    width: 84% !important;\n    padding-right: 25px !important; }\n  .radio-toggle--more-option li {\n    padding-left: 0 !important;\n    display: block !important;\n    padding-top: 10px; }\n  .detail-box .cc-question-container__content {\n    padding-right: 0px; }\n  .cc-question-container {\n    bottom: 75px;\n    height: auto;\n    right: 0;\n    padding: 40px 25px;\n    position: absolute;\n    text-align: right;\n    top: auto;\n    width: 100%; }\n  .cc-question-container__text {\n    font-size: 18px;\n    margin-bottom: 20px;\n    max-width: 400px;\n    text-align: right;\n    width: 100%; }\n  .cc-question-container__content {\n    display: block;\n    max-width: 100%;\n    width: 100%; }\n  .cc-question-container__list label {\n    display: block; }\n  .cc-question-container__list li span {\n    width: auto;\n    padding-right: 15px; }\n  .cc-question-container__list li {\n    padding-right: 0;\n    margin-bottom: 10px;\n    display: block; }\n  .cc-popup-container-2__icons {\n    margin: 20px; }\n  .cc-popup-container-2__icons.left-icon {\n    right: auto;\n    left: 0; }\n  .cc-popup-container-2__icons.right-icon {\n    left: auto;\n    right: 0; }\n  .cc-popup-container__close {\n    width: 27px; }\n  .cc-question-container__content.rating-color {\n    margin-right: 0 !important; }\n  .multiline-box {\n    height: 150px;\n    margin: 0;\n    min-width: 100%;\n    width: 100%; }\n  .hl.dropdown {\n    width: 100%; }\n  .detail-box .cc-question-container__content .form-control {\n    width: 100%; }\n  .detail-box .cc-question-container__text p {\n    font-size: 18px; }\n  .mobile-detail-box .cc-question-container__text {\n    height: auto; }\n  .welcome-box .cc-question-container__text p {\n    color: #fff; }\n  .cc-questions-container {\n    height: 100%;\n    position: relative; } }\n\n@media (max-width: 767px) {\n  .submit-icon {\n    position: absolute;\n    right: 25px;\n    top: auto;\n    bottom: 30px;\n    padding-left: 0; }\n  .cc-popup-container {\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    text-align: right;\n    background: transparent; }\n  .cc-popup-container .cc-message-box {\n    position: absolute;\n    bottom: 20%; }\n  .cc-popup-container .cc-message-box .cc-message-box__text {\n    font-size: 20px; }\n  .cc-popup-container .cc-message-box .submit-icon {\n    position: absolute;\n    bottom: -100%;\n    top: initial;\n    right: 0;\n    margin: 0 14px; }\n  .cc-popup-container .cc-popup-container__close {\n    margin: 20px;\n    left: 0;\n    top: 0; }\n  .cc-popup-container__back {\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\n    display: inline-block;\n    width: 27px;\n    height: 27px;\n    background-size: 100%; }\n  .cc-question-container__required-label {\n    display: block;\n    right: 0;\n    top: 2px; }\n  .cc-thankyou-container .cc-question-container__text p,\n  .cc-thankyou-container .cc-question-container__text {\n    width: 100% !important;\n    text-align: center;\n    margin: 0 !important;\n    padding: 0;\n    line-height: initial;\n    height: auto; }\n  .cc-thankyou-container .cc-question-container__text {\n    max-width: 98%; } }\n\nhtml[dir=\"rtl\"] .cc-popup-container .cc-popup-container__close {\n  left: initial;\n  right: 0;\n  top: 0; }\n\nhtml[dir=\"rtl\"] .cc-popup-container__back {\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\n\nhtml[dir=\"rtl\"] .cc-popup-container-2__icons.cc-right-icon {\n  left: initial;\n  right: 0; }\n\nhtml[dir=\"rtl\"] .cc-popup-container-2__icons.cc-left-icon {\n  left: 0;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container {\n  /* margin: auto; */\n  margin-right: 147px;\n  margin-left: 0;\n  left: 0;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container__required {\n  right: 1%;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container__required-label {\n  top: -2px;\n  left: -2px;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container__list li {\n  display: inline-block;\n  padding-left: 25px;\n  padding-right: 0;\n  vertical-align: middle; }\n\nhtml[dir=\"rtl\"] .cc-question-container__list li span {\n  padding-left: 15px;\n  padding-right: 0;\n  text-align: left; }\n\nhtml[dir=\"rtl\"] .cc-question-container:before {\n  margin-right: -4px;\n  margin-left: 0; }\n\nhtml[dir=\"rtl\"] .multiline-box {\n  margin: 0 0px 0 50px; }\n\nhtml[dir=\"rtl\"] .hl.dropdown {\n  background-position: 3% center;\n  text-align: left; }\n\nhtml[dir=\"rtl\"] .drop-cc-question-container .cc-question-container__text {\n  /*height: 60px;*/\n  margin-right: 20px;\n  margin-left: 0; }\n\nhtml[dir=\"rtl\"] .detail-box .cc-question-container__content {\n  padding-left: 0;\n  padding-right: 0; }\n\n@media (min-width: 767px) and (max-width: 1024px) {\n  html[dir=\"rtl\"] .cc-big-list-container .cc-question-container__list,\n  html[dir=\"rtl\"] .cc-question-container__list {\n    text-align: left; } }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  html[dir=\"rtl\"] .cc-question-container__text {\n    padding-right: 20px;\n    padding-left: 0; }\n  html[dir=\"rtl\"] .cc-question-container__content.rating-color {\n    margin-right: 0px;\n    margin-left: 0px; } }\n\n@media (max-width: 767px) {\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.cc-right-icon {\n    right: auto;\n    left: 0; }\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.cc-left-icon {\n    right: 0;\n    left: auto; }\n  html[dir=\"rtl\"] .radio-toggle--more-option li span {\n    padding-left: 25px !important;\n    padding-right: 0 !important; }\n  html[dir=\"rtl\"] .radio-toggle--more-option li {\n    padding-left: 0 !important;\n    padding-right: 0 !important; }\n  html[dir=\"rtl\"] .detail-box .cc-question-container__content {\n    padding-right: 0px;\n    padding-left: 0px; }\n  html[dir=\"rtl\"] .cc-question-container {\n    right: initial;\n    left: 0; }\n  html[dir=\"rtl\"] .cc-question-container__text {\n    text-align: left; }\n  html[dir=\"rtl\"] .cc-question-container__list li span {\n    padding-left: 15px;\n    padding-right: 0px; }\n  html[dir=\"rtl\"] .cc-question-container__list li {\n    padding-right: 0;\n    padding-left: 0; }\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.left-icon {\n    right: 0;\n    left: auto; }\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.right-icon {\n    left: 0;\n    right: auto; }\n  html[dir=\"rtl\"] .cc-question-container__content.rating-color {\n    margin-right: 0 !important;\n    margin-left: 0 !important; } }\n\n/*cc-question-container color scale css*/\n.option-number-item {\n  color: #fff;\n  float: right;\n  font-size: 13px;\n  height: 38px;\n  padding-top: 10px;\n  text-align: center;\n  width: 8.5%;\n  margin: 0 .25%;\n  cursor: pointer; }\n\n.option-number-item.option-zero {\n  background: #853838; }\n\n.option-number-item.option-zero.selected,\n.option-number-item.option-zero:hover {\n  background: #572526; }\n\n.option-number-item.option-one {\n  background: #9e4343; }\n\n.option-number-item.option-one.selected,\n.option-number-item.option-one:hover {\n  background: #642728; }\n\n.option-number-item.option-two {\n  background: #c14d4d; }\n\n.option-number-item.option-two.selected,\n.option-number-item.option-two:hover {\n  background: #712827; }\n\n.option-number-item.option-three {\n  background: #d94d4d; }\n\n.option-number-item.option-three.selected,\n.option-number-item.option-three:hover {\n  background: #7c2828; }\n\n.option-number-item.option-four {\n  background: #ee4d4d; }\n\n.option-number-item.option-four.selected,\n.option-number-item.option-four:hover {\n  background: #852828; }\n\n.option-number-item.option-five {\n  background: #ff4d4d; }\n\n.option-number-item.option-five.selected,\n.option-number-item.option-five:hover {\n  background: #844828; }\n\n.option-number-item.option-six {\n  background: #ff8c4d; }\n\n.option-number-item.option-six.selected,\n.option-number-item.option-six:hover {\n  background: #844828; }\n\n.option-number-item.option-seven {\n  background: #ffc74d; }\n\n.option-number-item.option-seven.selected,\n.option-number-item.option-seven:hover {\n  background: #856728; }\n\n.option-number-item.option-eight {\n  background: #f5eb4d; }\n\n.option-number-item.option-eight.selected,\n.option-number-item.option-eight:hover {\n  background: #7f7a28; }\n\n.option-number-item.option-nine {\n  background: #73ca81; }\n\n.option-number-item.option-nine.selected,\n.option-number-item.option-nine:hover {\n  background: #3b6942; }\n\n.option-number-item.option-ten {\n  background: #4db47c; }\n\n.option-number-item.option-ten.selected,\n.option-number-item.option-ten:hover {\n  background: #285e40; }\n\n.cc-question-container__content.rating-color {\n  margin-right: 74px; }\n\n.option-left-rating-text, .option-right-rating-text {\n  bottom: -25px;\n  color: #424242;\n  font-size: 13px;\n  right: 0;\n  position: absolute; }\n\n.option-right-rating-text {\n  right: auto;\n  left: 0; }\n\n.rating-color {\n  position: relative; }\n\n.option-smile-box, .option-star-box {\n  height: 60px;\n  margin-left: 29px;\n  width: 60px;\n  cursor: pointer;\n  border: solid 4px transparent;\n  border-radius: 50%;\n  display: inline-block;\n  background-size: 100%; }\n\n.option-smile-box.one {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.two {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.three {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.four {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.five {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.one.selected,\n.option-smile-box.one:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.two.selected,\n.option-smile-box.two:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.three.selected,\n.option-smile-box.three:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.four.selected,\n.option-smile-box.four:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.five.selected,\n.option-smile-box.five:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-star-box {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-star-box:hover,\n.option-star-box.selected {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\") no-repeat;\n  background-size: 100%; }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  .option-smile-box, .option-star-box {\n    width: 50px;\n    height: 50px;\n    margin-left: 10px; } }\n\n@media (max-width: 767px) {\n  .option-smile-box, .option-star-box {\n    display: inline-block;\n    margin-left: 3px; }\n  .option-number-item {\n    color: #fff;\n    float: right;\n    font-size: 15px;\n    height: 35px;\n    margin-left: 1px;\n    padding-top: 7px;\n    text-align: center;\n    width: 38px;\n    cursor: pointer;\n    vertical-align: middle; }\n  .cc-question-container[data-type=\"scale\"] {\n    bottom: 106px; }\n  .cc-question-container[data-type=\"scale\"] .option-left-rating-text,\n  .cc-question-container[data-type=\"scale\"] .option-right-rating-text {\n    bottom: -44px;\n    width: 49px; }\n  .cc-question-container[data-type=\"scale\"] .option-right-rating-text {\n    text-align: left; }\n  .option-smile-box img, .option-star-box img {\n    padding-left: 5px;\n    margin-left: 0; } }\n\n@media (max-width: 381px) {\n  .option-smile-box, .option-star-box {\n    display: inline-block;\n    margin-left: 0;\n    height: 50px;\n    width: 50px; }\n  .option-smile-box img, .option-star-box img {\n    padding-left: 5px;\n    margin-left: 0; } }\n\n.option-number-item.option-scale {\n  background: #4db47c; }\n\n.option-number-item.option-scale.selected,\n.option-number-item.option-scale:hover {\n  background: #712827; }\n\n.cc-nps-image {\n  cursor: pointer;\n  position: relative;\n  right: -25px; }\n\n.circle-image {\n  margin: auto;\n  width: 247px;\n  overflow: hidden;\n  height: 235px;\n  position: relative; }\n\n.cc-nps-selected-rating {\n  font-size: 100px;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  right: 0px;\n  line-height: 100px;\n  left: 0;\n  margin: auto;\n  bottom: 0;\n  width: 110px;\n  height: 100px;\n  text-align: center;\n  font-weight: 100;\n  color: #bbb; }\n\n/*cc-question-container color scale css*/\nhtml[dir=\"rtl\"] .option-number-item {\n  margin-left: 1px;\n  margin-right: 0px;\n  float: left; }\n\nhtml[dir=\"rtl\"] .cc-question-container__content.rating-color {\n  margin-left: 74px;\n  margin-right: 0px; }\n\nhtml[dir=\"rtl\"] .option-left-rating-text, .option-right-rating-text {\n  left: 0;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .option-right-rating-text {\n  right: 0;\n  left: auto; }\n\nhtml[dir=\"rtl\"] .rating-color {\n  position: relative; }\n\nhtml[dir=\"rtl\"] .option-smile-box img, .option-star-box img {\n  margin-left: 29px;\n  margin-right: 0px; }\n\nhtml[dir=\"rtl\"] .option-star-box img {\n  margin-right: 19px;\n  margin-left: 0px; }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  html[dir=\"rtl\"] .option-smile-box img, html[dir=\"rtl\"] .option-star-box img {\n    margin-right: 0px;\n    margin-left: 10px; } }\n\n@media (max-width: 767px) {\n  html[dir=\"rtl\"] .option-smile-box img, html[dir=\"rtl\"] .option-star-box img {\n    padding-left: 0px;\n    padding-right: 5px;\n    margin-left: 0;\n    margin-right: 0; } }\n\n.cc-select-wrapper {\n  position: relative;\n  display: inline-block;\n  user-select: none;\n  z-index: 11; }\n\n.cc-select-wrapper select {\n  display: none; }\n\n.cc-select {\n  position: relative;\n  display: inline-block; }\n\n.cc-select-trigger {\n  position: relative;\n  display: block;\n  width: 130px;\n  padding: 0 22px 0 84px;\n  font-size: 15px;\n  font-style: italic;\n  font-weight: 300;\n  color: #222;\n  line-height: 20px;\n  background: transparent;\n  border-radius: 0;\n  cursor: pointer;\n  width: 300px;\n  border-bottom: 1px solid #6d6d6d;\n  display: inline-block;\n  text-align: right;\n  padding: 5px;\n  position: relative;\n  /*background-image: url(../images/arrow-down.black.svg);*/\n  background-position: 3% center;\n  background-repeat: no-repeat; }\n\n.cc-select-trigger:after {\n  position: absolute;\n  display: block;\n  content: '';\n  width: 10px;\n  height: 10px;\n  top: 50%;\n  left: 5px;\n  margin-top: -3px;\n  border-bottom: 1px solid #222;\n  border-left: 1px solid #222;\n  transform: rotate(-45deg) translateY(-50%);\n  transition: all .2s ease-in-out;\n  transform-origin: 50% 0; }\n\n.cc-select.opened .cc-select-trigger:after {\n  margin-top: 3px;\n  transform: rotate(135deg) translateY(-50%); }\n\n.cc-select-options-container {\n  position: absolute;\n  display: block;\n  top: 100%;\n  right: 0;\n  left: 0;\n  min-width: 100%;\n  margin: 15px 0;\n  border: 1px solid #b5b5b5;\n  border-radius: 4px;\n  box-sizing: border-box;\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\n  background: #fff;\n  transition: all .2s ease-in-out;\n  opacity: 0;\n  visibility: hidden;\n  pointer-events: none;\n  transform: translateY(calc( -100% - 65px));\n  height: auto;\n  max-height: 150px;\n  overflow: hidden; }\n\n.cc-select-options {\n  /*  max-height: 150px;\r\n    overflow-y: scroll; */\n  overflow: scroll;\n  height: 100%; }\n\n.cc-select.opened .cc-select-options-container {\n  opacity: 1;\n  visibility: visible;\n  pointer-events: all;\n  transform: translateY(calc( -100% - 65px)); }\n\n.cc-popup-container-2.top .cc-select-options-container,\n.cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\n  transform: translateY(calc( -100% + 75px)); }\n\n.cc-select-options:before {\n  /*       position: absolute;\r\n    display: block;\r\n    content: '';\r\n    bottom: 100%; right: 25px;\r\n    width: 7px; height: 7px;\r\n    margin-bottom: -4px;\r\n    border-top: 1px solid #b5b5b5;\r\n    border-left: 1px solid #b5b5b5;\r\n    background: #fff;\r\n    transform: rotate(45deg);\r\n    transition: all .4s ease-in-out; */ }\n\n.option-hover:before {\n  background: #f9f9f9; }\n\n.cc-select-option {\n  position: relative;\n  display: block;\n  padding: 0 12px;\n  border-bottom: 1px solid #e4e4e4;\n  font-size: 12px;\n  font-weight: 600;\n  color: #222;\n  line-height: 34px;\n  cursor: pointer;\n  transition: all .2s ease-in-out;\n  text-align: right;\n  margin: 0 5px;\n  width: 95%; }\n\n.cc-select-option:first-of-type {\n  border-radius: 4px 4px 0 0; }\n\n.cc-select-option:last-of-type {\n  border-bottom: 0;\n  border-radius: 0 0 4px 4px; }\n\n.cc-select-option:hover,\n.cc-select-option.selection {\n  background: #f9f9f9; }\n\n.cc-select-wrapper.down .cc-select-options-container {\n  transform: translateY(calc( 20px)); }\n\n.cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\n  transform: translateY(calc( 20px)); }\n\n.option-yes-no.No {\n  position: relative;\n  top: 4px; }\n\n.cc-question-container[data-type=\"nps\"] .cc-question-container__content,\n.cc-question-container[data-type=\"scale\"] .cc-question-container__content {\n  width: 40%; }\n\n@media (max-width: 767px) {\n  .cc-select, .cc-select-wrapper {\n    min-width: 100%; }\n  .cc-select-trigger {\n    min-width: 100%;\n    width: auto; } }\n\nhtml[dir=\"rtl\"] .cc-select-trigger {\n  padding: 0 84px 0 22px;\n  background-position: 3% center;\n  background-repeat: no-repeat;\n  text-align: left; }\n\nhtml[dir=\"rtl\"] .cc-select-trigger:after {\n  top: 50%;\n  right: 25px;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .cc-select-option {\n  text-align: left; }\n\nhtml[dir=\"rtl\"] .cc-select-option:first-of-type {\n  border-radius: 0px 4px 4px 0; }\n\nhtml[dir=\"rtl\"] .cc-select-option:last-of-type {\n  border-radius: 4px 0 0px 4px; }\n\n/** Checkbox **/\n.cc-checkbox {\n  display: table-cell;\n  position: relative;\n  text-align: right;\n  vertical-align: middle; }\n\n.cc-checkbox label {\n  cursor: pointer; }\n\n.cc-checkbox + span label img {\n  width: 40px; }\n\n.cc-checkbox label:before, .cc-checkbox label:after {\n  bottom: 0;\n  content: \"\";\n  right: 0;\n  margin: auto;\n  position: absolute;\n  top: 0; }\n\n.cc-checkbox label:before {\n  background: transparent;\n  border-radius: 2px;\n  border: 1px solid #424242;\n  cursor: pointer;\n  height: 20px;\n  transition: background .3s;\n  width: 20px; }\n\n.cc-checkbox input[type=\"checkbox\"] {\n  margin-left: 10px;\n  opacity: 0;\n  outline: 0; }\n\n.cc-checkbox input[type=\"checkbox\"]:checked + label:before {\n  background: #fdaf19;\n  border: none; }\n\n.cc-checkbox input[type=\"checkbox\"]:checked + label:after {\n  border: 3px solid #222;\n  border-left-style: none;\n  border-top-style: none;\n  height: 7px;\n  right: 4px;\n  top: -3px;\n  transform: rotate(45deg);\n  width: 12px; }\n\n/*radio*/\n.cc-checkbox.cc-radio label:before {\n  background: transparent;\n  border: 1px solid #424242;\n  cursor: pointer;\n  height: 25px;\n  transition: background .3s;\n  width: 25px; }\n\n.cc-checkbox input[type=\"radio\"] {\n  margin-left: 10px;\n  opacity: 0;\n  outline: 0; }\n\n.cc-checkbox input[type=\"radio\"]:checked + label:before {\n  background: transparent;\n  border-color: #fdaf19; }\n\n.cc-checkbox input[type=\"radio\"]:checked + label:after {\n  -moz-transform: scale(0.8);\n  -ms-transform: scale(0.8);\n  -o-transform: scale(0.8);\n  -webkit-transform: scale(0.8);\n  background: #fdaf19;\n  border-radius: 30px;\n  height: 25px;\n  transform: scale(0.8);\n  width: 25px; }\n\n.cc-radio label:before {\n  border-radius: 30px; }\n\n.radio-toggle--more-option li span {\n  padding-right: 25px !important;\n  width: 125px !important; }\n\n.radio-toggle .cc-question-container__list li {\n  padding-right: 52px; }\n\n.radio-toggle .cc-question-container__list li span {\n  padding: 10px;\n  width: auto; }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  .radio-toggle .cc-question-container__list li {\n    padding-right: 10px; }\n  .radio-toggle .cc-question-container__list li span {\n    padding: 10px; } }\n\n@media (max-width: 767px) {\n  .radio-toggle .cc-question-container__list li {\n    padding-right: 0; }\n  .radio-toggle .cc-question-container__list li {\n    display: inline-block;\n    padding-left: 50px; } }\n\n.progress-bar {\n  width: 100%;\n  position: absolute;\n  background: #a47c2b;\n  z-index: 1;\n  height: 8px;\n  right: 0; }\n\n.progress-line {\n  background: #fdaf19;\n  height: 100%;\n  display: block;\n  width: 0%;\n  transition: all .4s ease-in; }\n\n/** Scrollbar\t**/\n.cc-scrollbar-wrapper {\n  float: right;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  z-index: 1; }\n\n.cc-scrollbar-content {\n  -moz-box-sizing: border-box;\n  /* padding         : 0 32px 0 0; */\n  /* right           : -18px; */\n  box-sizing: border-box;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  width: 107%; }\n\n.cc-scrollbar-scroll {\n  background: #aaa;\n  border-radius: 4px;\n  cursor: pointer;\n  opacity: 0;\n  position: relative;\n  top: 0;\n  transition: opacity 0.25s linear;\n  width: 9px;\n  z-index: 2; }\n\n.cc-scrollbar-container:hover .cc-scrollbar-scroll {\n  opacity: 1; }\n\n.cc-scrollbar-grabbed {\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -o-user-select: none;\n  -webkit-user-select: none;\n  user-select: none; }\n\n.range {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  width: 500px; }\n\ninput[type=range]::-webkit-slider-runnable-track {\n  -webkit-appearance: none;\n  background: #ff403d;\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\n  height: 1px; }\n\ninput[type=range]:focus {\n  outline: none; }\n\ninput[type=range]::-moz-range-track {\n  -moz-appearance: none;\n  background: #ff403d;\n  background: -moz-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\n  background: -webkit-linear-gradient(45deg, #ff403d 0%, #992a28 100%);\n  background: linear-gradient(-135deg, #ff403d 0%, #992a28 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\n  height: 1px; }\n\ninput[type=range]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  border: 1px solid #ff403d;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  max-width: 80px;\n  position: relative;\n  bottom: 25px;\n  background-color: #fff;\n  cursor: -webkit-grab; }\n\ninput[type=range]::-moz-range-thumb {\n  -moz-appearance: none;\n  border: 1px solid #ff403d;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  max-width: 80px;\n  position: relative;\n  bottom: 25px;\n  background-color: #fff;\n  cursor: -moz-grab; }\n\ninput[type=range]::-moz-range-thumb:before {\n  content: 'asd'; }\n\ninput[type=range]::-webkit-slider-thumb:active {\n  cursor: -webkit-grabbing; }\n\ninput[type=range]::-moz-range-thumb:active {\n  cursor: -moz-grabbing; }\n\n.cc-question-container__content.range-slider {\n  height: 50px;\n  padding-top: 9px; }\n\n.slider-tip {\n  background: #eb1c23;\n  padding: 8px 9px 9px 9px;\n  position: absolute;\n  top: 51px;\n  right: 0px;\n  left: 0;\n  margin: 0 auto;\n  /* border-top-left-radius: 10px; */\n  /* border-top-right-radius: 10px; */\n  /* border-bottom-left-radius: 100%; */\n  /* border-bottom-right-radius: 100%; */\n  color: #fff;\n  /* display: none !important; */\n  background: none;\n  color: #424242;\n  font-size: 13px;\n  width: 100px;\n  display: inline-block;\n  text-align: center; }\n\n.slider-tip:after {\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n@media (max-width: 1024px) {\n  .range {\n    width: 100%; } }\n\ninput.range.blue::-moz-range-track,\ninput.range.blue::-webkit-slider-runnable-track {\n  background: blue; }\n\n.chart {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  display: inline-block;\n  height: 21px;\n  padding-top: 22px;\n  position: relative;\n  vertical-align: top;\n  width: 21px; }\n\n.chart span {\n  display: block;\n  font-size: 2em;\n  font-weight: normal; }\n\n.chart canvas {\n  right: 0;\n  position: absolute;\n  top: 0; }\n\n.loader {\n  height: 21px;\n  right: 28px;\n  position: absolute;\n  top: 8px;\n  width: 21px; }\n\n@media (min-width: 767px) {\n  .chart canvas {\n    margin-right: 10px; } }\n\n@media (max-width: 767px) {\n  .loader {\n    position: relative;\n    right: auto;\n    top: 0;\n    left: auto; } }\n\nhtml[dir=\"rtl\"] .chart canvas {\n  left: 0;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .loader {\n  left: 28px;\n  right: initial; }\n\n@media (min-width: 767px) {\n  html[dir=\"rtl\"] .chart canvas {\n    margin-left: 10px;\n    margin-right: 0; } }\n\n/** Utilities **/\n.show {\n  display: block !important; }\n\n.hide {\n  display: none !important; }\n\n.bottom {\n  bottom: 0; }\n\n.right {\n  left: 0; }\n\n.left {\n  right: 0; }\n\n.top {\n  top: 0; }\n\n.overlay {\n  background: #fff;\n  bottom: 0;\n  height: 100%;\n  right: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: 0; }\n\n.overlay.glass {\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\n  background-repeat: no-repeat;\n  background-size: cover; }\n\n.clearfix {\n  clear: both;\n  display: block; }\n\n.form-control::-webkit-input-placeholder {\n  /* Chrome/Opera/Safari */\n  color: #4c4c4c;\n  font-family: 'Open Sans';\n  font-size: 13px;\n  font-style: italic;\n  font-weight: normal; }\n\n.form-control::-moz-placeholder {\n  /* Firefox 19+ */\n  font-style: italic;\n  font-size: 13px;\n  font-weight: normal;\n  font-family: 'Open Sans';\n  color: #4c4c4c; }\n\n.form-control:-ms-input-placeholder {\n  /* IE 10+ */\n  font-style: italic;\n  font-size: 13px;\n  font-weight: normal;\n  font-family: 'Open Sans';\n  color: #4c4c4c; }\n\n.form-control:-moz-placeholder {\n  /* Firefox 18- */\n  font-style: italic;\n  font-size: 13px;\n  font-weight: normal;\n  font-family: 'Open Sans';\n  color: #4c4c4c; }\n\n@media (min-width: 767px) {\n  .desktop-hide {\n    display: none; } }\n\n@media (max-width: 767px) {\n  .mobile-hide {\n    display: none; }\n  .loader {\n    position: relative;\n    right: auto;\n    top: 0;\n    left: auto; }\n  .overlay.welcome-overlay {\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\n    background: rgba(210, 42, 53, 0.87); }\n  iframe, body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\n    -webkit-filter: blur(15px);\n    -moz-filter: blur(15px);\n    -ms-filter: blur(15px);\n    -o-filter: blur(15px);\n    filter: blur(15px); } }\n\nhtml[dir=\"rtl\"] .submit-icon {\n  right: 0;\n  left: initial;\n  margin-right: 75px;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='Submit_Icon'%3E%3Cg id='Oval-4'%3E%3Cg id='path-1-link' fill-rule='nonzero' fill='%23white'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3Cg id='path-1-link' fill='%23FCAF18'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy' transform='translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 '%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\"); }\n\n@media (max-width: 767px) {\n  html[dir=\"rtl\"] .submit-icon {\n    position: absolute;\n    left: 30px;\n    right: initial;\n    top: auto;\n    bottom: 30px;\n    padding-right: 0; } }\n\n/** Themes **/\n.yellow .progress-bar {\n  background: #a47c2b; }\n\n.yellow .progress-line {\n  background: #fdaf19; }\n\n.yellow .submit-icon {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); }\n\n.yellow .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\n  background: #fdaf19; }\n\n.yellow .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\n  border-color: #222; }\n\n.yellow .cc-checkbox input[type=\"radio\"]:checked + label:before {\n  border-color: #fdaf19; }\n\n.yellow .cc-checkbox input[type=\"radio\"]:checked + label:after {\n  background: #fdaf19; }\n\n.yellow .form-control:focus {\n  border-color: #fcaf18; }\n\n.yellow .cc-message-box__btn {\n  background: #fdaf19; }\n\n.red .progress-bar {\n  /*background: rgba(130, 17, 25, 0.87);*/\n  background: #d22a35; }\n\n.red .progress-line {\n  background: #d22a35;\n  filter: brightness(150%); }\n\n.red .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\n  background: #d22a35; }\n\n.red .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\n  border-color: #fff; }\n\n.red .cc-checkbox input[type=\"radio\"]:checked + label:before {\n  border-color: #d22a35; }\n\n.red .cc-checkbox input[type=\"radio\"]:checked + label:after {\n  background: #d22a35; }\n\n.red .form-control:focus {\n  border-color: #d22a35; }\n\n.red .cc-message-box__btn {\n  background: #d22a35;\n  color: #fff; }\n\n.red .submit-icon {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='white' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='rgba(210, 42, 53, 1)' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23FFFFFF'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); }\n\n.cc-question-container, .hide-slide {\n  -webkit-transform: translateX(-5px);\n  -moz-transform: translateX(-5px);\n  -ms-transform: translateX(-5px);\n  -o-transform: translateX(-5px);\n  transform: translateX(-5px);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-bottom-up {\n  -webkit-transform: translateY(30px);\n  -moz-transform: translateY(30px);\n  -ms-transform: translateY(30px);\n  -o-transform: translateY(30px);\n  transform: translateY(30px);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-up-bottom {\n  -webkit-transform: translateY(100%);\n  -moz-transform: translateY(100%);\n  -ms-transform: translateY(100%);\n  -o-transform: translateY(100%);\n  transform: translateY(100%);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-right-left {\n  -webkit-transform: translateX(-100%);\n  -moz-transform: translateX(-100%);\n  -ms-transform: translateX(-100%);\n  -o-transform: translateX(-100%);\n  transform: translateX(-100%);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-left-right {\n  -webkit-transform: translateX(100%);\n  -moz-transform: translateX(100%);\n  -ms-transform: translateX(100%);\n  -o-transform: translateX(100%);\n  transform: translateX(100%);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.show-slide, .show-thankyou-slide {\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: visible;\n  opacity: 1;\n  -webkit-transform: translateX(0) translateY(0);\n  -moz-transform: translateX(0) translateY(0);\n  -ms-transform: translateX(0) translateY(0);\n  -o-transform: translateX(0) translateY(0);\n  transform: translateX(0) translateY(0); }\n" : "body {\n  margin: 0;\n  padding: 0;\n  font-family: \"open sans\", sans-serif; }\n\nul {\n  padding-left: 0;\n  list-style-type: none;\n  margin: 0; }\n\na, a:hover, a:focus {\n  text-decoration: none;\n  color: inherit; }\n\n*, *:before, *:after {\n  box-sizing: border-box; }\n\np {\n  color: inherit;\n  margin: 0; }\n\nmap area {\n  outline: 0;\n  cursor: pointer; }\n\nmap area:hover {\n  outline: 1; }\n\n.cc-popup-container {\n  background: #fff;\n  box-shadow: 0 0 4px 5px rgba(0, 0, 0, 0.05);\n  font-family: \"open sans\", sans-serif;\n  position: fixed;\n  text-align: center;\n  max-width: 500px;\n  max-height: 500px;\n  z-index: 1111;\n  padding: 10px; }\n\n#cc-thankyou-container .cc-question-container__text p,\n#cc-thankyou-container .cc-question-container__text {\n  width: 400px;\n  font-size: 20px;\n  max-width: initial; }\n\n.cc-message-box {\n  position: relative;\n  z-index: 11; }\n\n.cc-message-box__text {\n  color: #424242;\n  font-size: 14px;\n  font-weight: 600;\n  margin: 0;\n  padding: 29px 14px 20px 14px;\n  vertical-align: middle; }\n\n.cc-message-box__btn {\n  background: #fdaf19;\n  border-radius: 100px;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: 700;\n  height: 32px;\n  padding: 6px 0;\n  width: 124px; }\n\n.cc-popup-container .cc-popup-container__close {\n  cursor: pointer;\n  margin: 4px;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 111; }\n\n.cc-popup-container-2 {\n  /* box-shadow: 0 0 4px 5px rgba(0,0,0,0.05); */\n  height: 144px;\n  position: fixed;\n  width: 100%;\n  z-index: 1111; }\n\n.cc-popup-container-2__icons, .cc-popup-container-2__icons {\n  cursor: pointer;\n  padding: 8px;\n  position: absolute;\n  top: 0;\n  z-index: 111; }\n\n.top.cc-popup-container-2 .cc-popup-container-2__icons {\n  padding-top: 15px; }\n\n.cc-popup-container-2__icons.cc-right-icon {\n  right: 0; }\n\n.cc-popup-container-2__icons.cc-left-icon {\n  left: 0; }\n\n.cc-popup-container__back {\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\n  display: inline-block;\n  width: 21px;\n  height: 21px; }\n\n.cc-question-container {\n  /* margin: auto; */\n  margin-right: 147px;\n  padding: 20px;\n  position: absolute;\n  text-align: center;\n  width: calc( 100% - 147px);\n  z-index: 11;\n  top: 0;\n  left: 0; }\n\n.cc-question-container__text {\n  /*height: 80px;*/\n  color: #424242;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: 600;\n  max-width: 230px;\n  padding: 8px 0;\n  text-align: center;\n  vertical-align: middle;\n  width: 20%;\n  position: relative; }\n\n.cc-question-container__required {\n  position: absolute;\n  top: -14px;\n  font-size: 11px;\n  left: 0;\n  font-weight: normal;\n  color: #C1272D;\n  display: none; }\n\n.cc-question-container__required-label {\n  display: inline-block;\n  position: relative;\n  top: -2px;\n  left: -2px; }\n\n.cc-question-container__content {\n  display: inline-block;\n  max-width: 78%;\n  vertical-align: middle;\n  width: auto; }\n\n.cc-question-container__list li {\n  display: inline-block;\n  padding-left: 29px;\n  vertical-align: middle; }\n\n.cc-question-container__list li span {\n  display: table-cell;\n  font-size: 15px;\n  padding-left: 15px;\n  text-align: left;\n  vertical-align: middle;\n  width: 125px; }\n\n.cc-question-container__list li input {\n  vertical-align: middle; }\n\n.cc-question-container:before {\n  content: '';\n  display: inline-block;\n  height: 100%;\n  margin-right: -4px;\n  vertical-align: middle; }\n\n.cc-question-container {\n  height: 100%;\n  vertical-align: middle; }\n\n.cc-questions-container {\n  height: 100%; }\n\n.multiline-box {\n  background: #fff;\n  border-radius: 2px;\n  border: 1px #6d6d6d solid;\n  font-family: 'Open Sans';\n  font-size: 15px;\n  height: 70px;\n  margin: 0 0px 0 50px;\n  min-width: 600px;\n  padding: 2px 5px;\n  resize: none; }\n\n.multiline-box:focus {\n  outline: 0; }\n\n.detail-box .cc-question-container__text p {\n  font-size: 13px;\n  font-weight: 700; }\n\n.detail-box .cc-question-container__text span {\n  display: inline-block;\n  font-size: 15px;\n  font-weight: normal; }\n\n.detail-box .cc-question-container__text {\n  height: 56px; }\n\n.detail-box[data-type=\"singleline\"] .cc-question-container__text {\n  margin-right: 20px; }\n\n.detail-box .cc-question-container__content .form-control,\n.single-line .cc-question-container__content .form-control {\n  background: transparent;\n  border: none;\n  border-bottom: 1px solid #6d6d6d;\n  font-family: \"open sans\";\n  font-size: 15px;\n  line-height: 26px;\n  outline: 0;\n  width: 300px; }\n\n.d-star-box.detail-box .cc-question-container__text {\n  height: 92px; }\n\n.hl.dropdown {\n  background-image: url(\"https://cx.getcloudcherry.com/microsurvey-assets/arrow-down.black.svg\");\n  background-position: 97% center;\n  background-repeat: no-repeat;\n  border-bottom: 1px solid #6d6d6d;\n  display: inline-block;\n  padding: 5px;\n  position: relative;\n  text-align: left;\n  width: 300px; }\n\n.drop-cc-question-container .cc-question-container__text {\n  /*height: 60px;*/\n  margin-right: 20px; }\n\n.form-control:focus {\n  border-color: #fcaf18; }\n\n.detail-box .cc-question-container__content {\n  padding-left: 0; }\n\n.cc-big-list-container .cc-question-container__list {\n  display: table;\n  width: 100%; }\n\n.cc-big-list-container .cc-question-container__list li {\n  display: table-cell;\n  vertical-align: middle; }\n\n.cc-thankyou-container {\n  width: 100% !important; }\n\n.submit-icon {\n  direction: ltr;\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto 0;\n  z-index: 11;\n  margin-right: 75px;\n  font-size: 16px /*rtl:14px*/;\n  cursor: pointer;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\");\n  width: 47px;\n  height: 47px; }\n\n@media (min-width: 767px) and (max-width: 1024px) {\n  .cc-popup-container-2 {\n    height: 300px; }\n  .cc-big-list-container .cc-question-container__list, .cc-question-container__list {\n    text-align: left; }\n  .cc-big-list-container .cc-question-container__list li, .cc-question-container__list li {\n    display: inline-block;\n    margin-bottom: 15px;\n    vertical-align: middle;\n    width: 49%; }\n  .cc-question-container__content {\n    display: inline-block;\n    width: 45%; }\n  .multiline-box {\n    min-width: 100%;\n    margin: 0; }\n  .option-smile-box img, .option-star-box img {\n    margin-right: 11px !important; }\n  .cc-thankyou-container .cc-question-container__text p,\n  .cc-thankyou-container .cc-question-container__text {\n    width: 100% !important;\n    text-align: center;\n    margin: 0 !important;\n    padding: 0;\n    line-height: initial;\n    height: auto; }\n  .cc-thankyou-container .cc-question-container__text {\n    max-width: 98%; } }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  .cc-question-container {\n    width: 100%;\n    margin: auto; }\n  .cc-question-container__text {\n    width: 24%;\n    padding-right: 20px; }\n  .cc-question-container__content.rating-color {\n    margin-left: 0px; }\n  .submit-icon {\n    margin-right: 40px !important; }\n  .cc-question-container__content.rating-color {\n    margin-left: 0px !important; }\n  .cc-question-container__content {\n    width: 50% !important; } }\n\n@media (max-width: 767px) {\n  .cc-survey-container, .cc-survey-content {\n    height: 100%; }\n  .cc-popup-container-2 {\n    bottom: auto;\n    height: 100%;\n    top: 0; }\n  .cc-popup-container-2__icons.cc-right-icon {\n    left: initial;\n    right: 0;\n    padding: 0; }\n  .cc-popup-container-2__icons.cc-left-icon {\n    left: 0;\n    right: initial;\n    padding: 0; }\n  .cc-big-list-container .cc-question-container__list li {\n    display: block; }\n  .radio-toggle--more-option li span {\n    width: 84% !important;\n    padding-left: 25px !important; }\n  .radio-toggle--more-option li {\n    padding-right: 0 !important;\n    display: block !important;\n    padding-top: 10px; }\n  .detail-box .cc-question-container__content {\n    padding-left: 0px; }\n  .cc-question-container {\n    bottom: 75px;\n    height: auto;\n    left: 0;\n    padding: 40px 25px;\n    position: absolute;\n    text-align: left;\n    top: auto;\n    width: 100%; }\n  .cc-question-container__text {\n    font-size: 18px;\n    margin-bottom: 20px;\n    max-width: 400px;\n    text-align: left;\n    width: 100%; }\n  .cc-question-container__content {\n    display: block;\n    max-width: 100%;\n    width: 100%; }\n  .cc-question-container__list label {\n    display: block; }\n  .cc-question-container__list li span {\n    width: auto;\n    padding-left: 15px; }\n  .cc-question-container__list li {\n    padding-left: 0;\n    margin-bottom: 10px;\n    display: block; }\n  .cc-popup-container-2__icons {\n    margin: 20px; }\n  .cc-popup-container-2__icons.left-icon {\n    left: auto;\n    right: 0; }\n  .cc-popup-container-2__icons.right-icon {\n    right: auto;\n    left: 0; }\n  .cc-popup-container__close {\n    width: 27px; }\n  .cc-question-container__content.rating-color {\n    margin-left: 0 !important; }\n  .multiline-box {\n    height: 150px;\n    margin: 0;\n    min-width: 100%;\n    width: 100%; }\n  .hl.dropdown {\n    width: 100%; }\n  .detail-box .cc-question-container__content .form-control {\n    width: 100%; }\n  .detail-box .cc-question-container__text p {\n    font-size: 18px; }\n  .mobile-detail-box .cc-question-container__text {\n    height: auto; }\n  .welcome-box .cc-question-container__text p {\n    color: #fff; }\n  .cc-questions-container {\n    height: 100%;\n    position: relative; } }\n\n@media (max-width: 767px) {\n  .submit-icon {\n    position: absolute;\n    left: 25px;\n    top: auto;\n    bottom: 30px;\n    padding-right: 0; }\n  .cc-popup-container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    margin: 0;\n    width: 100%;\n    height: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    text-align: left;\n    background: transparent; }\n  .cc-popup-container .cc-message-box {\n    position: absolute;\n    bottom: 20%; }\n  .cc-popup-container .cc-message-box .cc-message-box__text {\n    font-size: 20px; }\n  .cc-popup-container .cc-message-box .submit-icon {\n    position: absolute;\n    bottom: -100%;\n    top: initial;\n    left: 0;\n    margin: 0 14px; }\n  .cc-popup-container .cc-popup-container__close {\n    margin: 20px;\n    right: 0;\n    top: 0; }\n  .cc-popup-container__back {\n    background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_.svg);\n    display: inline-block;\n    width: 27px;\n    height: 27px;\n    background-size: 100%; }\n  .cc-question-container__required-label {\n    display: block;\n    left: 0;\n    top: 2px; }\n  .cc-thankyou-container .cc-question-container__text p,\n  .cc-thankyou-container .cc-question-container__text {\n    width: 100% !important;\n    text-align: center;\n    margin: 0 !important;\n    padding: 0;\n    line-height: initial;\n    height: auto; }\n  .cc-thankyou-container .cc-question-container__text {\n    max-width: 98%; } }\n\nhtml[dir=\"rtl\"] .cc-popup-container .cc-popup-container__close {\n  right: initial;\n  left: 0;\n  top: 0; }\n\nhtml[dir=\"rtl\"] .cc-popup-container__back {\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/Back_Icon_rtl_.svg); }\n\nhtml[dir=\"rtl\"] .cc-popup-container-2__icons.cc-right-icon {\n  right: initial;\n  left: 0; }\n\nhtml[dir=\"rtl\"] .cc-popup-container-2__icons.cc-left-icon {\n  right: 0;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container {\n  /* margin: auto; */\n  margin-left: 147px;\n  margin-right: 0;\n  right: 0;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container__required {\n  left: 1%;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container__required-label {\n  top: -2px;\n  right: -2px;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .cc-question-container__list li {\n  display: inline-block;\n  padding-right: 25px;\n  padding-left: 0;\n  vertical-align: middle; }\n\nhtml[dir=\"rtl\"] .cc-question-container__list li span {\n  padding-right: 15px;\n  padding-left: 0;\n  text-align: right; }\n\nhtml[dir=\"rtl\"] .cc-question-container:before {\n  margin-left: -4px;\n  margin-right: 0; }\n\nhtml[dir=\"rtl\"] .multiline-box {\n  margin: 0 50px 0 0px; }\n\nhtml[dir=\"rtl\"] .hl.dropdown {\n  background-position: 97% center;\n  text-align: right; }\n\nhtml[dir=\"rtl\"] .drop-cc-question-container .cc-question-container__text {\n  /*height: 60px;*/\n  margin-left: 20px;\n  margin-right: 0; }\n\nhtml[dir=\"rtl\"] .detail-box .cc-question-container__content {\n  padding-right: 0;\n  padding-left: 0; }\n\n@media (min-width: 767px) and (max-width: 1024px) {\n  html[dir=\"rtl\"] .cc-big-list-container .cc-question-container__list,\n  html[dir=\"rtl\"] .cc-question-container__list {\n    text-align: right; } }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  html[dir=\"rtl\"] .cc-question-container__text {\n    padding-left: 20px;\n    padding-right: 0; }\n  html[dir=\"rtl\"] .cc-question-container__content.rating-color {\n    margin-left: 0px;\n    margin-right: 0px; } }\n\n@media (max-width: 767px) {\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.cc-right-icon {\n    left: auto;\n    right: 0; }\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.cc-left-icon {\n    left: 0;\n    right: auto; }\n  html[dir=\"rtl\"] .radio-toggle--more-option li span {\n    padding-right: 25px !important;\n    padding-left: 0 !important; }\n  html[dir=\"rtl\"] .radio-toggle--more-option li {\n    padding-right: 0 !important;\n    padding-left: 0 !important; }\n  html[dir=\"rtl\"] .detail-box .cc-question-container__content {\n    padding-left: 0px;\n    padding-right: 0px; }\n  html[dir=\"rtl\"] .cc-question-container {\n    left: initial;\n    right: 0; }\n  html[dir=\"rtl\"] .cc-question-container__text {\n    text-align: right; }\n  html[dir=\"rtl\"] .cc-question-container__list li span {\n    padding-right: 15px;\n    padding-left: 0px; }\n  html[dir=\"rtl\"] .cc-question-container__list li {\n    padding-left: 0;\n    padding-right: 0; }\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.left-icon {\n    left: 0;\n    right: auto; }\n  html[dir=\"rtl\"] .cc-popup-container-2__icons.right-icon {\n    right: 0;\n    left: auto; }\n  html[dir=\"rtl\"] .cc-question-container__content.rating-color {\n    margin-left: 0 !important;\n    margin-right: 0 !important; } }\n\n/*cc-question-container color scale css*/\n.option-number-item {\n  color: #fff;\n  float: left;\n  font-size: 13px;\n  height: 38px;\n  padding-top: 10px;\n  text-align: center;\n  width: 8.5%;\n  margin: 0 .25%;\n  cursor: pointer; }\n\n.option-number-item.option-zero {\n  background: #853838; }\n\n.option-number-item.option-zero.selected,\n.option-number-item.option-zero:hover {\n  background: #572526; }\n\n.option-number-item.option-one {\n  background: #9e4343; }\n\n.option-number-item.option-one.selected,\n.option-number-item.option-one:hover {\n  background: #642728; }\n\n.option-number-item.option-two {\n  background: #c14d4d; }\n\n.option-number-item.option-two.selected,\n.option-number-item.option-two:hover {\n  background: #712827; }\n\n.option-number-item.option-three {\n  background: #d94d4d; }\n\n.option-number-item.option-three.selected,\n.option-number-item.option-three:hover {\n  background: #7c2828; }\n\n.option-number-item.option-four {\n  background: #ee4d4d; }\n\n.option-number-item.option-four.selected,\n.option-number-item.option-four:hover {\n  background: #852828; }\n\n.option-number-item.option-five {\n  background: #ff4d4d; }\n\n.option-number-item.option-five.selected,\n.option-number-item.option-five:hover {\n  background: #844828; }\n\n.option-number-item.option-six {\n  background: #ff8c4d; }\n\n.option-number-item.option-six.selected,\n.option-number-item.option-six:hover {\n  background: #844828; }\n\n.option-number-item.option-seven {\n  background: #ffc74d; }\n\n.option-number-item.option-seven.selected,\n.option-number-item.option-seven:hover {\n  background: #856728; }\n\n.option-number-item.option-eight {\n  background: #f5eb4d; }\n\n.option-number-item.option-eight.selected,\n.option-number-item.option-eight:hover {\n  background: #7f7a28; }\n\n.option-number-item.option-nine {\n  background: #73ca81; }\n\n.option-number-item.option-nine.selected,\n.option-number-item.option-nine:hover {\n  background: #3b6942; }\n\n.option-number-item.option-ten {\n  background: #4db47c; }\n\n.option-number-item.option-ten.selected,\n.option-number-item.option-ten:hover {\n  background: #285e40; }\n\n.cc-question-container__content.rating-color {\n  margin-left: 74px; }\n\n.option-left-rating-text, .option-right-rating-text {\n  bottom: -25px;\n  color: #424242;\n  font-size: 13px;\n  left: 0;\n  position: absolute; }\n\n.option-right-rating-text {\n  left: auto;\n  right: 0; }\n\n.rating-color {\n  position: relative; }\n\n.option-smile-box, .option-star-box {\n  height: 60px;\n  margin-right: 29px;\n  width: 60px;\n  cursor: pointer;\n  border: solid 4px transparent;\n  border-radius: 50%;\n  display: inline-block;\n  background-size: 100%; }\n\n.option-smile-box.one {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.two {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.three {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.four {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.five {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.one.selected,\n.option-smile-box.one:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_1_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.two.selected,\n.option-smile-box.two:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_2_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.three.selected,\n.option-smile-box.three:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_3_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.four.selected,\n.option-smile-box.four:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_4_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-smile-box.five.selected,\n.option-smile-box.five:hover {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Smilie_5_Selected.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-star-box {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Star.svg\") no-repeat;\n  background-size: 100%; }\n\n.option-star-box:hover,\n.option-star-box.selected {\n  background: url(\"https://cx.getcloudcherry.com/microsurvey-assets/Star_selected.svg\") no-repeat;\n  background-size: 100%; }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  .option-smile-box, .option-star-box {\n    width: 50px;\n    height: 50px;\n    margin-right: 10px; } }\n\n@media (max-width: 767px) {\n  .option-smile-box, .option-star-box {\n    display: inline-block;\n    margin-right: 3px; }\n  .option-number-item {\n    color: #fff;\n    float: left;\n    font-size: 15px;\n    height: 35px;\n    margin-right: 1px;\n    padding-top: 7px;\n    text-align: center;\n    width: 38px;\n    cursor: pointer;\n    vertical-align: middle; }\n  .cc-question-container[data-type=\"scale\"] {\n    bottom: 106px; }\n  .cc-question-container[data-type=\"scale\"] .option-left-rating-text,\n  .cc-question-container[data-type=\"scale\"] .option-right-rating-text {\n    bottom: -44px;\n    width: 49px; }\n  .cc-question-container[data-type=\"scale\"] .option-right-rating-text {\n    text-align: right; }\n  .option-smile-box img, .option-star-box img {\n    padding-right: 5px;\n    margin-right: 0; } }\n\n@media (max-width: 381px) {\n  .option-smile-box, .option-star-box {\n    display: inline-block;\n    margin-right: 0;\n    height: 50px;\n    width: 50px; }\n  .option-smile-box img, .option-star-box img {\n    padding-right: 5px;\n    margin-right: 0; } }\n\n.option-number-item.option-scale {\n  background: #4db47c; }\n\n.option-number-item.option-scale.selected,\n.option-number-item.option-scale:hover {\n  background: #712827; }\n\n.cc-nps-image {\n  cursor: pointer;\n  position: relative;\n  left: -25px; }\n\n.circle-image {\n  margin: auto;\n  width: 247px;\n  overflow: hidden;\n  height: 235px;\n  position: relative; }\n\n.cc-nps-selected-rating {\n  font-size: 100px;\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 0px;\n  line-height: 100px;\n  right: 0;\n  margin: auto;\n  bottom: 0;\n  width: 110px;\n  height: 100px;\n  text-align: center;\n  font-weight: 100;\n  color: #bbb; }\n\n/*cc-question-container color scale css*/\nhtml[dir=\"rtl\"] .option-number-item {\n  margin-right: 1px;\n  margin-left: 0px;\n  float: right; }\n\nhtml[dir=\"rtl\"] .cc-question-container__content.rating-color {\n  margin-right: 74px;\n  margin-left: 0px; }\n\nhtml[dir=\"rtl\"] .option-left-rating-text, .option-right-rating-text {\n  right: 0;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .option-right-rating-text {\n  left: 0;\n  right: auto; }\n\nhtml[dir=\"rtl\"] .rating-color {\n  position: relative; }\n\nhtml[dir=\"rtl\"] .option-smile-box img, .option-star-box img {\n  margin-right: 29px;\n  margin-left: 0px; }\n\nhtml[dir=\"rtl\"] .option-star-box img {\n  margin-left: 19px;\n  margin-right: 0px; }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  html[dir=\"rtl\"] .option-smile-box img, html[dir=\"rtl\"] .option-star-box img {\n    margin-left: 0px;\n    margin-right: 10px; } }\n\n@media (max-width: 767px) {\n  html[dir=\"rtl\"] .option-smile-box img, html[dir=\"rtl\"] .option-star-box img {\n    padding-right: 0px;\n    padding-left: 5px;\n    margin-right: 0;\n    margin-left: 0; } }\n\n.cc-select-wrapper {\n  position: relative;\n  display: inline-block;\n  user-select: none;\n  z-index: 11; }\n\n.cc-select-wrapper select {\n  display: none; }\n\n.cc-select {\n  position: relative;\n  display: inline-block; }\n\n.cc-select-trigger {\n  position: relative;\n  display: block;\n  width: 130px;\n  padding: 0 84px 0 22px;\n  font-size: 15px;\n  font-style: italic;\n  font-weight: 300;\n  color: #222;\n  line-height: 20px;\n  background: transparent;\n  border-radius: 0;\n  cursor: pointer;\n  width: 300px;\n  border-bottom: 1px solid #6d6d6d;\n  display: inline-block;\n  text-align: left;\n  padding: 5px;\n  position: relative;\n  /*background-image: url(../images/arrow-down.black.svg);*/\n  background-position: 97% center;\n  background-repeat: no-repeat; }\n\n.cc-select-trigger:after {\n  position: absolute;\n  display: block;\n  content: '';\n  width: 10px;\n  height: 10px;\n  top: 50%;\n  right: 5px;\n  margin-top: -3px;\n  border-bottom: 1px solid #222;\n  border-right: 1px solid #222;\n  transform: rotate(45deg) translateY(-50%);\n  transition: all .2s ease-in-out;\n  transform-origin: 50% 0; }\n\n.cc-select.opened .cc-select-trigger:after {\n  margin-top: 3px;\n  transform: rotate(-135deg) translateY(-50%); }\n\n.cc-select-options-container {\n  position: absolute;\n  display: block;\n  top: 100%;\n  left: 0;\n  right: 0;\n  min-width: 100%;\n  margin: 15px 0;\n  border: 1px solid #b5b5b5;\n  border-radius: 4px;\n  box-sizing: border-box;\n  box-shadow: 0 2px 1px rgba(0, 0, 0, 0.07);\n  background: #fff;\n  transition: all .2s ease-in-out;\n  opacity: 0;\n  visibility: hidden;\n  pointer-events: none;\n  transform: translateY(calc( -100% - 65px));\n  height: auto;\n  max-height: 150px;\n  overflow: hidden; }\n\n.cc-select-options {\n  /*  max-height: 150px;\r\n    overflow-y: scroll; */\n  overflow: scroll;\n  height: 100%; }\n\n.cc-select.opened .cc-select-options-container {\n  opacity: 1;\n  visibility: visible;\n  pointer-events: all;\n  transform: translateY(calc( -100% - 65px)); }\n\n.cc-popup-container-2.top .cc-select-options-container,\n.cc-popup-container-2.top .cc-select.opened .cc-select-options-container {\n  transform: translateY(calc( -100% + 75px)); }\n\n.cc-select-options:before {\n  /*       position: absolute;\r\n    display: block;\r\n    content: '';\r\n    bottom: 100%; right: 25px;\r\n    width: 7px; height: 7px;\r\n    margin-bottom: -4px;\r\n    border-top: 1px solid #b5b5b5;\r\n    border-left: 1px solid #b5b5b5;\r\n    background: #fff;\r\n    transform: rotate(45deg);\r\n    transition: all .4s ease-in-out; */ }\n\n.option-hover:before {\n  background: #f9f9f9; }\n\n.cc-select-option {\n  position: relative;\n  display: block;\n  padding: 0 12px;\n  border-bottom: 1px solid #e4e4e4;\n  font-size: 12px;\n  font-weight: 600;\n  color: #222;\n  line-height: 34px;\n  cursor: pointer;\n  transition: all .2s ease-in-out;\n  text-align: left;\n  margin: 0 5px;\n  width: 95%; }\n\n.cc-select-option:first-of-type {\n  border-radius: 4px 4px 0 0; }\n\n.cc-select-option:last-of-type {\n  border-bottom: 0;\n  border-radius: 0 0 4px 4px; }\n\n.cc-select-option:hover,\n.cc-select-option.selection {\n  background: #f9f9f9; }\n\n.cc-select-wrapper.down .cc-select-options-container {\n  transform: translateY(calc( 20px)); }\n\n.cc-select-wrapper.down .cc-select.opened .cc-select-options-container {\n  transform: translateY(calc( 20px)); }\n\n.option-yes-no.No {\n  position: relative;\n  top: 4px; }\n\n.cc-question-container[data-type=\"nps\"] .cc-question-container__content,\n.cc-question-container[data-type=\"scale\"] .cc-question-container__content {\n  width: 40%; }\n\n@media (max-width: 767px) {\n  .cc-select, .cc-select-wrapper {\n    min-width: 100%; }\n  .cc-select-trigger {\n    min-width: 100%;\n    width: auto; } }\n\nhtml[dir=\"rtl\"] .cc-select-trigger {\n  padding: 0 22px 0 84px;\n  background-position: 97% center;\n  background-repeat: no-repeat;\n  text-align: right; }\n\nhtml[dir=\"rtl\"] .cc-select-trigger:after {\n  top: 50%;\n  left: 25px;\n  right: initial; }\n\nhtml[dir=\"rtl\"] .cc-select-option {\n  text-align: right; }\n\nhtml[dir=\"rtl\"] .cc-select-option:first-of-type {\n  border-radius: 4px 0px 0 4px; }\n\nhtml[dir=\"rtl\"] .cc-select-option:last-of-type {\n  border-radius: 0 4px 4px 0px; }\n\n/** Checkbox **/\n.cc-checkbox {\n  display: table-cell;\n  position: relative;\n  text-align: left;\n  vertical-align: middle; }\n\n.cc-checkbox label {\n  cursor: pointer; }\n\n.cc-checkbox + span label img {\n  width: 40px; }\n\n.cc-checkbox label:before, .cc-checkbox label:after {\n  bottom: 0;\n  content: \"\";\n  left: 0;\n  margin: auto;\n  position: absolute;\n  top: 0; }\n\n.cc-checkbox label:before {\n  background: transparent;\n  border-radius: 2px;\n  border: 1px solid #424242;\n  cursor: pointer;\n  height: 20px;\n  transition: background .3s;\n  width: 20px; }\n\n.cc-checkbox input[type=\"checkbox\"] {\n  margin-right: 10px;\n  opacity: 0;\n  outline: 0; }\n\n.cc-checkbox input[type=\"checkbox\"]:checked + label:before {\n  background: #fdaf19;\n  border: none; }\n\n.cc-checkbox input[type=\"checkbox\"]:checked + label:after {\n  border: 3px solid #222;\n  border-right-style: none;\n  border-top-style: none;\n  height: 7px;\n  left: 4px;\n  top: -3px;\n  transform: rotate(-45deg);\n  width: 12px; }\n\n/*radio*/\n.cc-checkbox.cc-radio label:before {\n  background: transparent;\n  border: 1px solid #424242;\n  cursor: pointer;\n  height: 25px;\n  transition: background .3s;\n  width: 25px; }\n\n.cc-checkbox input[type=\"radio\"] {\n  margin-right: 10px;\n  opacity: 0;\n  outline: 0; }\n\n.cc-checkbox input[type=\"radio\"]:checked + label:before {\n  background: transparent;\n  border-color: #fdaf19; }\n\n.cc-checkbox input[type=\"radio\"]:checked + label:after {\n  -moz-transform: scale(0.8);\n  -ms-transform: scale(0.8);\n  -o-transform: scale(0.8);\n  -webkit-transform: scale(0.8);\n  background: #fdaf19;\n  border-radius: 30px;\n  height: 25px;\n  transform: scale(0.8);\n  width: 25px; }\n\n.cc-radio label:before {\n  border-radius: 30px; }\n\n.radio-toggle--more-option li span {\n  padding-left: 25px !important;\n  width: 125px !important; }\n\n.radio-toggle .cc-question-container__list li {\n  padding-left: 52px; }\n\n.radio-toggle .cc-question-container__list li span {\n  padding: 10px;\n  width: auto; }\n\n@media (min-width: 767px) and (max-width: 992px) {\n  .radio-toggle .cc-question-container__list li {\n    padding-left: 10px; }\n  .radio-toggle .cc-question-container__list li span {\n    padding: 10px; } }\n\n@media (max-width: 767px) {\n  .radio-toggle .cc-question-container__list li {\n    padding-left: 0; }\n  .radio-toggle .cc-question-container__list li {\n    display: inline-block;\n    padding-right: 50px; } }\n\n.progress-bar {\n  width: 100%;\n  position: absolute;\n  background: #a47c2b;\n  z-index: 1;\n  height: 8px;\n  left: 0; }\n\n.progress-line {\n  background: #fdaf19;\n  height: 100%;\n  display: block;\n  width: 0%;\n  transition: all .4s ease-in; }\n\n/** Scrollbar\t**/\n.cc-scrollbar-wrapper {\n  float: left;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  z-index: 1; }\n\n.cc-scrollbar-content {\n  -moz-box-sizing: border-box;\n  /* padding         : 0 32px 0 0; */\n  /* right           : -18px; */\n  box-sizing: border-box;\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  width: 107%; }\n\n.cc-scrollbar-scroll {\n  background: #aaa;\n  border-radius: 4px;\n  cursor: pointer;\n  opacity: 0;\n  position: relative;\n  top: 0;\n  transition: opacity 0.25s linear;\n  width: 9px;\n  z-index: 2; }\n\n.cc-scrollbar-container:hover .cc-scrollbar-scroll {\n  opacity: 1; }\n\n.cc-scrollbar-grabbed {\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -o-user-select: none;\n  -webkit-user-select: none;\n  user-select: none; }\n\n.range {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  width: 500px; }\n\ninput[type=range]::-webkit-slider-runnable-track {\n  -webkit-appearance: none;\n  background: #ff403d;\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\n  height: 1px; }\n\ninput[type=range]:focus {\n  outline: none; }\n\ninput[type=range]::-moz-range-track {\n  -moz-appearance: none;\n  background: #ff403d;\n  background: -moz-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\n  background: -webkit-linear-gradient(-45deg, #ff403d 0%, #992a28 100%);\n  background: linear-gradient(135deg, #ff403d 0%, #992a28 100%);\n  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff403d ', endColorstr='#992a28 ',GradientType=1 );\n  height: 1px; }\n\ninput[type=range]::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  border: 1px solid #ff403d;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  max-width: 80px;\n  position: relative;\n  bottom: 25px;\n  background-color: #fff;\n  cursor: -webkit-grab; }\n\ninput[type=range]::-moz-range-thumb {\n  -moz-appearance: none;\n  border: 1px solid #ff403d;\n  border-radius: 50%;\n  height: 50px;\n  width: 50px;\n  max-width: 80px;\n  position: relative;\n  bottom: 25px;\n  background-color: #fff;\n  cursor: -moz-grab; }\n\ninput[type=range]::-moz-range-thumb:before {\n  content: 'asd'; }\n\ninput[type=range]::-webkit-slider-thumb:active {\n  cursor: -webkit-grabbing; }\n\ninput[type=range]::-moz-range-thumb:active {\n  cursor: -moz-grabbing; }\n\n.cc-question-container__content.range-slider {\n  height: 50px;\n  padding-top: 9px; }\n\n.slider-tip {\n  background: #eb1c23;\n  padding: 8px 9px 9px 9px;\n  position: absolute;\n  top: 51px;\n  left: 0px;\n  right: 0;\n  margin: 0 auto;\n  /* border-top-left-radius: 10px; */\n  /* border-top-right-radius: 10px; */\n  /* border-bottom-left-radius: 100%; */\n  /* border-bottom-right-radius: 100%; */\n  color: #fff;\n  /* display: none !important; */\n  background: none;\n  color: #424242;\n  font-size: 13px;\n  width: 100px;\n  display: inline-block;\n  text-align: center; }\n\n.slider-tip:after {\n  border-width: 5px 5px 0;\n  border-top-color: #000; }\n\n@media (max-width: 1024px) {\n  .range {\n    width: 100%; } }\n\ninput.range.blue::-moz-range-track,\ninput.range.blue::-webkit-slider-runnable-track {\n  background: blue; }\n\n.chart {\n  -moz-box-sizing: border-box;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  display: inline-block;\n  height: 21px;\n  padding-top: 22px;\n  position: relative;\n  vertical-align: top;\n  width: 21px; }\n\n.chart span {\n  display: block;\n  font-size: 2em;\n  font-weight: normal; }\n\n.chart canvas {\n  left: 0;\n  position: absolute;\n  top: 0; }\n\n.loader {\n  height: 21px;\n  left: 28px;\n  position: absolute;\n  top: 8px;\n  width: 21px; }\n\n@media (min-width: 767px) {\n  .chart canvas {\n    margin-left: 10px; } }\n\n@media (max-width: 767px) {\n  .loader {\n    position: relative;\n    left: auto;\n    top: 0;\n    right: auto; } }\n\nhtml[dir=\"rtl\"] .chart canvas {\n  right: 0;\n  left: initial; }\n\nhtml[dir=\"rtl\"] .loader {\n  right: 28px;\n  left: initial; }\n\n@media (min-width: 767px) {\n  html[dir=\"rtl\"] .chart canvas {\n    margin-right: 10px;\n    margin-left: 0; } }\n\n/** Utilities **/\n.show {\n  display: block !important; }\n\n.hide {\n  display: none !important; }\n\n.bottom {\n  bottom: 0; }\n\n.right {\n  right: 0; }\n\n.left {\n  left: 0; }\n\n.top {\n  top: 0; }\n\n.overlay {\n  background: #fff;\n  bottom: 0;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  z-index: 0; }\n\n.overlay.glass {\n  background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);\n  background-repeat: no-repeat;\n  background-size: cover; }\n\n.clearfix {\n  clear: both;\n  display: block; }\n\n.form-control::-webkit-input-placeholder {\n  /* Chrome/Opera/Safari */\n  color: #4c4c4c;\n  font-family: 'Open Sans';\n  font-size: 13px;\n  font-style: italic;\n  font-weight: normal; }\n\n.form-control::-moz-placeholder {\n  /* Firefox 19+ */\n  font-style: italic;\n  font-size: 13px;\n  font-weight: normal;\n  font-family: 'Open Sans';\n  color: #4c4c4c; }\n\n.form-control:-ms-input-placeholder {\n  /* IE 10+ */\n  font-style: italic;\n  font-size: 13px;\n  font-weight: normal;\n  font-family: 'Open Sans';\n  color: #4c4c4c; }\n\n.form-control:-moz-placeholder {\n  /* Firefox 18- */\n  font-style: italic;\n  font-size: 13px;\n  font-weight: normal;\n  font-family: 'Open Sans';\n  color: #4c4c4c; }\n\n@media (min-width: 767px) {\n  .desktop-hide {\n    display: none; } }\n\n@media (max-width: 767px) {\n  .mobile-hide {\n    display: none; }\n  .loader {\n    position: relative;\n    left: auto;\n    top: 0;\n    right: auto; }\n  .overlay.welcome-overlay {\n    /*background-image: url(https://cx.getcloudcherry.com/microsurvey-assets/ww.png);*/\n    background: rgba(210, 42, 53, 0.87); }\n  iframe, body.blurr > *:not(.cc-popup-container):not(.cc-survey) {\n    -webkit-filter: blur(15px);\n    -moz-filter: blur(15px);\n    -ms-filter: blur(15px);\n    -o-filter: blur(15px);\n    filter: blur(15px); } }\n\nhtml[dir=\"rtl\"] .submit-icon {\n  left: 0;\n  right: initial;\n  margin-left: 75px;\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='Submit_Icon'%3E%3Cg id='Oval-4'%3E%3Cg id='path-1-link' fill-rule='nonzero' fill='%23white'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3Cg id='path-1-link' fill='%23FCAF18'%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy' transform='translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 '%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A\"); }\n\n@media (max-width: 767px) {\n  html[dir=\"rtl\"] .submit-icon {\n    position: absolute;\n    right: 30px;\n    left: initial;\n    top: auto;\n    bottom: 30px;\n    padding-left: 0; } }\n\n/** Themes **/\n.yellow .progress-bar {\n  background: #a47c2b; }\n\n.yellow .progress-line {\n  background: #fdaf19; }\n\n.yellow .submit-icon {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='black' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23404041'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); }\n\n.yellow .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\n  background: #fdaf19; }\n\n.yellow .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\n  border-color: #222; }\n\n.yellow .cc-checkbox input[type=\"radio\"]:checked + label:before {\n  border-color: #fdaf19; }\n\n.yellow .cc-checkbox input[type=\"radio\"]:checked + label:after {\n  background: #fdaf19; }\n\n.yellow .form-control:focus {\n  border-color: #fcaf18; }\n\n.yellow .cc-message-box__btn {\n  background: #fdaf19; }\n\n.red .progress-bar {\n  /*background: rgba(130, 17, 25, 0.87);*/\n  background: #d22a35; }\n\n.red .progress-line {\n  background: #d22a35;\n  filter: brightness(150%); }\n\n.red .cc-checkbox input[type=\"checkbox\"]:checked + label:before {\n  background: #d22a35; }\n\n.red .cc-checkbox input[type=\"checkbox\"]:checked + label:after {\n  border-color: #fff; }\n\n.red .cc-checkbox input[type=\"radio\"]:checked + label:before {\n  border-color: #d22a35; }\n\n.red .cc-checkbox input[type=\"radio\"]:checked + label:after {\n  background: #d22a35; }\n\n.red .form-control:focus {\n  border-color: #d22a35; }\n\n.red .cc-message-box__btn {\n  background: #d22a35;\n  color: #fff; }\n\n.red .submit-icon {\n  background-image: url(\"data:image/svg+xml,%3Csvg width='47px' height='47px' viewBox='0 0 47 47' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id='path-1' cx='19.3130459' cy='19.3130459' r='19.3130459'%3E%3C/circle%3E%3Cfilter x='-18.1%25' y='-12.9%25' width='136.2%25' height='136.2%25' filterUnits='objectBoundingBox' id='filter-2'%3E%3CfeOffset dx='0' dy='2' in='SourceAlpha' result='shadowOffsetOuter1'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation='2' in='shadowOffsetOuter1' result='shadowBlurOuter1'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0' type='matrix' in='shadowBlurOuter1'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id='Page-1' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd'%3E%3Cg id='1-copy-20' transform='translate%28-1246.000000, -664.000000%29'%3E%3Cg id='Group-16' transform='translate%281250.000000, 666.000000%29'%3E%3Cg id='Oval-4'%3E%3Cuse fill='white' fill-opacity='1' filter='url%28%23filter-2%29' xlink:href='%23path-1'%3E%3C/use%3E%3Cuse fill='rgba(210, 42, 53, 1)' fill-rule='evenodd' xlink:href='%23path-1'%3E%3C/use%3E%3C/g%3E%3Cg id='Group-5' transform='translate%2812.000000, 11.000000%29' fill-rule='nonzero' fill='%23FFFFFF'%3E%3Cg id='fast-forward-arrows' transform='translate%286.173934, 0.000000%29'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3Cg id='fast-forward-arrows-copy'%3E%3Cpolygon id='Shape' points='0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E\"); }\n\n.cc-question-container, .hide-slide {\n  -webkit-transform: translateX(5px);\n  -moz-transform: translateX(5px);\n  -ms-transform: translateX(5px);\n  -o-transform: translateX(5px);\n  transform: translateX(5px);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-bottom-up {\n  -webkit-transform: translateY(30px);\n  -moz-transform: translateY(30px);\n  -ms-transform: translateY(30px);\n  -o-transform: translateY(30px);\n  transform: translateY(30px);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-up-bottom {\n  -webkit-transform: translateY(100%);\n  -moz-transform: translateY(100%);\n  -ms-transform: translateY(100%);\n  -o-transform: translateY(100%);\n  transform: translateY(100%);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-right-left {\n  -webkit-transform: translateX(100%);\n  -moz-transform: translateX(100%);\n  -ms-transform: translateX(100%);\n  -o-transform: translateX(100%);\n  transform: translateX(100%);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.hide-left-right {\n  -webkit-transform: translateX(-100%);\n  -moz-transform: translateX(-100%);\n  -ms-transform: translateX(-100%);\n  -o-transform: translateX(-100%);\n  transform: translateX(-100%);\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: hidden;\n  opacity: 0; }\n\n.show-slide, .show-thankyou-slide {\n  -webkit-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -moz-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -ms-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  -o-transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  transition: transform .3s ease,opacity .3s ease,visibility .3s ease;\n  visibility: visible;\n  opacity: 1;\n  -webkit-transform: translateX(0) translateY(0);\n  -moz-transform: translateX(0) translateY(0);\n  -ms-transform: translateX(0) translateY(0);\n  -o-transform: translateX(0) translateY(0);\n  transform: translateX(0) translateY(0); }\n", ""]);

// exports


/***/ }),
/* 12 */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function() {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		var result = [];
		for(var i = 0; i < this.length; i++) {
			var item = this[i];
			if(item[2]) {
				result.push("@media " + item[2] + "{" + item[1] + "}");
			} else {
				result.push(item[1]);
			}
		}
		return result.join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getElement = (function (fn) {
	var memo = {};

	return function(selector) {
		if (typeof memo[selector] === "undefined") {
			memo[selector] = fn.call(this, selector);
		}

		return memo[selector]
	};
})(function (target) {
	return document.querySelector(target)
});

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(14);

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton) options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
	if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else {
		throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	options.attrs.type = "text/css";

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	options.attrs.type = "text/css";
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),
/* 14 */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),
/* 15 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-survey\" id=\"{{surveyToken}}-survey\">\n\t<div class=\"cc-popup-container-2 {{animation}} {{location}}\" >\n\t\t<div class=\"overlay glass\"></div>\n\t\t<div class=\"cc-popup-container-2__icons cc-left-icon\">\n\t\t\t<span class=\"is-cc-popup-container-back cc-popup-container__back act-cc-button-prev\"></span>\n\t\t\t<ul class=\"loader\">\n\t\t\t  <li class=\"chart\" data-percent=\"75\"></li>\n\t\t\t</ul>\n\t\t</div>\n\t\t<div class=\"cc-popup-container-2__icons cc-right-icon\">\n\t\t\t<img src=\"https://cx.getcloudcherry.com/microsurvey-assets/Collapse_Icon.svg\" class=\"is-cc-popup-container-minimize cc-popup-container__minimize act-cc-button-minimize mobile-hide\">\n\t\t\t<img src=\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\" class=\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close mobile-hide\">\n\t\t\t<img src=\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon2.svg\" class=\"is-cc-popup-container-close cc-popup-container__close cc-popup-container__close2 act-cc-button-close desktop-hide\">\n\t\t</div>\n\t\t<div class=\"cc-survey-container\">\n\t\t\t<div class=\"cc-survey-content\">\n\t\t\t\t<div class=\"cc-questions-container\">\n\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"submit-icon act-cc-button-next\"></div>\n\t\t\t<div class=\"{{location}} progress-bar\" id=\"progressBar\">\n\t\t\t\t<span class=\"progress-line\" id=\"progress-line\"></span>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n";

/***/ }),
/* 16 */
/***/ (function(module, exports) {

module.exports = "<div class=\"act-cc-welcome-question-box cc-popup-container {{location}} {{animation}}\" id=\"{{surveyToken}}-welcome\">\n  <div class=\"overlay glass\"></div>\n  <img src=\"https://cx.getcloudcherry.com/microsurvey-assets/Close_Icon.svg\" class=\"is-cc-popup-container-close cc-popup-container__close act-cc-button-close\">\n  <div class=\"cc-message-box\">\n    <h2 class=\"cc-message-box__text\">{{question}}</h2>\n    <a href=\"#\" class=\"cc-message-box__btn act-cc-survey-start mobile-hide\" id=\"\">{{button}}</a>\n    <div class=\"submit-icon act-cc-survey-start desktop-hide\"></div>\n  </div>\n</div>\n";

/***/ }),
/* 17 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container single-line\" data-required=\"{{isRequired}}\" data-type=\"singleline\" data-id=\"{{questionId}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\">\n    <input type=\"text\" name=\"\" id=\"{{questionId}}\" placeholder=\"Enter..\" class=\"form-control\">\n  </div>\n</div>\n";

/***/ }),
/* 18 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container single-line\" data-required=\"{{isRequired}}\" data-type=\"number\" data-id=\"{{questionId}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\">\n    <input type=\"text\" name=\"\" id=\"{{questionId}}\" placeholder=\"Enter your full name\" class=\"form-control\">\n  </div>\n</div>\n";

/***/ }),
/* 19 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-type=\"multiline\" data-id=\"{{questionId}}\" data-required=\"{{isRequired}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\">\n    <textarea class=\"multiline-box form-control\" id=\"{{questionId}}\" placeholder=\"Share your thoughts...\" ></textarea>\n  </div>\n</div>\n";

/***/ }),
/* 20 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-type=\"checkbox\" data-id=\"{{questionId}}\" data-required=\"{{isRequired}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n\n  </div>\n  <div class=\"cc-question-container__content cc-big-list-container\" id=\"{{questionId}}\">\n    <ul class=\"cc-question-container__list\" >\n      {{options}}\n     \n      <!-- <li>\n        <div class=\"cc-checkbox\">\n          <input type=\"checkbox\" value=\"Troubleshoot\" name=\"\" id=\"check-two\">\n          <label class=\"ui checkbox\" for=\"check-two\" >\n          </label>\n        </div>\n            <span><label for=\"check-two\">Troubleshoot an error</label></span>\n      </li>\n      <li>\n        <div class=\"cc-checkbox\">\n          <input type=\"checkbox\" value=\"Understand\" name=\"\" id=\"check-three\">\n          <label class=\"ui checkbox\" for=\"check-three\">\n          </label>\n        </div>\n            <span><label  for=\"check-three\">Understand a product</label></span>\n      </li>\n      <li>\n        <div class=\"cc-checkbox\">\n          <input type=\"checkbox\" value=\"Buy a\" name=\"\" id=\"check-four\">\n          <label class=\"ui checkbox\" for=\"check-four\"></label>\n        </div>\n            <span><label for=\"check-four\">Buy a product</label></span>\n      </li>\n      <li>\n        <div class=\"cc-checkbox\">\n          <input type=\"checkbox\" value=\"Contact\" name=\"\" id=\"check-five\">\n          <label class=\"ui checkbox\" for=\"check-five\"></label>\n        </div>\n        <span><label for=\"check-five\">Contact customer care</label></span>\n      </li> -->\n    </ul>\n  </div>\n</div>\n";

/***/ }),
/* 21 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container radio-toggle\" data-type=\"radio\" data-id=\"{{questionId}}\" data-required=\"{{isRequired}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\" id=\"{{questionId}}\">\n    <ul class=\"cc-question-container__list\">\n      <li>\n        <div class=\"cc-checkbox cc-radio\">\n          <input type=\"radio\" name=\"serv\" id=\"service-yes\">\n          <label class=\"ui checkbox\" for=\"service-yes\"></label>\n        </div>\n        <span><label for=\"service-yes\">Yes</label></span>\n      </li>\n      <li>\n        <div class=\"cc-checkbox cc-radio\">\n          <input type=\"radio\" name=\"serv\" id=\"service-no\">\n          <label class=\"ui checkbox\" for=\"service-no\"></label>\n        </div>\n        <span><label for=\"service-no\">No</label></span>\n      </li>\n    </ul>\n  </div>\n</div>\n";

/***/ }),
/* 22 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container radio-toggle radio-toggle--more-option\" data-required=\"{{isRequired}}\" data-type=\"radioMore\" data-id=\"{{questionId}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\" id=\"{{questionId}}\">\n    <ul class=\"cc-question-container__list\">\n      <li>\n        <div class=\"cc-checkbox cc-radio\">\n          <input type=\"radio\" name=\"serv\" id=\"service-one\">\n          <label class=\"ui checkbox\" for=\"service-one\"></label>\n        </div>\n        <span><label for=\"service-one\">Learn more about a product</label></span>\n      </li>\n      <li>\n        <div class=\"cc-checkbox cc-radio\">\n          <input type=\"radio\" name=\"serv\" id=\"service-two\">\n          <label class=\"ui checkbox\" for=\"service-two\"></label>\n        </div>\n        <span><label for=\"service-two\">Troubleshoot an error</label></span>\n      </li>\n      <li>\n        <div class=\"cc-checkbox cc-radio\">\n          <input type=\"radio\" name=\"serv\" id=\"service-three\">\n          <label class=\"ui checkbox\" for=\"service-three\"></label>\n        </div>\n        <span><label for=\"service-three\">Understand a product</label></span>\n      </li>\n    </ul>\n  </div>\n</div>\n";

/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container radio-toggle radio-toggle--image-toggle\" data-required=\"{{isRequired}}\" data-type=\"radioImage\" data-id=\"{{questionId}}\" >\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\" id=\"{{questionId}}\">\n    <ul class=\"cc-question-container__list\">\n    {{options}}\n\n    </ul>\n  </div>\n</div>\n";

/***/ }),
/* 24 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-type=\"scale\" data-id=\"{{questionId}}\" data-required=\"{{isRequired}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n  </div>\n  <div class=\"cc-question-container__content rating-color act-cc-question-nps\" id=\"{{questionId}}\">\n    <div class=\"cc-question-container__list\">\n      {{optionsRange}}\n      <span class=\"clearfix\"></span>\n      <span class=\"option-left-rating-text\">Not at all likely</span>\n      <span class=\"option-right-rating-text\">Very likely</span>\n      <input type=\"hidden\" value=\"\" class=\"option-number-input\">\n    </div>\n  </div>\n</div>\n";

/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-type=\"nps\" data-id=\"{{questionId}}\" data-required=\"{{isRequired}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n  </div>\n  <div class=\"cc-question-container__content rating-color act-cc-question-scale\" id=\"{{questionId}}\">\n    <div class=\"cc-question-container__list\">\n      <div class=\"cc-options-container\">\n          <span data-rating=\"0\" class=\"option-number-item mobile-hide option-zero\">0</span>\n          <span data-rating=\"1\" class=\"option-number-item mobile-hide option-one\">1</span>\n          <span data-rating=\"2\" class=\"option-number-item mobile-hide option-two\">2</span>\n          <span data-rating=\"3\" class=\"option-number-item mobile-hide option-three\">3</span>\n          <span data-rating=\"4\" class=\"option-number-item mobile-hide option-four\">4</span>\n          <span data-rating=\"5\" class=\"option-number-item mobile-hide option-five\">5</span>\n          <span data-rating=\"6\" class=\"option-number-item mobile-hide option-six\">6</span>\n          <span data-rating=\"7\" class=\"option-number-item mobile-hide option-seven\">7</span>\n          <span data-rating=\"8\" class=\"option-number-item mobile-hide option-eight\">8</span>\n          <span data-rating=\"9\" class=\"option-number-item mobile-hide option-nine\">9</span>\n          <span data-rating=\"10\" class=\"option-number-item mobile-hide option-ten\">10</span>\n          <div class=\"circle-image desktop-hide\">\n            <img src=\"https://cx.getcloudcherry.com/microsurvey-assets/circle.png\" class=\"cc-nps-image\" alt=\"\" usemap=\"#Map\" />\n            <map name=\"Map\" id=\"Map\">\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"0\" coords=\"49,192,91,229,111,191,83,169\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"1\" coords=\"29,139,47,189,83,166,70,135\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"2\" coords=\"35,83,29,136,71,131,75,96\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"3\" coords=\"36,79,67,35,95,66,75,94\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"4\" coords=\"69,32,117,7,127,49,97,64\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"5\" coords=\"120,7,175,7,165,48,131,48\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"6\" coords=\"178,7,168,49,197,64,225,32\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"7\" coords=\"200,67,220,95,260,80,229,35\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"8\" coords=\"221,98,224,131,266,136,259,83\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"9\" coords=\"224,135,266,139,248,191,212,167\" />\n                <area alt=\"\" title=\"\" href=\"#\" shape=\"poly\" class=\"option-number-item\" data-rating=\"10\" coords=\"184,191,203,230,246,194,211,169\" />\n            </map>\n            <span class=\"cc-nps-selected-rating act-cc-nps-selected-rating  desktop-hide\">0</span>\n        </div>    \n        <span class=\"clearfix\"></span>\n        <span class=\"option-left-rating-text mobile-hide\">Not at all likely</span>\n        <span class=\"option-right-rating-text mobile-hide\">Very likely</span>\n        <input type=\"hidden\" value=\"\" class=\"option-number-input\">\n      </div>\n    \n    </div>\n  </div>\n</div>";

/***/ }),
/* 26 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container drop-cc-question-container\" data-required=\"{{isRequired}}\" data-type=\"select\" data-id=\"{{questionId}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content\" id=\"{{questionId}}\">\n    <!-- <span class=\"hl dropdown\">Select</span> -->\n    <div class=\"cc-select-wrapper\">\n      <select name=\"sources\" id=\"sources\" class=\"cc-select sources\" placeholder=\"Select\">\n          {{options}}\n        </select>\n      </div>\n  </div>\n</div>\n";

/***/ }),
/* 27 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-type=\"smile\" data-required=\"{{isRequired}}\" data-id=\"{{questionId}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content rating-color\" id=\"{{questionId}}\">\n    <div class=\"cc-question-container__list\">\n      <span class=\"option-smile-box one\" data-rating=\"1\"></span>\n      <span class=\"option-smile-box two\" data-rating=\"2\"></span>\n      <span class=\"option-smile-box three\" data-rating=\"3\"></span>\n      <span class=\"option-smile-box four\" data-rating=\"4\"></span>\n      <span class=\"option-smile-box five\" data-rating=\"5\"></span>\n    </div>\n  </div>\n</div>\n";

/***/ }),
/* 28 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-type=\"star\" data-required=\"{{isRequired}}\" data-id=\"{{questionId}}\">\n  <div class=\"cc-question-container__text\">\n    <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n    <span class=\"cc-question-container__required\">* Mandatory Question</span>\n    \n  </div>\n  <div class=\"cc-question-container__content rating-color\" id=\"{{questionId}}\">\n    <div class=\"cc-question-container__list\">\n      <span class=\"option-star-box\" data-rating=\"1\"></span>\n      <span class=\"option-star-box\" data-rating=\"2\"></span>\n      <span class=\"option-star-box\" data-rating=\"3\"></span>\n      <span class=\"option-star-box\" data-rating=\"4\"></span>\n      <span class=\"option-star-box\" data-rating=\"5\"></span>\n    </div>\n  </div>\n</div>\n";

/***/ }),
/* 29 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container\" data-required=\"{{isRequired}}\" data-type=\"slider\" data-id=\"{{questionId}}\">\n    <div class=\"cc-question-container__text\">\n        <p><span class=\"cc-question-container__required-label\">{{requiredLabel}}</span>{{question}}</p>\n        <span class=\"cc-question-container__required\">* Mandatory Question</span>\n        \n    </div>\n    <div class=\"cc-question-container__content rating-color range-slider\" id=\"{{questionId}}\">\n        <div class=\"cc-question-container__slider\">\n            <input type=\"range\" name=\"\" value=\"\" min=\"{{min}}\" max=\"{{max}}\" class=\"range blue\">\n            <span class=\"option-left-rating-text\">{{minLabel}}{{min}}</span>\n            <span class=\"option-right-rating-text\">{{maxLabel}}{{max}}</span>\n            <span class=\"slider-tip act-slider-tip\">{{min}}</span>\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 30 */
/***/ (function(module, exports) {

module.exports = "<li>\n  <div class=\"cc-checkbox cc-radio\">\n    <input type=\"radio\" name=\"{{qId}}\" id=\"{{qId}}-img-service-{{label}}\" value={{value}}>\n    <label class=\"ui checkbox\" for=\"{{qId}}-img-service-{{label}}\"></label>\n  </div>\n  <span><label for=\"{{qId}}-img-service-{{label}}\" class=\"option-yes-no {{label}}\"><img src=\"{{image}}\" /></label></span>\n</li>\n";

/***/ }),
/* 31 */
/***/ (function(module, exports) {

module.exports = "<li>\n    <div class=\"cc-checkbox\">\n      <input type=\"checkbox\" value=\"{{label}}\" name=\"\" id=\"check-{{label}}\">\n      <label class=\"ui checkbox\" for=\"check-{{label}}\">\n      </label>\n    </div>\n    <span><label for=\"check-{{label}}\">{{label}}</label></span>\n  </li>";

/***/ }),
/* 32 */
/***/ (function(module, exports) {

module.exports = "<div class=\"cc-question-container detail-box mobile-detail-box cc-thankyou-container\" id=\"cc-thankyou-container\">\n  <div class=\"cc-question-container__text\">\n    <p>{{question}}</p>\n  </div>\n  <div class=\"cc-question-container__content\">\n    <!-- <button>{{button}}</button> -->\n  </div>\n</div>\n";

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ConditionalTextFilter = /** @class */ (function () {
    function ConditionalTextFilter() {
    }
    ConditionalTextFilter.filterText = function (surveyHandler, question) {
        var conditionaText = question.text;
        if (question.leadingDisplayTexts == null) {
            conditionaText = question.text;
            return conditionaText;
        }
        else if (question.leadingDisplayTexts.length == 0) {
            conditionaText = question.text;
            return conditionaText;
        }
        else {
            for (var _i = 0, _a = question.leadingDisplayTexts; _i < _a.length; _i++) {
                var fOption = _a[_i];
                if (fOption != null && fOption.filter != null && fOption.filter.filterquestions != null) {
                    var iSatisfied = false;
                    var iFailed = false;
                    for (var _b = 0, _c = fOption.filter.filterquestions; _b < _c.length; _b++) {
                        var filterByQuestion = _c[_b];
                        if (ConditionalTextFilter.isAnd(conditionaText)) {
                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, conditionaText) && !iFailed) {
                                iSatisfied = true;
                            }
                            else {
                                iFailed = true;
                                break;
                            }
                        }
                        else if (ConditionalTextFilter.isOr(conditionaText)) {
                            if (ConditionalTextFilter.doesSatisfy(surveyHandler, conditionaText)) {
                                iSatisfied = true;
                                break;
                            }
                        }
                    }
                    if (iSatisfied && !iFailed) {
                        conditionaText = fOption.text;
                    }
                }
            }
        }
        return conditionaText;
    };
    ConditionalTextFilter.isAnd = function (filterQuestion) {
        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == "AND") {
            return true;
        }
        return false;
    };
    ConditionalTextFilter.isOr = function (filterQuestion) {
        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == "OR") {
            return true;
        }
        return false;
    };
    ConditionalTextFilter.isNumberCheck = function (filterQuestion) {
        if (filterQuestion.answerCheck[0].includes("lt") || filterQuestion.answerCheck[0].includes("gt") || filterQuestion.answerCheck[0].includes("eq")) {
            return true;
        }
        return false;
    };
    ConditionalTextFilter.doesSatisfy = function (surveyHandler, filterQuestion) {
        if (ConditionalTextFilter.isNumberCheck(filterQuestion)) {
            if (filterQuestion.answerCheck[0].toLowerCase() == "lt") {
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {
                        return true;
                    }
            }
            else if (filterQuestion.answerCheck[0].toLowerCase() == "gt") {
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {
                        return true;
                    }
            }
            else if (filterQuestion.answerCheck[0].toLowerCase() == "eq") {
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {
                        return true;
                    }
            }
        }
        else {
            var iFoundAll = false;
            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {
                var aAnswer = _a[_i];
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.contains(aAnswer)) {
                        iFoundAll = true;
                    }
                    else {
                        iFoundAll = false;
                        break;
                    }
            }
            if (iFoundAll)
                return true;
        }
        return false;
    };
    return ConditionalTextFilter;
}());
exports.ConditionalTextFilter = ConditionalTextFilter;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomUtilities_1 = __webpack_require__(0);
// import { ScrollBar } from './ScrollBar';
var Select_1 = __webpack_require__(35);
var Theme_1 = __webpack_require__(36);
var ConditionalFlowFilter_1 = __webpack_require__(37);
var Slider_1 = __webpack_require__(38);
var DomSurvey = /** @class */ (function () {
    function DomSurvey(ccsdk) {
        this.trackSelects = [];
        this.trackRadios = [];
        this.currentQuestionListeners = [];
        var self = this;
        this.domListeners = [];
        this.ccsdk = ccsdk;
        this.qIndex = 0;
        this.qResponse = {};
        this.domSelectElements();
        this.util = new DomUtilities_1.DomUtilities();
        // self.scrollbar = new ScrollBar("data-cc-scrollbar");
        this.util.ready(function () {
            // self.util.addClassAll(self.$popupContainer,'show-slide');
        });
    }
    DomSurvey.prototype.setTheme = function (brandColor) {
        var self = this;
        this.util.ready(function () {
            self.theme = new Theme_1.Theme(brandColor);
        });
    };
    DomSurvey.prototype.setQIndex = function (index) {
        this.qIndex = index;
    };
    DomSurvey.prototype.getQindex = function () {
        return this.qIndex;
    };
    DomSurvey.prototype.domSelectElements = function () {
        this.$questionContainer = document.
            querySelectorAll(".cc-questions-container");
        this.$popupContainer = document.querySelectorAll(".cc-popup-container");
        this.$popupContainer2 = document.querySelectorAll(".cc-popup-container-2");
        this.$body = document.querySelectorAll("body")[0];
        // this.select = new Select();
    };
    DomSurvey.prototype.removePrevListener = function (id) {
        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {
            var listener = _a[_i];
            if (listener.id == id) {
                console.log("removing listener", id);
                this.util.removeListener(this.$body, listener.type, listener.internalHandler);
            }
        }
        return true;
    };
    DomSurvey.prototype.setupListeners = function () {
        var self = this;
        var startSurvey = this.util.initListener("click", ".act-cc-survey-start", function () {
            self.startSurvey();
        });
        startSurvey.internalHandler = this.util.listener(this.$body, startSurvey.type, startSurvey.id, startSurvey.cb);
        var nextQue = this.util.initListener("click", ".act-cc-button-next", function () {
            // alert("working");
            self.nextQuestion();
        });
        nextQue.internalHandler = this.util.listener(this.$body, nextQue.type, nextQue.id, nextQue.cb);
        var prevQue = this.util.initListener("click", ".act-cc-button-prev", function () {
            self.prevQuestion();
        });
        prevQue.internalHandler = this.util.listener(this.$body, prevQue.type, prevQue.id, prevQue.cb);
        var closeSurvey = this.util.initListener("click", ".act-cc-button-close", function () {
            self.ccsdk.survey.anwsers = {};
            self.trackSelects = [];
            self.destroyListeners();
            self.util.trigger(document, 'ccclose', undefined);
            var bodyElement = document.
                getElementsByTagName("body")[0];
            self.util.removeClass(bodyElement, "blurr");
        });
        closeSurvey.internalHandler = this.util.listener(this.$body, closeSurvey.type, closeSurvey.id, closeSurvey.cb);
        var minSurvey = this.util.initListener("click", ".act-cc-button-minimize", function () {
            self.minimizeSurvey();
        });
        minSurvey.internalHandler = this.util.listener(self.$body, minSurvey.type, minSurvey.id, minSurvey.cb);
    };
    DomSurvey.prototype.minimizeSurvey = function () {
        var _this = this;
        // this.$popupContainer[0].removeClass('');
        this.util.removeClass(this.$popupContainer2[0], 'hide-right-left');
        this.util.addClass(this.$popupContainer2[0], 'hide-up-bottom');
        setTimeout(function () {
            _this.util.removeClass(_this.$popupContainer2[0], 'show-slide');
        }, 200);
        this.util.removeClass(this.$popupContainer[0], 'hide-right-left');
        this.util.addClass(this.$popupContainer[0], 'hide-bottom-up');
        setTimeout(function () {
            _this.util.addClass(_this.$popupContainer[0], 'show-slide');
        }, 200);
    };
    DomSurvey.prototype.destroyListeners = function () {
        // console.log("Removing all listeners");
        for (var _i = 0, _a = this.domListeners; _i < _a.length; _i++) {
            var listener = _a[_i];
            this.util.removeListener(this.$body, listener.type, listener.internalHandler);
        }
    };
    DomSurvey.prototype.startSurvey = function () {
        this.domSelectElements();
        // console.log("click in setup listener survey start");
        this.util.addClassAll(this.$popupContainer2, 'show-slide');
        this.util.removeClass(this.$popupContainer[0], 'show-slide');
        this.loadFirstQuestion();
    };
    DomSurvey.prototype.updateProgress = function () {
        var el = document.querySelectorAll("#progress-line")[0];
        el.style.width = (this.qIndex / this.ccsdk.survey.questionsToDisplay.length) * 100 + '%';
    };
    DomSurvey.prototype.loadFirstQuestion = function () {
        // applyRuleToAllEl(this.$questionContainer, );
        // this.util.removeClassAll(this.$questionContainer, 'show-slide');
        // this.util.addClass(this.$questionContainer, 'show-slide');
        this.loadQuestionSpecifics(this.$questionContainer, 0);
        this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');
        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');
        var leftIcon = this.util.get('.act-cc-button-prev');
        this.util.addClassAll(leftIcon, 'hide-slide');
    };
    DomSurvey.prototype.nextQuestion = function () {
        //submit the current response
        // console.log('submit ',this.qResponse.type, this.qResponse);
        var isRequired = false;
        var q = this.$questionContainer[0].firstChild;
        // console.log(this.$questionContainer);
        isRequired = q.getAttribute('data-required').toLowerCase() == 'true' ? true : false;
        var span = this.$questionContainer[0].firstChild.querySelectorAll(".cc-question-container__required")[0];
        if (isRequired && Object.keys(this.qResponse).length === 0) {
            if (span) {
                this.util.addClass(span, "show");
                this.util.removeClass(span, "hide");
            }
            return;
        }
        else {
            if (span) {
                this.util.removeClass(span, "show");
                this.util.addClass(span, "hide");
            }
            // console.log('qindex ' + this.qIndex);
            if (typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' && this.qResponse !== 'undefined'
                && this.qResponse.type == this.ccsdk.survey.answers[this.currentQuestionId].type
                && this.qResponse.text == this.ccsdk.survey.answers[this.currentQuestionId].text
                && this.qResponse.number == this.ccsdk.survey.answers[this.currentQuestionId].number) {
                //don't submit if already submitted.
            }
            else {
                // console.log('submitting ' + this.currentQuestionId);
                var qId = this.qResponse.questionId ? this.qResponse.questionId : this.currentQuestionId;
                this.submitQuestion(this.qIndex, this.qResponse, this.qResponse.type, qId);
            }
            //save response
            this.ccsdk.survey.answers[this.currentQuestionId] = JSON.parse(JSON.stringify(this.qResponse));
        }
        ConditionalFlowFilter_1.ConditionalFlowFilter.filterQuestion(this.ccsdk.survey, this.ccsdk.survey.questionsToDisplay[this.qIndex]);
        //go to next question
        this.qIndex++;
        //reset the post parameters
        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};
        // this.qResponse = {};
        var nextButtonState = 'initial';
        // console.log(this.$questionContainer);
        var nextQ = this.$questionContainer;
        // console.log(this.qIndex);
        if (this.qIndex == this.ccsdk.survey.questionsToDisplay.length) {
            //Last run to show thank you message
            var leftIcon = this.util.get('.act-cc-button-prev');
            var rightIcon = this.util.get('.cc-icon-right');
            var nextIcon = this.util.get('.act-cc-button-next');
            this.util.addClassAll(leftIcon, 'hide');
            this.util.addClassAll(rightIcon, 'hide');
            this.util.addClassAll(nextIcon, 'hide');
            this.util.trigger(document, 'ccdone', undefined);
            this.util.removeClass(this.$questionContainer[0].firstChild, 'show-slide');
            this.updateProgress();
        }
        else {
            if ((this.qIndex > this.ccsdk.survey.questionsToDisplay.length)) {
                //reset the counter to show first question
                this.qIndex = 0;
            }
            //repopulate qResponse based on answers.
            this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};
            // this.util.removeClassAll(this.$questionContainer[0].firstChild, 'show-slide');
            // this.util.addClass(nextQ, 'show-slide');
            this.updateProgress();
            this.loadQuestionSpecifics(nextQ, this.qIndex);
            this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');
            // if(nextButtonState === 'dirty'){
            // this.submitQuestion(this.qIndex, 'test', 'multiline');
            // }
        }
        if (this.qIndex == 0) {
            var leftIcon = this.util.get('.act-cc-button-prev');
            this.util.addClassAll(leftIcon, 'hide-slide');
        }
        else {
            var leftIcon = this.util.get('.act-cc-button-prev');
            this.util.addClass(leftIcon[0], 'show-slide');
            this.util.removeClass(leftIcon[0], 'hide-slide');
        }
    };
    DomSurvey.prototype.prevQuestion = function () {
        this.qIndex--;
        if (!this.ccsdk.survey.questionsToDisplay.length) {
            this.qIndex = 0;
            return;
            // this.qIndex = this.$questionContainer.length - 1;
        }
        //re populate qResponse based on answers.
        // this.util.removeClassAll(this.$questionContainer,'show-slide');
        this.loadQuestionSpecifics(null, this.qIndex);
        this.qResponse = typeof this.ccsdk.survey.answers[this.currentQuestionId] !== 'undefined' ? JSON.parse(JSON.stringify(this.ccsdk.survey.answers[this.currentQuestionId])) : {};
        this.util.addClass(this.$questionContainer[0].firstChild, 'show-slide');
        this.updateProgress();
        if (this.qIndex == 0) {
            var leftIcon = this.util.get('.act-cc-button-prev');
            this.util.addClassAll(leftIcon, 'hide-slide');
            this.util.removeClassAll(leftIcon, 'show-slide');
        }
    };
    DomSurvey.prototype.appendInBody = function (html) {
        document.querySelectorAll("body")[0].insertAdjacentHTML('afterbegin', html);
        //force update domSelect
        this.domSelectElements();
    };
    DomSurvey.prototype.replaceInQuestionsContainer = function (html) {
        this.$questionContainer[0].innerHTML = html;
        this.domSelectElements();
    };
    DomSurvey.prototype.appendInQuestionsContainer = function (html) {
        document.querySelectorAll(".cc-questions-container")[0].insertAdjacentHTML('afterbegin', html);
        //force update domSelect
        this.domSelectElements();
    };
    DomSurvey.prototype.showWelcomeContainer = function () {
        var _this = this;
        setTimeout(function () {
            var startContainer = document.
                querySelectorAll(".act-cc-welcome-question-box")[0];
            var bodyElement = document.
                getElementsByTagName("body")[0];
            _this.util.addClass(startContainer, "show-slide");
            _this.util.addClass(bodyElement, "blurr");
        }, 200);
    };
    DomSurvey.prototype.getSurveyContainer = function (token) {
        return document.querySelectorAll("#" + token + "-survey")[0];
    };
    DomSurvey.prototype.getWelcomeContainer = function (token) {
        return document.querySelectorAll("#" + token + "-welcome")[0];
    };
    DomSurvey.prototype.loadQuestionSpecifics = function (q, index) {
        var self = this;
        this.$questionContainer[0].innerHTML = "";
        var compiledTemplate = this.ccsdk.survey.compileTemplate(this.ccsdk.survey.questionsToDisplay[index]);
        this.$questionContainer[0].innerHTML += compiledTemplate;
        var qType = this.$questionContainer[0].firstChild.getAttribute('data-type');
        var qId = this.$questionContainer[0].firstChild.getAttribute('data-id');
        // console.log("QTYIPE AND QID " , qType, qId);
        this.currentQuestionId = qId.substring(2, qId.length);
        switch (qType) {
            case 'scale':
                var allOptions1 = document.querySelectorAll('#' + qId + ' .option-number-item');
                var optionWidth1 = (100 / allOptions1.length) - .6;
                // console.log("Option width", allOptions1, optionWidth1.toFixed(2));
                self.util.css(allOptions1, 'width', optionWidth1.toFixed(1) + '%');
                this.setupListenersQuestionScale(index, qId);
                break;
            case 'nps':
                this.setupListenersQuestionNPS(index, qId);
                break;
            case 'multiline':
                this.setupListenersQuestionMultiline(index, qId);
                break;
            case 'select':
                if (typeof this.select !== 'undefined') {
                    this.select.destroyListeners();
                }
                this.setupListenersQuestionSelect(index, qId);
                break;
            case 'radio':
                this.setupListenersQuestionRadio(index, qId);
                break;
            case 'radioImage':
                this.setupListenersQuestionRadioImage(index, qId);
                break;
            case 'checkbox':
                this.setupListenersQuestionCheckbox(index, qId);
                break;
            case 'star':
                this.setupListenersQuestionStar(index, qId);
                break;
            case 'smile':
                this.setupListenersQuestionSmile(index, qId);
                break;
            case 'slider':
                this.setupListenersQuestionSlider(index, qId);
                break;
            case 'singleline':
                this.setupListenersQuestionSingleline(index, qId);
            default:
                break;
        }
    };
    // question specific listeners
    DomSurvey.prototype.setupListenersQuestionScale = function (index, qId) {
        var self = this;
        //add id too.
        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {
            return;
        }
        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {
            var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');
            var rating = this.getAttribute('data-rating');
            self.util.removeClassAll(allOptions, "selected");
            self.util.addClass(this, "selected");
            // this.parentNode.querySelectorAll(".option-number-input")[0].value = rating ;
            // console.log('Scale selected',rating);
            self.qResponse.type = 'scale';
            self.qResponse.text = null;
            self.qResponse.number = rating;
            self.qResponse.questionId = qId;
            //move to next question automagically
            // alert('calling next questions inside scale');
            self.nextQuestion();
            // self.util.trigger(document,'q-answered', {
            //   index : index,
            //   rating : rating,
            //   type : 'scale'
            // });
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionNPS = function (index, qId) {
        var self = this;
        var selectedRating = document.querySelectorAll('#' + qId + ' .cc-nps-selected-rating')[0];
        var allOptions = document.querySelectorAll('#' + qId + ' .option-number-item');
        //add id too.
        if (this.util.checkIfListenerExists('#' + qId + ' .option-number-item', this.domListeners)) {
            //remove listeners
            console.log("nps question - previous listeners exists");
            this.removePrevListener('#' + qId + ' .option-number-item');
        }
        //set previous value
        var questionId;
        questionId = qId.substring(2, qId.length);
        console.log('nps question', this.ccsdk.survey.answers[questionId]);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            var previousValue = this.ccsdk.survey.answers[questionId].number;
            var previousSelection = document.querySelectorAll('#' + qId + ' .option-number-item[data-rating="' + previousValue + '"]')[0];
            console.log('nps previous selection', previousSelection);
            if (typeof previousSelection !== 'undefined') {
                this.util.addClass(previousSelection, "selected");
            }
        }
        // console.log(self.domListeners);
        var ref = this.util.initListener('click', '#' + qId + ' .option-number-item', function () {
            var rating = this.getAttribute('data-rating');
            self.util.removeClassAll(allOptions, "selected");
            self.util.addClass(this, "selected");
            // this.parentNode.querySelectorAll(".option-number-input")[0].value = rating ;
            // console.log('Scale selected',rating);
            self.qResponse.type = 'nps';
            self.qResponse.text = null;
            self.qResponse.number = rating;
            self.qResponse.questionId = qId;
            selectedRating.innerHTML = '' + rating;
            //move to next question automagically
            // alert('calling next questions inside scale');
            self.nextQuestion();
            // self.util.trigger(document,'q-answered', {
            //   index : index,
            //   rating : rating,
            //   type : 'scale'
            // });
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionCheckbox = function (index, qId) {
        var self = this;
        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox', this.domListeners)) {
            return;
        }
        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox', function () {
            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox input');
            // let rating : number = this.querySelectorAll('input')[0].value;
            var rating = [].filter.call(document.querySelectorAll('#' + qId + ' .cc-checkbox input'), function (c) {
                return c.checked;
            }).map(function (c) {
                return c.value;
            }).join(',');
            // console.log('Checkbox selected',rating);
            self.qResponse.type = 'checkbox';
            self.qResponse.text = rating;
            self.qResponse.number = null;
            self.qResponse.questionId = qId;
            //move to next question automagically
            // self.nextQuestion();
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionRadio = function (index, qId) {
        var self = this;
        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {
            return;
        }
        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {
            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');
            var rating = this.value;
            // self.util.removeClassAll(allOptions, "selected");
            // self.util.addClass(this, "selected");
            // this.parentNode.querySelectorAll(".option-number-input")[0].value = rating ;
            // console.log('Star selected',rating);
            self.qResponse.type = 'radio';
            self.qResponse.text = null;
            self.qResponse.number = rating;
            self.qResponse.questionId = qId;
            //move to next question automagically
            self.nextQuestion();
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionRadioImage = function (index, qId) {
        var self = this;
        if (this.util.checkIfListenerExists('#' + qId + ' .cc-checkbox input', this.domListeners)) {
            return;
        }
        var ref = this.util.initListener('click', '#' + qId + ' .cc-checkbox input', function () {
            // let allOptions : any = document.querySelectorAll('#'+qId+' .cc-checkbox');
            var rating = this.value;
            // self.util.removeClassAll(allOptions, "selected");
            // self.util.addClass(this, "selected");
            // this.parentNode.querySelectorAll(".option-number-input")[0].value = rating ;
            // console.log('Star selected',rating);
            self.qResponse.type = 'radioImage';
            self.qResponse.text = rating;
            self.qResponse.number = null;
            self.qResponse.questionId = qId;
            //move to next question automagically
            self.nextQuestion();
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionStar = function (index, qId) {
        var self = this;
        if (this.util.checkIfListenerExists('#' + qId + ' .option-star-box', this.domListeners)) {
            //remove listeners
            console.log("smile question - previous listeners exists");
            this.removePrevListener('#' + qId + ' .option-smile-box');
        }
        //set previous value
        var questionId;
        questionId = qId.substring(2, qId.length);
        console.log('star question', this.ccsdk.survey.answers[questionId]);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            var previousValue = this.ccsdk.survey.answers[questionId].number;
            var previousSelection = document.querySelectorAll('#' + qId + ' .option-star-box[data-rating="' + previousValue + '"]')[0];
            console.log('star previous selection', previousSelection);
            if (typeof previousSelection !== 'undefined' && previousSelection != null) {
                this.util.addClass(previousSelection, "selected");
            }
        }
        var ref = this.util.initListener('click', '#' + qId + ' .option-star-box', function () {
            var allOptions = document.querySelectorAll('#' + qId + ' .option-star-box');
            var rating = this.getAttribute('data-rating');
            self.util.removeClassAll(allOptions, "selected");
            self.util.addClass(this, "selected");
            var child = this.previousSibling;
            while ((child = child.previousSibling) != null) {
                // console.log('questionstar', 'previousSiblings', child);
                self.util.addClass(child, "selected");
            }
            // this.parentNode.querySelectorAll(".option-number-input")[0].value = rating ;
            // console.log('Star selected',rating);
            self.qResponse.type = 'star';
            self.qResponse.text = null;
            self.qResponse.number = rating;
            self.qResponse.questionId = qId;
            //move to next question automagically
            self.nextQuestion();
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionSmile = function (index, qId) {
        var self = this;
        if (this.util.checkIfListenerExists('#' + qId + ' .option-smile-box', this.domListeners)) {
            //remove listeners
            console.log("smile question - previous listeners exists");
            this.removePrevListener('#' + qId + ' .option-smile-box');
        }
        //set previous value
        var questionId;
        questionId = qId.substring(2, qId.length);
        console.log('smile question', this.ccsdk.survey.answers[questionId]);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            var previousValue = this.ccsdk.survey.answers[questionId].number;
            var previousSelection = document.querySelectorAll('#' + qId + ' .option-smile-box[data-rating="' + previousValue + '"]')[0];
            console.log('smile previous selection', previousSelection);
            if (typeof previousSelection !== 'undefined' && previousSelection != null) {
                this.util.addClass(previousSelection, "selected");
            }
        }
        var ref = this.util.initListener('click', '#' + qId + ' .option-smile-box', function () {
            var allOptions = document.querySelectorAll('#' + qId + ' .option-smile-box');
            var rating = this.getAttribute('data-rating');
            self.util.removeClassAll(allOptions, "selected");
            self.util.addClass(this, "selected");
            var child = this.previousSibling;
            while ((child = child.previousSibling) != null) {
                // console.log('questionscale', 'previousSiblings', child);
                self.util.addClass(child, "selected");
            }
            // this.parentNode.querySelectorAll(".option-number-input")[0].value = rating ;
            // console.log('Smile selected',rating);
            self.qResponse.type = 'smile';
            self.qResponse.text = null;
            self.qResponse.number = rating;
            self.qResponse.questionId = qId;
            //move to next question automagically
            self.nextQuestion();
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionMultiline = function (index, qId) {
        var self = this;
        var multilineRes = '';
        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {
            //remove listeners
            console.log("multiine question - previous listeners exists");
            this.removePrevListener('#' + qId);
        }
        //set previous value
        var questionId;
        questionId = qId.substring(2, qId.length);
        console.log('multiine question', this.ccsdk.survey.answers[questionId]);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            var previousValue = this.ccsdk.survey.answers[questionId].text;
            console.log('multiine input box', document.querySelectorAll('#' + qId)[0]);
            var previousSelection = document.querySelectorAll('#' + qId)[0];
            console.log('multiine previous selection', previousSelection);
            console.log('multiine previous value', previousValue);
            if (typeof previousSelection !== 'undefined' &&
                previousSelection != null &&
                typeof previousValue !== 'undefined') {
                previousSelection.value = previousValue;
            }
        }
        var ref = this.util.initListener('change', '#' + qId, function () {
            multilineRes = this.value;
            self.qResponse.type = 'multiline';
            self.qResponse.text = multilineRes;
            self.qResponse.number = null;
            self.qResponse.questionId = qId;
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionSingleline = function (index, qId) {
        var self = this;
        var singlelineRes = '';
        if (this.util.checkIfListenerExists('#' + qId, this.domListeners)) {
            //remove listeners
            console.log("singleline question - previous listeners exists");
            this.removePrevListener('#' + qId);
        }
        //set previous value
        var questionId;
        questionId = qId.substring(2, qId.length);
        console.log('singleline question', this.ccsdk.survey.answers[questionId]);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            var previousValue = this.ccsdk.survey.answers[questionId].text;
            console.log('singleline input box', document.querySelectorAll('#' + qId)[0]);
            var previousSelection = document.querySelectorAll('#' + qId)[0];
            console.log('singleline previous selection', previousSelection);
            console.log('singleline previous value', previousValue);
            if (typeof previousSelection !== 'undefined' &&
                previousSelection != null &&
                typeof previousValue !== 'undefined') {
                previousSelection.value = previousValue;
            }
        }
        var ref = this.util.initListener('change', '#' + qId, function () {
            singlelineRes = this.value;
            self.qResponse.type = 'singleline';
            self.qResponse.text = singlelineRes;
            self.qResponse.number = null;
            self.qResponse.questionId = qId;
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionSlider = function (index, qId) {
        var self = this;
        var sliderRes = '';
        var slider = new Slider_1.Slider();
        if (this.util.checkIfListenerExists('#' + qId + " input", this.domListeners)) {
            // return;
        }
        //set previous value
        var questionId;
        questionId = qId.substring(2, qId.length);
        console.log('slider question', this.ccsdk.survey.answers[questionId]);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            var previousValue = this.ccsdk.survey.answers[questionId].text;
            console.log('slider input box', document.querySelectorAll('#' + qId)[0]);
            var previousSelection = document.querySelectorAll('#' + qId + " .act-slider-tip")[0];
            console.log('slider previous selection', previousSelection);
            console.log('slider previous value', previousValue);
            if (typeof previousSelection !== 'undefined' &&
                previousSelection != null &&
                typeof previousValue !== 'undefined') {
                previousSelection.innerHTML = previousValue;
            }
        }
        var ref = this.util.initListener("change", '#' + qId + " input", function () {
            sliderRes = this.value;
            self.qResponse.type = 'slider';
            self.qResponse.number = sliderRes;
            self.qResponse.text = null;
            self.qResponse.questionId = qId;
            //move to next question automagically
            // self.nextQuestion();
        });
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    DomSurvey.prototype.setupListenersQuestionSelect = function (index, qId) {
        var self = this;
        var questionId;
        console.log('select que');
        questionId = qId.substring(2, qId.length);
        // console.log(this.ccsdk.survey.answers[questionId]);
        // console.log(this.ccsdk.survey.surveyAnswers[questionId]);
        if (this.util.checkIfListenerExists('#' + qId + " .cc-select-options .cc-select-option", this.domListeners)) {
            console.log('select que listner exists');
            this.removePrevListener('#' + qId + " .cc-select-options .cc-select-option");
            // return;
        }
        console.log('select que');
        // if(!self.util.arrayContains.call(self.trackSelects, qId)){
        console.log('select que initialize select');
        self.select = new Select_1.Select(qId);
        self.select.init(qId);
        if (typeof this.ccsdk.survey.answers[questionId] !== 'undefined' && this.ccsdk.survey.answers[questionId] !== '') {
            self.select.setValue(this.ccsdk.survey.answers[questionId].text);
        }
        self.trackSelects.push(qId);
        // }
        var selectRes = '';
        var ref = this.util.initListener('click', '#' + qId + " .cc-select-options .cc-select-option", function () {
            selectRes = this.getAttribute('data-value');
            // console.log(selectRes);
            self.qResponse.type = 'select';
            self.qResponse.text = selectRes;
            self.qResponse.number = null;
            self.qResponse.questionId = qId;
            //move to next question automagically
            // self.nextQuestion();
        });
        // this.util.removeListener(this.$body, ref.type, listener.internalHandler);    
        this.domListeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    // addListenersNextButtonSubmit(index : number, data : any, type : string){
    //   let self : DomSurvey = this;
    //   let btnNext = self.util.get('.act-cc-button-next')[0];
    //   self.util.on('click', btnNext, this.submitQuestion(
    //     index, data, type
    //   ));
    //
    // }
    // removeListenersNextButtonSubmit(index : number, data : any, type : string){
    //   let self : DomSurvey = this;
    //   let btnNext = self.util.get('.act-cc-button-next');
    //   self.util.on('click', btnNext, this.submitQuestion(
    //     index, data, type
    //   ));
    //   self.util.off('click', btnNext, this.submitQuestion(
    //     index, data, type
    //   ));
    // }
    DomSurvey.prototype.submitQuestion = function (index, data, type, qId) {
        // console.log('type', type ,'res',data);
        this.util.trigger(document, 'q-answered', {
            index: index,
            data: data,
            type: type,
            questionId: qId.substring(2, qId.length)
        });
    };
    return DomSurvey;
}());
exports.DomSurvey = DomSurvey;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomUtilities_1 = __webpack_require__(0);
var Select = /** @class */ (function () {
    function Select(qId) {
        this.listeners = [];
        this.qId = qId;
    }
    Select.prototype.init = function (qId) {
        this.util = new DomUtilities_1.DomUtilities();
        this.$body = document.querySelectorAll("body")[0];
        this.$html = document.querySelectorAll("html")[0];
        var select = document.querySelectorAll("#" + qId + " .cc-select");
        // var divSelect = document.querySelectorAll("div.cc-select");
        // this.util.removeAll(divSelect);
        var parent = this;
        Array.prototype.forEach.call(select, function (el, i) {
            var self = el;
            var $selectOptions = document.querySelectorAll("#" + qId + " .cc-select-options");
            var classes = self.getAttribute("class"), id = self.getAttribute("id"), name = self.getAttribute("name");
            var template = '<div class="' + classes + '">';
            template += '<span class="cc-select-trigger">' + self.getAttribute("placeholder") + '</span>';
            template += '<div class="cc-select-options-container" cc-scrollbar-container><div class="cc-select-options">';
            var options = self.querySelectorAll("option");
            Array.prototype.forEach.call(options, function (el, i) {
                template += '<span class="cc-select-option ' + el.getAttribute("class") + '" data-value="' + el.getAttribute("value") + '">' + el.innerHTML + '</span>';
            });
            template += '</div></div></div>';
            parent.util.addClass(self, 'hide');
            self.insertAdjacentHTML('afterend', template);
        });
        this.setupListeners();
    };
    Select.prototype.setupListeners = function () {
        var self = this;
        var qId = self.qId;
        this.util.listener(this.$body, "click", "#" + qId + " .cc-select-option", function (e) {
            console.log('click cc-select-option', this);
            var value = this.getAttribute('data-value');
            //select cc-select-wrapper
            //todo: write a function to directly select parent via selector
            var selectOptions = this.parentNode;
            var select = selectOptions.parentNode.parentNode;
            this.select = select;
            var selectWrapper = select.parentNode;
            console.log(select);
            console.log(selectOptions);
            console.log(selectWrapper);
            //select all cc-select-option and remove class selection
            selectWrapper.querySelectorAll("select")[0].value = value;
            // self.util.removeClassAll(selectOptions.querySelectorAll(".cc-select-option"), "selection");
            // this.parents(".cc-select-options").find(".cc-select-option").removeClass("selection");
            self.util.addClass(this, "selection");
            self.util.removeClassAll(select, "opened");
            select.querySelectorAll('.cc-select-trigger')[0].textContent = this.textContent;
        });
        var ref = this.util.initListener('click', "#" + qId + " .cc-select-trigger", function (e) {
            self.$html.addEventListener('click', function () {
                self.util.removeClassAll(document.querySelectorAll(".cc-select"), "opened");
                self.$html.removeEventListener('click', function () {
                });
            });
            var ccSelect = this.parentNode;
            console.log('click cc-select-trigger', ccSelect);
            self.util.toggleClass(ccSelect, "opened");
            e.stopPropagation();
        });
        this.listeners.push(ref);
        ref.internalHandler = this.util.listener(this.$body, ref.type, ref.id, ref.cb);
    };
    Select.prototype.destroyListeners = function () {
        for (var _i = 0, _a = this.listeners; _i < _a.length; _i++) {
            var listener = _a[_i];
            this.util.removeListener(this.$body, listener.type, listener.internalHandler);
        }
        return true;
    };
    Select.prototype.setValue = function (value) {
        var self = this;
        var qId = self.qId;
        var select;
        select = document.querySelectorAll("#" + qId + " select")[0];
        select.value = value;
        document.querySelectorAll("#" + qId + " .cc-select-trigger")[0].textContent = value;
    };
    return Select;
}());
exports.Select = Select;


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DomUtilities_1 = __webpack_require__(0);
var Theme = /** @class */ (function () {
    function Theme(brandColor) {
        this.util = new DomUtilities_1.DomUtilities();
        this.brandColorDark = this.util.shadeBlendConvert(-0.3, brandColor, undefined);
        this.brandColorWhite = this.util.shadeBlendConvert(0.1, brandColor, undefined);
        var css = '\
		#progressBar{ \
			background : ' + this.brandColorDark + ';\
		}\
		#progress-line{ \
			background: ' + brandColor + ' \
		}\
		.cc-checkbox input[type="checkbox"]:checked + label:before {\
			background:' + brandColor + ';\
		}\
		.overlay.glass{\
			background-color:' + this.util.hexToRGB(brandColor, .5) + ';\
		}\
		.cc-checkbox input[type="checkbox"]:checked + label:after {\
			border-color: #fff;\
		}\
		.cc-checkbox input[type="radio"]:checked + label:before {\
			border-color: ' + brandColor + ';\
		}\
		.cc-checkbox input[type="radio"]:checked + label:before {\
			border-color: ' + brandColor + ';\
		}\
		.cc-checkbox input[type="radio"]:checked + label:after {\
			background: ' + brandColor + ';\
		}\
		.form-control:focus {\
			border-color: ' + brandColor + ';\
		}\
		.cc-message-box__btn{\
			background: ' + brandColor + ';\
			color:#fff;\
		}\
		.submit-icon{\
			 background-image: url("data:image/svg+xml,%3Csvg width=\'47px\' height=\'47px\' viewBox=\'0 0 47 47\' version=\'1.1\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3E%3C!-- Generator: Sketch 46 %2844423%29 - http://www.bohemiancoding.com/sketch --%3E%3Ctitle%3EGroup 16%3C/title%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3Ccircle id=\'path-1\' cx=\'19.3130459\' cy=\'19.3130459\' r=\'19.3130459\'%3E%3C/circle%3E%3Cfilter x=\'-18.1%25\' y=\'-12.9%25\' width=\'136.2%25\' height=\'136.2%25\' filterUnits=\'objectBoundingBox\' id=\'filter-2\'%3E%3CfeOffset dx=\'0\' dy=\'2\' in=\'SourceAlpha\' result=\'shadowOffsetOuter1\'%3E%3C/feOffset%3E%3CfeGaussianBlur stdDeviation=\'2\' in=\'shadowOffsetOuter1\' result=\'shadowBlurOuter1\'%3E%3C/feGaussianBlur%3E%3CfeColorMatrix values=\'0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.116423234 0\' type=\'matrix\' in=\'shadowBlurOuter1\'%3E%3C/feColorMatrix%3E%3C/filter%3E%3C/defs%3E%3Cg id=\'Page-1\' stroke=\'none\' stroke-width=\'1\' fill=\'none\' fill-rule=\'evenodd\'%3E%3Cg id=\'1-copy-20\' transform=\'translate%28-1246.000000, -664.000000%29\'%3E%3Cg id=\'Group-16\' transform=\'translate%281250.000000, 666.000000%29\'%3E%3Cg id=\'Oval-4\'%3E%3Cuse fill=\'white\' fill-opacity=\'1\' filter=\'url%28%23filter-2%29\' xlink:href=\'%23path-1\'%3E%3C/use%3E%3Cuse fill=\'' + encodeURI(brandColor) + '\' fill-rule=\'evenodd\' xlink:href=\'%23path-1\'%3E%3C/use%3E%3C/g%3E%3Cg id=\'Group-5\' transform=\'translate%2812.000000, 11.000000%29\' fill-rule=\'nonzero\' fill=\'%23FFFFFF\'%3E%3Cg id=\'fast-forward-arrows\' transform=\'translate%286.173934, 0.000000%29\'%3E%3Cpolygon id=\'Shape\' points=\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\'fast-forward-arrows-copy\'%3E%3Cpolygon id=\'Shape\' points=\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E");\
		 }\
		html[dir="rtl"] .submit-icon{\
			background-image: url("data:image/svg+xml,%3Csvg width=\'47px\' height=\'47px\' viewBox=\'0 0 47 47\' version=\'1.1\' xmlns=\'http://www.w3.org/2000/svg\' xmlns:xlink=\'http://www.w3.org/1999/xlink\'%3E%3C!-- Generator: Sketch 46.2 %2844496%29 - http://www.bohemiancoding.com/sketch --%3E%3Cdesc%3ECreated with Sketch.%3C/desc%3E%3Cdefs%3E%3C/defs%3E%3Cg id=\'Page-1\' stroke=\'none\' stroke-width=\'1\' fill=\'none\' fill-rule=\'evenodd\'%3E%3Cg id=\'Submit_Icon\'%3E%3Cg id=\'Oval-4\'%3E%3Cg id=\'path-1-link\' fill-rule=\'nonzero\' fill=\'%23white\'%3E%3Ccircle id=\'path-1\' cx=\'19.3130459\' cy=\'19.3130459\' r=\'19.3130459\'%3E%3C/circle%3E%3C/g%3E%3Cg id=\'path-1-link\' fill=\'' + encodeURI(brandColor) + '\'%3E%3Ccircle id=\'path-1\' cx=\'19.3130459\' cy=\'19.3130459\' r=\'19.3130459\'%3E%3C/circle%3E%3C/g%3E%3C/g%3E%3Cg id=\'Group-5\' transform=\'translate%2812.000000, 11.000000%29\' fill-rule=\'nonzero\' fill=\'%23ffffff\'%3E%3Cg id=\'fast-forward-arrows\' transform=\'translate%2811.173934, 8.500000%29 scale%28-1, 1%29 translate%28-11.173934, -8.500000%29 translate%286.173934, 0.000000%29\'%3E%3Cpolygon id=\'Shape\' points=\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\'%3E%3C/polygon%3E%3C/g%3E%3Cg id=\'fast-forward-arrows-copy\' transform=\'translate%285.000000, 8.500000%29 scale%28-1, 1%29 translate%28-5.000000, -8.500000%29 \'%3E%3Cpolygon id=\'Shape\' points=\'0.993357559 0 0 0.993357559 7.30823082 8.3015552 0 15.6097197 0.993357559 16.6030772 9.29491276 8.3015552\'%3E%3C/polygon%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/g%3E%3C/svg%3E%0A");\
		}\
		.cc-question-container__required-label{\
			color: ' + brandColor + ';\
		}\
		input[type="range"]::-webkit-slider-runnable-track{\
			background: ' + brandColor + ' !important;\
			   background: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\
			   background: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\
			   background: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\
			   filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\
		   }\
		input[type="range"]::-moz-range-track {\
			background: ' + brandColor + ' !important;\
			background: -moz-linear-gradient(-45deg, ' + brandColor + ' 0%, ' + this.brandColorDark + ' 100%)!important;\
			background: -webkit-linear-gradient(-45deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\
			background: linear-gradient(135deg, ' + brandColor + ' 0%,' + this.brandColorDark + ' 100%)!important;\
			filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=' + brandColor + ', endColorstr=' + this.brandColorDark + ',GradientType=1 );\
		}\
		   input[type="range"]::-webkit-slider-thumb{\
			border: 1px solid ' + brandColor + ' ;\
			background-color: #fff;\
		   }\
		   input[type="range"]::-moz-range-thumb {\
			border: 1px solid ' + brandColor + ' ;\
			background-color: #fff;\
		   }\
		 @media (max-width: 767px){\
	 			.overlay.glass{\
	 			background-color:rgba(255,255,255,.85);\
	 			background-image:none;\
				}\
				.cc-popup-container{\
					background-color : transparent;\
				}\
				.cc-popup-container .overlay.glass{\
					background-color : ' + this.util.hexToRGB(brandColor, .9) + ';\
				}\
				.cc-popup-container .cc-message-box .cc-message-box__text{\
					color:#fff;\
				}\
		';
        this.util.appendStyle(css);
    }
    return Theme;
}());
exports.Theme = Theme;


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var ConditionalFlowFilter = /** @class */ (function () {
    function ConditionalFlowFilter() {
    }
    ConditionalFlowFilter.filterQuestion = function (surveyHandler, question) {
        var aAddedCount = 0;
        var aRemovedCount = 0;
        if (surveyHandler.getAnswerForQuestionId(question.id) != null) {
            for (var _i = 0, _a = surveyHandler.getConditionalSurveyQuestions(); _i < _a.length; _i++) {
                var aQuestion = _a[_i];
                if (aQuestion.conditionalFilter != null) {
                    var iSatisfied = false;
                    var iFailed = false;
                    for (var _b = 0, _c = aQuestion.conditionalFilter.filterquestions; _b < _c.length; _b++) {
                        var aFilterByQuestion = _c[_b];
                        if (ConditionalFlowFilter.isAnd(aFilterByQuestion)) {
                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion) && !iFailed) {
                                iSatisfied = true;
                            }
                            else {
                                iFailed = true;
                                break;
                            }
                        }
                        else if (ConditionalFlowFilter.isOr(aFilterByQuestion)) {
                            if (ConditionalFlowFilter.doesSatisfy(surveyHandler, aFilterByQuestion)) {
                                iSatisfied = true;
                                break;
                            }
                        }
                    }
                    if (iSatisfied && !iFailed) {
                        if (!surveyHandler.getSurveyQuestions().includes(aQuestion)) {
                            surveyHandler.getSurveyQuestions().push(aQuestion);
                            aAddedCount++;
                        }
                    }
                    else {
                        if (surveyHandler.getSurveyQuestions().includes(aQuestion)) {
                            aRemovedCount++;
                            surveyHandler.getSurveyQuestions().splice(surveyHandler.getSurveyQuestions().indexOf(aQuestion), 1);
                            // surveyHandler.removePartial(aQuestion.id);
                            //removing from partial requires not posting partial after each question rather than posting them all at once.
                            surveyHandler.removeAnswer(aQuestion.id);
                        }
                    }
                }
            }
        }
        if (aAddedCount > 0 || aRemovedCount > 0) {
            surveyHandler.getSurveyQuestions().sort(ConditionalFlowFilter.questionCompare);
            // surveyHandler.sendConditionalFLowQuestionsData(surveyHandler.getSurveyQuestions().size());
        }
        console.log(surveyHandler.getSurveyQuestions());
    };
    ConditionalFlowFilter.questionCompare = function (a, b) {
        return a.sequence - b.sequence;
    };
    ConditionalFlowFilter.isAnd = function (filterQuestion) {
        if (filterQuestion.groupBy == null || filterQuestion.groupBy.toUpperCase() == "AND") {
            return true;
        }
        return false;
    };
    ConditionalFlowFilter.isOr = function (filterQuestion) {
        if (filterQuestion.groupBy != null && filterQuestion.groupBy.toUpperCase() == "OR") {
            return true;
        }
        return false;
    };
    ConditionalFlowFilter.isNumberCheck = function (filterQuestion) {
        if (filterQuestion.answerCheck[0].includes("lt") || filterQuestion.answerCheck[0].includes("gt") || filterQuestion.answerCheck[0].includes("eq")) {
            return true;
        }
        return false;
    };
    /**
     * Contains logic to control conditional flow and whether to show or hide the questions based on the user input
     *
     * @param filterQuestion
     * @return
     */
    ConditionalFlowFilter.doesSatisfy = function (surveyHandler, filterQuestion) {
        if (ConditionalFlowFilter.isNumberCheck(filterQuestion)) {
            if (filterQuestion.answerCheck[0].toLowerCase() == "lt") {
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput < filterQuestion.number) {
                        return true;
                    }
            }
            else if (filterQuestion.answerCheck[0].toLowerCase() == ("gt")) {
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput > filterQuestion.number) {
                        return true;
                    }
            }
            else if (filterQuestion.answerCheck[0].toLowerCase() == ("eq")) {
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).numberInput == filterQuestion.number) {
                        return true;
                    }
            }
        }
        else {
            var iFoundAll = false;
            for (var _i = 0, _a = filterQuestion.answerCheck; _i < _a.length; _i++) {
                var aAnswer = _a[_i];
                if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId) != null)
                    if (surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput != null && surveyHandler.getAnswerForQuestionId(filterQuestion.questionId).textInput.includes(aAnswer)) {
                        iFoundAll = true;
                    }
                    else {
                        iFoundAll = false;
                        break;
                    }
            }
            if (iFoundAll)
                return true;
        }
        return false;
    };
    return ConditionalFlowFilter;
}());
exports.ConditionalFlowFilter = ConditionalFlowFilter;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Slider = /** @class */ (function () {
    function Slider() {
        this.inputRange = document.getElementsByClassName('range')[0];
        this.rangeTip = this.inputRange.parentNode.querySelectorAll(".act-slider-tip")[0];
        //  this.maxValue = 100; // the higher the smoother when dragging
        this.speed = 5;
        // set min/max value
        // this.inputRange.min = 0;
        this.inputRange.min = this.inputRange.getAttribute('min');
        // this.inputRange.max = this.maxValue;
        this.inputRange.max = this.inputRange.getAttribute('max');
        this.setupListeners();
    }
    Slider.prototype.setupListeners = function () {
        var self = this;
        // bind events
        this.inputRange.addEventListener('mouseup', this.clearTo, false);
        // this.inputRange.addEventListener('mousedown', this.updateRangeTip, false);
        // this.inputRange.addEventListener('mousedown', this.unlockStartHandler, false);
        // this.inputRange.addEventListener('mousestart', this.unlockStartHandler, false);
        // this.inputRange.addEventListener('mouseup', this.unlockEndHandler, false);
        // this.inputRange.addEventListener('touchend', this.unlockEndHandler, false);
        // move gradient
        this.inputRange.addEventListener('input', function () {
            self.updateRangeTip();
            //Change slide thumb color on way up
            if (this.value > 20) {
                self.inputRange.classList.add('ltpurple');
            }
            if (this.value > 40) {
                self.inputRange.classList.add('purple');
            }
            if (this.value > 60) {
                self.inputRange.classList.add('pink');
            }
            //Change slide thumb color on way down
            if (this.value < 20) {
                self.inputRange.classList.remove('ltpurple');
            }
            if (this.value < 40) {
                self.inputRange.classList.remove('purple');
            }
            if (this.value < 60) {
                self.inputRange.classList.remove('pink');
            }
        });
    };
    Slider.prototype.updateRangeTip = function () {
        var self = this;
        this.rangeTip.style.display = 'block';
        this.rangeTip.innerHTML = this.inputRange.value;
        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) )*100);
        // console.log(( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + "px");
        // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + "px" ;
        // if( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) * 100 < 50.0 ) {
        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) + this.rangeTip.getBoundingClientRect().width / 2  + "px" ;
        // } else {
        //   // this.rangeTip.style.left = ( parseFloat(this.inputRange.value)/parseFloat(this.inputRange.max) ) * parseFloat(this.inputRange.getBoundingClientRect().width) - this.rangeTip.getBoundingClientRect().width / 2 + "px" ;
        // }
        // if(parseInt(this.rangeTip.style.left) <= 50 ){
        //   // console.log("calc( "+ this.rangeTip.style.left +" + "+ this.rangeTip.getBoundingClientRect().width + "px )");
        //   this.rangeTip.style.left = " calc( "+ this.rangeTip.style.left +" + "+ 12 + "px )";
        // }else{
        //   console.log("calc( "+ this.rangeTip.style.left +" - "+ this.rangeTip.getBoundingClientRect().width + "px )");
        //   this.rangeTip.style.left = " calc( "+ this.rangeTip.style.left +" - "+ this.rangeTip.getBoundingClientRect().width + "px )";
        // }
        // console.log(this.rangeTip.style.left);
        if (this.timeout) {
            clearTimeout(this.timeout);
        }
        this.timeout = setTimeout(function () {
            self.rangeTip.style.display = 'none';
        }, 300);
    };
    Slider.prototype.clearTo = function () {
        clearTimeout(this.timeout);
    };
    // listen for unlock
    // unlockStartHandler() {
    //   let self : any = this;
    //   // clear raf if trying again
    //   window.cancelAnimationFrame(this.rafID);
    //   // set to desired value
    //   this.currValue = +self.value;
    // }
    // unlockEndHandler() {
    //   // store current value
    //   this.currValue = + this.value;
    //   // determine if we have reached success or not
    //   if(this.currValue >= this.maxValue) {
    //      this.successHandler();
    //   }
    //   else {
    //      this.rafID = window.requestAnimationFrame(this.animateHandler);
    //   }
    // }
    // handle range animation
    Slider.prototype.animateHandler = function () {
        // calculate gradient transition
        var transX = this.currValue - this.maxValue;
        // update input range
        this.inputRange.value = this.currValue;
        //Change slide thumb color on mouse up
        if (this.currValue < 20) {
            this.inputRange.classList.remove('ltpurple');
        }
        if (this.currValue < 40) {
            this.inputRange.classList.remove('purple');
        }
        if (this.currValue < 60) {
            this.inputRange.classList.remove('pink');
        }
        // determine if we need to continue
        if (this.currValue > -1) {
            window.requestAnimationFrame(this.animateHandler);
        }
        // decrement value
        this.currValue = this.currValue - this.speed;
    };
    // handle successful unlock
    Slider.prototype.successHandler = function () {
    };
    return Slider;
}());
exports.Slider = Slider;


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
//Manages trigger.
var Cookie_1 = __webpack_require__(3);
var Constants_1 = __webpack_require__(4);
//collect initial data
//if on site time is null, add on site time
if (Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime) == null) {
    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteStartTime, new Date(), undefined, undefined);
}
//always add on page Time
Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageStartTime, new Date(), undefined, undefined);
var sitePageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount);
if (sitePageViewCount == null) {
    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, 1, undefined, undefined);
}
else {
    sitePageViewCount = (parseInt(sitePageViewCount) + 1).toString();
    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSitePageViewCount, sitePageViewCount, undefined, undefined);
}
var individualPageViewCount = Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerIndividualPageViewCount);
if (individualPageViewCount == null) {
    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, 1, undefined, window.location.href);
}
else {
    individualPageViewCount = (parseInt(individualPageViewCount) + 1).toString();
    Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerIndividualPageViewCount, individualPageViewCount, undefined, window.location.href);
}
window.onscroll = function (e) {
    // called when the window is scrolled.  
    var doc = document.documentElement;
    var left = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);
    var top = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);
    console.log(top);
    TriggerManager.processScrollTriggers(top);
};
//TriggerManager adds to survey Queue
var TriggerManager = /** @class */ (function () {
    function TriggerManager() {
        //initialize triggers
        //add those triggers which aren't completed yet.
    }
    TriggerManager.addSurvey = function (surveyId, trigger) {
        TriggerManager.triggerInstances[surveyId] = trigger;
        if (Object.keys(TriggerManager.triggerInstances).length >= 1) {
            console.log(TriggerManager.triggerInterval);
            if (TriggerManager.triggerInterval == null) {
                console.log("TriggerHandler : Setting up Interval Trigger Handlers.");
                TriggerManager.triggerInterval = setInterval(TriggerManager.processIntervalTriggers, 1000);
            }
            //processing sequential triggers if any.
            // console.log("TriggerHandler : Processing sequential triggers for  " + surveyId);
            // TriggerManager.processTriggersBySurveyId(surveyId);
        }
    };
    TriggerManager.removeSurvey = function (surveyId) {
        delete TriggerManager.triggerInstances[surveyId];
        if (Object.keys(TriggerManager.triggerInstances).length == 0) {
            clearInterval(TriggerManager.triggerInterval);
        }
    };
    TriggerManager.processIntervalTriggers = function () {
        //if some survey is already running skip processing surveys for now?or queue it?.
        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);
        Cookie_1.Cookie.set(Constants_1.Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);
        //set cookies and call every process Interval Triggers.
        for (var trigger in TriggerManager.triggerInstances) {
            TriggerManager.triggerInstances[trigger].processIntervalTriggers();
        }
    };
    TriggerManager.processScrollTriggers = function (scrollNow) {
        for (var trigger in TriggerManager.triggerInstances) {
            //process all scroll triggers.
            TriggerManager.triggerInstances[trigger].processScrollTriggers(scrollNow);
        }
    };
    TriggerManager.disableTriggers = function (surveyId) {
        TriggerManager.triggerInstances[surveyId].disableTriggers();
    };
    TriggerManager.triggerInterval = null;
    TriggerManager.triggerInstances = {};
    return TriggerManager;
}());
exports.TriggerManager = TriggerManager;
;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Cookie_1 = __webpack_require__(3);
var Constants_1 = __webpack_require__(4);
var SurveyManager_1 = __webpack_require__(1);
var Triggers = /** @class */ (function () {
    function Triggers(ccsdk) {
        this.ccsdk = ccsdk;
        this.pageCountTrigger = false;
        this.siteCountTrigger = false;
        this.pageTimeTrigger = false;
        this.siteTimeTrigger = false;
        this.urlParamTrigger = false;
        this.utmParamTrigger = false;
        this.scrollPixelsTrigger = false;
        //disable all triggers.
        this.pageCountTriggerEnabled = false;
        this.siteCountTriggerEnabled = false;
        this.pageTimeTriggerEnabled = false;
        this.siteTimeTriggerEnabled = false;
        this.urlParamTriggerEnabled = false;
        this.utmParamTriggerEnabled = false;
        this.scrollPixelsTriggerEnabled = false;
    }
    Triggers.prototype.enableClickTrigger = function (target, cb) {
        document.querySelectorAll(target)[0].addEventListener('click', cb);
    };
    Triggers.prototype.enablePageCountTrigger = function (minPageCount) {
        this.minPageCount = minPageCount;
        this.pageCountTriggerEnabled = true;
        this.TriggerPopUpByPageCount();
    };
    Triggers.prototype.enableSiteCountTrigger = function (minSiteCount) {
        this.minSiteCount = minSiteCount;
        this.pageCountTriggerEnabled = true;
        this.TriggerPopUpByPageCount();
    };
    Triggers.prototype.enablePageTimeTrigger = function (minPageTime) {
        this.minPageTime = minPageTime;
        this.pageTimeTriggerEnabled = true;
        this.TriggerPopUpByTimeSpentOnPage();
    };
    Triggers.prototype.enableSiteTimeTrigger = function (minSiteTime) {
        this.minSiteTime = minSiteTime;
        this.siteTimeTriggerEnabled = true;
        this.TriggerPopUpByTimeSpentOnSite();
    };
    Triggers.prototype.enablePopUpByURLPatternTrigger = function (urlPattern) {
        this.inUrl = urlPattern;
        this.urlParamTriggerEnabled = true;
        this.TriggerPopUpByURLPattern();
    };
    Triggers.prototype.enablePopUpByUTMPatternTrigger = function (urlPattern) {
        this.utm = urlPattern;
        this.utmParamTriggerEnabled = true;
        this.TriggerPopUpByUTMParameter();
    };
    Triggers.prototype.enableScrollPixelsTrigger = function (minScrollPixels) {
        this.minScrollPixels = minScrollPixels;
        this.scrollPixelsTriggerEnabled = true;
    };
    Triggers.prototype.processIntervalTriggers = function () {
        //if survey already launched
        //skip processing.
        this.TriggerPopUpByTimeSpentOnPage();
        this.TriggerPopUpByTimeSpentOnSite();
    };
    Triggers.prototype.processScrollTriggers = function (scrollNow) {
        this.TriggerPopUpByScrollPixels(scrollNow);
    };
    Triggers.prototype.TriggerPopUpByPageCount = function () {
        var pageCount = parseInt(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSitePageViewCount));
        if (pageCount == NaN) {
            pageCount = 0;
        }
        //!(window as any).globalSurveyRunning && 
        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageCountTrigger && pageCount >= this.minPageCount) {
            this.pageCountTrigger = true;
            //displayQuestion
            // this.ccsdk.initSurvey();
            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);
        }
        else {
            //already executed.
            //or condition not satisified yet.
        }
    };
    //minPageTime in seconds
    Triggers.prototype.TriggerPopUpByTimeSpentOnPage = function () {
        var pageStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageStartTime)).getTime();
        var pageTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerPageElapsedTime)).getTime();
        //!(window as any).globalSurveyRunning && 
        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.pageTimeTrigger && Math.round((pageTime - pageStartTime) / 1000) > this.minPageTime) {
            this.pageTimeTrigger = true;
            //displayQuestion
            // this.ccsdk.initSurvey();
            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);
        }
        else {
            //already executed.
            //or condition not satisified yet.
        }
    };
    Triggers.prototype.TriggerPopUpByTimeSpentOnSite = function () {
        var siteStartTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteStartTime)).getTime();
        var siteTime = new Date(Cookie_1.Cookie.get(Constants_1.Constants.CCTriggerSiteElapsedTime)).getTime();
        //!(window as any).globalSurveyRunning && 
        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.siteTimeTrigger && Math.round((siteTime - siteStartTime) / 1000) > this.minSiteTime) {
            this.siteTimeTrigger = true;
            //displayQuestion
            // this.ccsdk.initSurvey();
            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);
        }
        else {
            //already executed.
            //or condition not satisified yet.
        }
    };
    Triggers.prototype.TriggerPopUpByInactivity = function () {
    };
    Triggers.prototype.TriggerPopUpByScrollPixels = function (scrollNow) {
        var scrollPercent = scrollNow;
        //!(window as any).globalSurveyRunning && 
        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.scrollPixelsTrigger && scrollPercent > this.minScrollPixels) {
            this.scrollPixelsTrigger = true;
            // this.ccsdk.initSurvey();
            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);
            // this.ccsdk.initSurvey();
            // SurveyManager.addSurvey(this.ccsdk.surveyToken);
        }
        else {
            //already executed?
            //or condition not satisified yet.
        }
    };
    //run only once?
    Triggers.prototype.TriggerPopUpByURLPattern = function () {
        //!(window as any).globalSurveyRunning && 
        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.urlParamTrigger && window.location.href.match(this.inUrl)) {
            this.urlParamTrigger = true;
            // this.ccsdk.initSurvey();
            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);
        }
        else {
        }
    };
    Triggers.prototype.TriggerPopUpByUTMParameter = function () {
        var utmP = this.utm.split("=");
        var utmVal = Cookie_1.Cookie.getParameterByName(utmP[0], undefined);
        //!(window as any).globalSurveyRunning && 
        if (!this.ccsdk.surveyRunning && !this.ccsdk.surveyDone && !this.utmParamTrigger && utmVal === utmP[1]) {
            this.utmParamTrigger = true;
            // this.ccsdk.initSurvey();
            SurveyManager_1.SurveyManager.addSurvey(this.ccsdk.surveyToken);
        }
    };
    Triggers.prototype.resetTriggers = function () {
        this.pageCountTrigger = false;
        this.pageTimeTrigger = false;
        this.siteTimeTrigger = false;
        this.urlParamTrigger = false;
        this.scrollPixelsTrigger = false;
    };
    return Triggers;
}());
exports.Triggers = Triggers;
// function triggerHandler(surveyHandler) {
//   //survey specific Trigger Handlers
//   // self.surveyRunning = self.util.get('#' + self.surveyToken  + "-survey").length == 1;
// Cookie.set(Constants.CCTriggerPageElapsedTime, new Date(), undefined, window.location.href);
// Cookie.set(Constants.CCTriggerSiteElapsedTime, new Date(), undefined, undefined);
//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnSite(surveyHandler.siteInterval);
//   // surveyHandler.surveyRunning = surveyHandler.util.get('#' + self.surveyToken  + "-survey").length == 1;
//   surveyHandler.triggers.TriggerPopUpByTimeSpentOnPage(surveyHandler.pageInterval);
// }
//call below functions when survey is locked and loaded.
// self.triggers.TriggerPopUpByURLPattern(/xyz=33/);
// self.triggers.TriggerPopUpByUTMParameter();
// self.triggerInterval = setInterval(self.triggerHandler, 1000, self); 


/***/ })
/******/ ]);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,